%!PS-Adobe-2.0
%%Creator: dvips(k) 2025.1 (TeX Live 2025)  Copyright 2025 Radical Eye Software
%%Title: 608f29cfa3bc7f24f6bd4c78fbde221e7ac75cd3cbd295d3627881a56f42f269.dvi
%%CreationDate: Thu Aug 21 16:17:34 2025
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 360 216
%%DocumentFonts: NimbusRomNo9L-Regu StandardSymL NimbusRomNo9L-ReguItal
%%+ CMMI10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /run/current-system/sw/bin/dvips -q -R0 -o
%+ /tmp/tmpddplvpy6/tmp.ps
%+ /home/jw/.cache/matplotlib/tex.cache/60/8f/608f29cfa3bc7f24f6bd4c78fbde221e7ac75cd3cbd295d3627881a56f42f269.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2025.08.21:1217
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2025 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
      pdf.dest.y pdf.tmpd mul add
      pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
            pdf.count 0 eq { exit } if
            counttomark 2 roll
            1 index /Rect eq
              {
                dup 4 array copy
                dup dup
                  1 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add sub
                  3 exch put
                dup
                  pdf.outerbox 2 get
                  pdf.linkmargin add
                  2 exch put
                dup dup
                  3 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add add
                  1 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                  {
                    pdf.currentrect
                    dup
                      pdf.outerbox 0 get
                      pdf.linkmargin sub
                      0 exch put
                    dup
                      pdf.outerbox 2 get
                      pdf.linkmargin add
                      2 exch put
                    dup dup
                      1 get
                      pdf.baselineskip add
                      1 exch put
                    dup dup
                      3 get
                      pdf.baselineskip add
                      3 exch put
                    /pdf.currentrect exch def
                    pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                  exch
                repeat
                pdf.currentrect
                dup
                  pdf.outerbox 0 get
                  pdf.linkmargin sub
                  0 exch put
                dup dup
                  1 get
                  pdf.baselineskip add
                  1 exch put
                dup dup
                  3 get
                  pdf.baselineskip add
                  3 exch put
                dup 2 index 2 get  2 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                SDict /pdf.pdfmark.good false put
                exit
              }
              { pdf.count 2 sub /pdf.count exch def }
            ifelse
          }
        loop
      }
    if
    /ANN
  }
    def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE585DE98B96A3F7E36CB37CE1EB1D
11E2CBF99F15F7C116DB632EB22A6C7A3C921FF716E9753F4068CD684517F327
58E8F5D1A42D40CCFB40C13249D90B00E1FB1F743CA143C191A39BA398B920B5
F25683596AADC66BF831DB6A5435937A0B37B5F1BC381AE33AB09D8ABD419796
3F247467259BADF061BF5F70E4BA0CD7D2227F5E20A5428CD87225C7FF28FDCD
4FB898A052A0B1A17FE1A99D03F851BF811AAE848B8F7F77D5075DEAF483E279
574CA2D0D685C7D7F56248A987EE709782646D145FCBC3309933A1310FD71115
A0B725E3EFD5C01936F03C32E26E9752568586AF8F68C03A0B150E234D3A5C32
A6EC201192FFD8BEC784F4132DEAEA3D477C0433ADAD9AA04C4B6A9E56344507
DFC06A839C74458AFE461803EDAAD78BF5F7A738766E78C1AD7686A3C54532B0
7F8856E3D629286E320BE4C2E6FCB731F6D39DA40442E648D10AADA23516331D
6E99469582FAC2901B629CE4137326A88F6E1DEC663321202D699E63A013EBB1
69289FB9333B6AEBEE1DE23F9179E939E8E50F7BE4118ECC2CC40F691AE9748D
2DD76D9D1546488B7E05ABAA458C5CE797A327685A564C11295A73FE3649A983
08BC5906C1DA356869FEA0B72C4FBCB931F9ADB92E0D1754C712F72AE86BB3D2
37159A840CCDDEA5AC5DF7A1CA1DD80CDDDAE0FBAB39361975EE9853129E4110
B676D6F655096130B2AFA9482F6006794C8902C6C1FBA20DA71AFBD8FF43B726
6414BBE146EBABA64AA813A47FAE8372C5528FD147FC39FBCE99CD1E5FFD007D
B0131D0FDB513D4F280E0FEE768A8A92CD12A452166A5C9ABE71B74569E1DD41
B82D849411C90C3CB8F91D3597D2B5C1C34689162EB4A741E46AD71C3E2F92EF
983C0CFF990C42221FD0ECA5100F4FEE2DF1F839B2A5D900EC8D425B6C40B5B9
10E41AF4F90FD3ABD529B568E9ADFC70F5DA72A975945FBB6481FBC4F25889CC
CD84E330E52429623FA7AE4052DB2AB8C6E032F694E7568C1EC2F84FA09BD0F0
F01A5C693C8659E5ECE5F23D7160A1ADFB56116FFB38C388F96143BA870537CC
8B3E5907807A5117A9461C92DE71A8B3E97803700E50900A684E6764E04DB261
28FBD189C68EB6ABB709890C08FCC49BE014D25D83EB3302EF6DC77C07A991FE
F25BEE480344BD6190F8D9D5E28BE28F1EA1564F1EC6F166023545189BD8A3B1
35FE7050A6DD93D6CB6FECC4AA0AA5311FB05079878AD49127A054DD75488BD6
D418099FC29029DE39F393E7D50D28C63304BA3758C76B1FAB337C3EAF5FEE2A
A93FD2247029D55D9FA528C954E4EAFB169059AB4B73F71DD0BAA29C316E190E
D07CC9D8394F8FD589D20B5D27E480E276C6EC7D7F1E96EF9322A1BEE0095949
F22E99CBD1AC1A0CB1E6893C4E497D1E90E7A0F10941DE0F2AC2D901074A7A26
0038D281FC1CAE2F2C0EFB48D54F40616650B24F804069039B2B119DA89FCC5D
526829AFA5269D4358147C82353C2086E551C702935BB5111089F167B7917C74
C072F84DC47B5496C03BF3DDFA1BF32D8F4B09C5A16AAE28B0F040E7EE320513
06E1823F29FB7E3A7C2C38BACBC1CBB32F277C3765B969071CF2D0CAB9A7A109
7F300EF1212A5129AB2E71A46C3AA6D9B5953933656C79DD1C174C26DD97D462
B4323F33B410DDF14F0CA9A2241619C4B2F00E32C603FC2A137FC9C4B8737344
18A4A802B852FCD1E62A7C503538F9EB68414E6E1A478D5C2A0D08CB39DA7D5F
522A4ED633EE963F24272A6677F20E75A8F7FB6C1EC7E50A4654EB713742AA95
C63E50BF80993281A0613CFF98053019F57EFB45BEFA31708BF7B4F1FDE43D1C
1DE8C3966B2B1A6CD470061A1D580BF1033B82D15589D5B59FACDD5FBA0A67BA
43D6851AD4CD3BC739AE2E22CCC181DFCE550A569655370A0BFF65207E08B697
B22083428A0B80FA88B4225A1C231A5FCD419B9FB64C1924B9A869A92C099B27
85EDE7018743E891829AB7E17843842B2B79B38668BD59294184EF541724C76D
FE2D93288394186255FE5DF61D3D56C1B58EFE9FC729F03CA5FFAD39370AD654
535E64EBB625FE6A8D837657B3DFD1798E2DCFCD267AE6FE18A9C1B94B2EAC61
6235C0BAE0B61EAE8E87CC52061456931DC5D4F6036E120F5A41B21C6E63FFFD
3B6FDF91E84DC8EAB8813D0EF6B468BCD047211EC42AF6FEF6C995B163501E9F
8CD1DA7AD30163A40F89C8DD55CE345AF17019DF0830D09CD3C13F50099A5692
0751A237435F344BAC5060B9B2C6A9E361B596737B54D9D84A7FA7B7AF5E1F30
49502807F277B83F698A6673DCB1AA430846DFFFE77B312956E7BF81781AFE93
42B5AAC0CD76EA67E98C61E01D64D56E8C487B4EC37FAA311671BCD21B2926BE
4C650BD6D0D1AAA740628F8FC7B19054CF4917BC54655EBA7CAAA85529DF4854
AA899ECE4676D80F8AAA5305D162D03F25881C5BE8564BF98E2ED403D2E1C486
2E5F8CAEC9D68021246F0C2147B13D704C0067DE90B53D9163DE83E046372652
4A2D7C07BE53A2306D288160160A42E31C985459988C67DCCB845094983454A3
7FAC420C7E40B979E085F5FD245FEBFEDC9BB1134443FFF918C75E485C0819C8
5E12381B4DF22BCA0CD3745599B7A5480532420A41CF958B1DDE1BEAF9868F31
824A89D352CFCD0F8E0596F26A888E4666F9505605273C5534A1E0759274A5CF
C1B7449390604E16AB929E54C97E9C65A7222BCA351A5EC76576A65D53650228
C5A196F1F3A7A5FBADAB4FCA85D1E0E9149E638845279D7FFE7C70799C898907
2BEBB498D8C5E2CB31137B0D8616D82AB98A10F43F95EBD82229A14EAD28B99B
7630ED2E2701462693C32FE5B20EADFC3993D7109373A251A6C0DE4A91156AA4
23B4CB619AF623A60202B4062B5C16639872BA0B68489D683FF7ED2FBA54C6FB
C2639414768543B1592627535B93E4E35D91D96B5C1C004397D619A40C69C388
4CEE2B5CFD4C2AB91B0E7AFF79BCA3C833902B1122D9F68B317ED427C243027D
85803BBD65F2A0EC894C2281084621D6F20C097B4F5E065DAB55FB2828A4A8A6
3B94D81C2752A1BA644FC17311CB5ADDB57F03DC08F9DA4E2894B17F2A702D09
248172C23C0CA4FDF5449C21693158245AFDB2A9F55824E46FDD6D43ECC175DB
A776F5D2EDEE6EBCE9129A8D49085ACB83B1604EBC85344EE7461F14F295D31A
31F06EBC657DF84FDB076109F2381E24C38192413C8B98F627ACF223A5DE49A1
157C7D1FEEDAC81253B600DE2A8E1DB7A5AAE5A97178430724C2707B6B404038
3C9D96516B81117FDF9A75ED5B78C4964294DCB9646F89200F36532852866789
714456C3EC774BEEE1BD62C66EB7447E75B822466B77A5F06D3BFC0640A79D10
8B59912E3A7C62C94BBEDFD72C6EAD03D56EC735F849DD7810C69913658648AD
33C8869EE235946000883C0BCB85494FEE0FA64C0EB10E3282A6CFFFE7ECB488
B9565D4B80671A357BA890C5842566FF6B6A4E80B76099B7FB474D0ABFD491A0
CBC95E3D009B049EA4F0838F42BD0ED600766E92BB2E17611E12A05367CDD318
7B1C21932B71C7313D8B9CB50AE03AEE952DBF1AFC9DDFC002A61BC46F08EDAB
E22B162DA9A78C234FA2E075B9F70239675FFC9C10517B0D218C2C21DC0F3BB8
B3BBD1D0C3ACBFA7059E492DCA4AA0C2B50FAFDEE715E86FC3F76E2AB18FCFD7
6548FD63B8AB41F3EC4985238C26D1225488A9B780043DFE114D2536479E7D64
EEBA5C449A392E7CC944A3871301FF9B6D68D84C4B105A5110210B7563D3E69F
BCCC5924146E5EEF76A3EB4F92FF24BAC582AD3F7DD4F42C692F7438519AAAEE
FDD5A136ACD1C9780AA0F25FA907699A94684125A38F9DC19D635F88DBBC73AD
3C77E7D0EC1C2534CB9A2CEA963BFB70CCA5ED0FB14FFEC866A1B6351BF489C4
6307ED8C313841A757C5FC51166D8E74E342451F03BB77319C3433A852EB0B3E
5A1B0528FA9F8BCF9EB8E3D7AF90313E70594EB5C354023BFA07912408F17571
AC6637704C683E6C590BF2EF885BE65A9F57662C7D46095F9288C41048729080
8B88F9421D506386AC95C51FF47CA13C47550B39DF3DBC13329090DC59354FBA
985DD7FD75D9EE4D3417DD8BA2491EC6C87B04F1812933FDA13292E178983EAD
8650C6CCB3E71F4BC6C5A22531D544C416761238C0CCD5EA6277D53065112C73
D7A1D290910D3E2E979BA4089A924516749083F11EE10832208AC6C4AD21BD3C
1757F90463E5D2A85A7D0AD2BC1BF088352BB8977DBA69F94504088B2B3E3F97
ED5D95F60268762B3A9E899AA25C2C92C8E401705B8508609A854BD22825312A
7F9E0109F63E133F299913389EB6F670BA5FDBFF00991C27E56CC157560A9FEB
BFE627DFFC6E90B9C4CF0D3757F9C838D08CE835765AB686D2EC1DCE1B89A216
60A5DC31DACC0163FCEAC4FA882EB97C873969EFA04D3927F36D76863F160003
83F5188E09A9E1B8C023F7E080E61F24BB62B9F111E663E75305E2472186C0A2
2C7E66E77CA598A024222D4131D798F2560E8895C3A2BAA31C54FC5E74280069
5A4CA20B5B211B6D3A21D11D231681BED9F18B0C20B9108BB6E6D6ACDF2DCFC0
21AD67515AFFC76E7CAC35A37EBDD0EC115D1E335811AB034BE92DA4FA3FAF19
8A44A01D303D252D952BB51ED9EDD2553B177E9CC3BE2A8F4CFEE4585DE58445
66E465F431B5E2B656524B6D481FF9A3F564B05F420A28F47117000402045454
657E42FD5FC63B2F8DE4942A16210EBA30A67747FA43D994391C47B3FDFFEC28
11B93E04B8805A2F21188D9487FFFB4C55FDEEDD0720A27D04C60976AA9061CB
A62C0440D75DC8310D80BCA12FD0F084E3C823943B2A3D2152B4B1E9D549F72E
2EFC9ED50202844ACA3B12A6FAD22F104A72822D2A0F98922ABB009ADCA2741F
2FEB90494BE403B0AE696300B340EDC365A27E3F05E5D9182B86F188BA8784BC
371B913AECC7827A6BE84CC3FB90B56BF285028A6CBD6697A4B8201723499564
677D8C7672D595D6E38D3BBE8FBACDF474F5682C7105777C78BB11EDB02C3DD6
C366D619361C7C93A990CE751FF568F4EB3DF8C9FEB77BE1AE1FABDEF80BA052
561F9AF9EC796CD335FECFA1752680A9E10F13F2CA6C20352FDFD48E76C57372
53FB5D2AE0F019FFA052985DAA45786E411F8AC6D254E74DC1322EEAF06419EF
A716E85BEBAB9938F99A2394F2B5338FB5790A3E1AAF6217C9CB40AD1A30A459
0B416D746AC6AF40656D93D61DC0377A495E3EB876E244D5CDFEEEAF85A99DEA
DB8727AF4262C9DC27F55D711773CCD780B6FC5C237653F036BA240F5C345EFB
B720423A9EAA38B3BDFB092B199AA4B3ED5FAA6F7B4264508923766CEF0AC15F
AD60D0F010424ACF8362CE7BFD3E1696A5488806C7977F5BFC46D8FFBAAAE5E8
E67B66B0473396CC9ED9590DF96EF0C38CFDCF8C6D6FA35ACCF281F91F870D35
4AEB25C2309B051B44A93428AE15E57287E5B474512E6BCB059B9CD735EAA5CD
232C5329470F1328006F1D1738ACDCBFD3598A50C55C2987011F42E8A33BF311
F379EE32031506079E250BC4F2352EA4F2317B4FC830F541558AE2B7BC93FBB8
7AC0D15C2818BACBAACBD8298AB19DCF0467A82845403A4DCC892D2809761DB6
13442B58CE090F133128643C2501AB8A80FF73206E55E66ECFE43EC235A91A1C
B9421DE1DD7BC5D109B52B7093D785F43D7ABE1B72934D52A44E36C743DCBF62
1BED9C80A8E6EBB13AFEC2E91DF8E2DC66F511DE861D3AEDB1755A0341E29C85
CD087CBBB8ED3F1E9916A346C8E352082E6E51C790B7521DA75E96C415ACFE77
DB3F746C5C5479266A4169D8EE58A0CB8A895CCEB5B3085B250D7CCF5D9E9A7D
CD3E74017933E1D5EE3C266FD9E412752562523CD5D8B87DDA1BF0CD988B644E
FBB6F4D622DD7FB5C5BC6F1F628D4C399E9E83271F1601535701F9D4D8E41702
63832457F2BC3680D9D81DAA41D0A3B9DEAA44A057E1E46481EEE74987024C24
9F029FE21E963C100BE1C4198E61EF3537FE93DD1A5D693C4E18AA4A4090E2D3
9F9B2E10A7B19A39EB1C2A75FD1E629A7F2199F68C8E7E6D63D128F78648CF8E
28D3CF9ABC2827A2EA9A579DC056F04C160CA0742BF58AC21FF4B709D827D4F7
5DA4D1E328C62941974E9871CB44B6B23A5DE2578548E849D93CD619378E53EA
6354D0E9698A4BE9A2F281B9A48876A7365C149661CF90E2E65AA72F8DE1F027
339447CABA396837218801A16A8B18B5CA6D776B7EE51E5DA7D2D68FA8CDE157
B233410234132706514843BB3D5C1B0075A9D3FC159336B2628C13D2CCC93963
9AED49FE1B89D9FF5EB7EA451909E52364E3D4CA6433E2D12A1E0A4F6F62668E
6449E6910BD6004EAB05E713C3C62B0853381B561B1DF2074263C84FA85FF22A
970A1C98A32E96ABABEF97AA7496BC7DC61B407842090E3499685523418A5866
5DC05214982E512670D9F815F28B5F09AC38F7B3F397CDA17EC7C2BAB88C1803
22714B666A2F5FCBA48BFB38EFFF232ABC2A736B311E9FDAD71AC751B80C6D25
673D893C04FAD6ECDE7D4739935BF6BC6F9751B2944306176F7AB5B704CCC3A7
52A37735B9C1F81610054A54D76965628E8B4EB1E7A8E709E36725A1250C5907
B8A7B5D6B23DA0989BB877A5B3EE0EBAE8E5652378AA6CA84F0A02D1BB92321A
65DE711CEEFD4A6B79611D6A3E572DA1E7CF89B30A7F275A4FE93755C89B01CE
2F1AF46EFDBDC92B419C9C7143EABB7A16445864494B181A579D373539E8AFE6
53C62369484B1011EA7C2B87226EE6A4C6526AE5DA409C055D1F1BDC06C89A7E
F1AB04C8E0875032E159EA086B4DBDA5AFF5B06734DFD7E18BFAE98A1C243F36
885E17E8DC0876544B886DE6851A9084E4B8F79E73AB562BD60E5718711C074A
9C05A17C8B497F1FA2DF655967911C771A22564F633E1D3A55F294B5CD33F1B7
1EA3C7C7876C348DD573E8D3F434C6D951CD703B8FE781EE69CE6DFFC0361654
02863E27C12E42B24F00E2DCFE85877D1181C9A329939DB53A17E216B222D4E4
B9F225EEF68B08A70D74D8C97767E60C82217AC49887C1D62A53AF5D72270603
7E2B86C88F3E096FAFFD82903F36B5547B97A506603279BFA9110A76884674AE
7E399A667E12B07C996E9E96FE28FA393C3DBB6A5864133F60264ED3F0A4EEBF
B6AC0913D6C280440DEB237A1A7CA21343691003112D06423299A2E362C45872
51183D57F315DCD2E0F47569ED675488E7513EB5D7B11B017FBCA00569C47481
3C2A9616BA94A371B1BA2B9B4A09CD15D68F9BDD5A5EF6609890B9F3164E2A29
F9D2077B7D29EE7053D34AC69C2DBBB9FF00AE72F942019A6007E06932068867
2BCCCD7EA068860F1C5275ECDEEB8017D35E25BE199A9AB7892E680A23603F22
67173A870A851C56385CDE745C84EF49F225D5F360452FA11A899F67F0FE0ED9
B64F9EED0F48C9CE0F760604F8356ABA70150375E57F66F06D0F943CB8B47B64
98BAA98F84E870B6DE6FF9635DD8C6FD508F211931143BA01D7D0A4C02D087A0
DA04F434ADF86222060AEFFF5EBFBDB921F05EF1AC6564A3371420EA9EABD2A1
44F20F58EB4D6574CB0754657BA98D993A858C73631B9EB0BA5D2020E7E0F9D3
064DD668D016CD47C8D086A4C9BA264829CBBF8536F50544122F3662354376F9
98E255DECD92AEAF5EA55B258F70E467C0A77E0A3D71A628ED2C5458AED8575A
3FDB500BBC0F9E152C30059054EE92951E4A202AB40DCD5D507108EC02D50C0D
87C31A11E0231DDCFD8B1EEA394E0E2E64636F77F4A0CEDA6815412C9200C5AA
052BC30F1A5B6C282CD2B7284B83AFD2E33DEA0218424B2D3AC14E8CA374CC57
F368646CB35F333335ED4B815DDDE464EC10133C444A86EF7C38608D246A1B43
79C45A78F0060DD19EF66DA5E780DCCA30F180F8DFB0CEC463B30E1087CD690D
714452D9A6EF9AC68D884E15ACA3BA6FE18AEF0D7973C55758853247CD5A8469
0B196CC5F2B70EBEECC042025E3BBB2FA53D9820CB441D2F40A04E04279AAA54
1DDA692A52A19A7C0017E2E88EB824ACCB6F723AFD17D0DF0856C6E34991C854
5446D1AB97E5A1AA8DDDEC792C2392B105F090FD7E9885CC6B050715AF08BC9F
BE6FE358C1B3ECFD5B2E0903AF6D630DC6F2532EFBA61D0CE72227D51ABC754D
51FBD5CD958AC9612B37E2792B04B2F2B9C909D92F0EBDCBC62BA0AA26111A5F
ACF3C6B88BCA1474167E8CEAEDF7D117235385BD69D068F1BB3C6B565D24C2A8
1EDB84A77AC0ADBE695F365835E3C5F9582E3BDDCA6BD38265BF356222C354FB
F375EC58C2E9FA510419A0F99279E81D9CE04C5C360D7677FEFC0BC3255F0100
372056688B4CE4CE5A22C8DE2B88B707256FB5CF70838F37CA99180509BF3AFB
2171FE5A3E58B2FB78175770E7C83A858CE09E4587B808417B54E603A6E083BD
DB9D46C8D6000E2F1A2F16C98F3F6F29CB97659382B803A6A26C135C483E6923
656E924A1A3AE8B1C8F2534E57EF43FB4A258159C424B359AFA87BDF0101B9EB
1A015ABFD10B2285EFEDF87704921CCFA19F6F0DAF58B4DBD7DAFEEA2C04F491
371A1350855F276D84F104D3036E3C56FDFD63FC19BA1CD0E81284BDE830DFC3
B39FC46EBDA7E1D3D4047BC3147B9AEED16E320913DE0F6F5038EC5FBFE0A25E
C67059960AB78747D798ABE0A28C3F80352864A3F80BB3DCAB92E85A1E4BC806
5BAF393FFAB924635579E7CF52B739B6D68239199BFCD1C4FF3CE4851D494EF9
7D357057B13F25CF6EDC902B83D15EE853A5DFAF99239703FE05CEDA93237C99
95C6F0BFEB3F5BC0FE45B681C73C50BA9A429E83605DD868C8F663872B230E92
1494B129F80EA04BB458FC85D08E90341B411382A5986E1F3DDF5AEA23709F8C
F3D37D34429519EACABAAEE6384883F21D51527C9ECD8B9B222D0C72AE259AD5
D13B6537F6890BF500BE3C68E4D9D40638251FE20A5C8EFD39DA710A4716E17A
4070B90E0346E0F7873BA3F30DE02C2F5F77E8E58AF3D89F865580E510F180C6
3CD039D399B1D9C4208BDE9E7AAA4D97A7DB4E6BB61E56591223190F13A772AB
D2F000AC18CE6DD3662306521C620472E803A4E69106EC5F077F30F6B956DBB9
9E2CEB0F7A22051ECD9F845CE7A4C9AEDAE269481F40D0047D85DCCCE9D936CB
EA7C2ED594230548AD06A4B2456C3A610638EE2A2B0CA82E05904B79865171F2
633B497BD548E43972F06CD14BC813817403058B0C1FAF498DFAE6AEE989B13E
D4CE0404C5D3280976718A1CD9960D54E49085DD626DD339C66746170961DBA8
559451145BAB6119A96D1D48EE4A4D4CF6A304359CB44D824CF6E964251B2B5A
2065E4EB93BE9BBEBD66758CF1DBBD48844537B8FBD511299E73BFB1DA15C775
848F511997B1076A1A87D59F0B9E2D17C0CE1FCCF9A565B82FCC943B204D2F5C
EDBBB92ED514ED927ECB4345EE8E0DF91175F92D1EF3C8A1370EEA6E0CEA9E05
5947D3223E4146831F49961A2459EF4CD26DC609368150E5B16A88F04697EB5F
467C93A2FCD9F51228089A1F88403186DD0A6DFB946CD73CE47BE33B7815A62E
64AC6F0C5EDAFEFDD2F48FC69D9D08CE3DA21095CDD4403DCFE3B967A1AF9D56
D888948044E4ED64DC37D37C89ED966010B8F6503486B93D472E448D7732AD78
ED9013657CF413F682778539204AC56BCFA25AC8D6C7B61B29B769704768D4E4
7B01BBB032409768BA7B2E377B1D18F2638DAF2392FC76498163DAE349B2B9BB
BF797DFF2F4EF958BC2AFFDC891FB87957CFA2F968943840A2861A4AA725E210
21B82B8474F50D098E6E9079D9E32610FF5A12B729B1823737F768BF66A41F3B
3AB86C54D23252A2F9B626C058F2C3F4C552E4CB23DDA3D25A690FFA7A741209
AFE5201BDB240536430C83A3A32B61200C9E60B2BE3674F0F327380828851E68
AAE84D6B8F98B88793FAD1C3035F22B3F067C6C5BC6E84915F331A5CC5FF2556
1102216F2DA83B2790635D4676E392DCC1AE31C2F5A8DB0082E76AF4F68D2CED
133BEC77160CCD6748D1E35BBA5A3A77553DD18CA65C985B12013626EED8BD99
594EA12740A532FF15F4430E205B0177843C359971850BBBC44EC5C65713292C
2D2B5BFE1A11550407021A7C3D06BEA74874DE4EACFE7CDA4FFE64DC5B7EB585
B934D1E10C8B22951A9D8963D9474134820CA1B0784E9865B00EE8B40EBC5B5E
3EF8E865B307D9AC9947B9C3FAAA29917AE133DA591F56261EFEBF59F57CE829
3ACA263A70CFF4CFFADEFA2DE4B8B8B6E3FD30BB6D697681E3CF5E657539916A
AA8378128775057D58ECD95C2CDC7BC31836AA90CBA58BBAC7844C82B6C2ECB0
327963AA6183B37BD0FE6B90BB4FB97DA2A800AC3FF91EC56E01C12C76B09980
271C1B9B8ED86C4C3E3FD568F01B17C66FE52C8FB825C16E3E6E7AAECE17AC05
44AA9E3241AA0288795DF43DC7A2F4CB520591CA7DF5F5153FE5B80DA4BD48F5
1A27C7C56B36D398694B34BC7788690A5A7FAD2675231EC68ADA27EA8A9FE651
C83DFE1D0F828A0B8F207A9F333D5DD1C856ACA48EA97EF96A558AB3C3C18730
D11645F134D7F8D11482A0DFA9042767863FFCAF6D225B9126D88CB2D99601EB
1544F8882DE8945EB08F6C78359A0352D25363B31D5624E7B41A86860C7C2218
476247ADD9ED79DC75A2A1EDFA995F7F764BD6602F5FEC7D4BCDEB9AF34D5DF9
552F6DD2F1118499514376808C3F2836DF35ACDE92ADC4A87535F30849305711
E1F2CCC5ED8519DD40F03CD3D7D966EF46DB1D6E0411FE68121552E29D6EA3FB
265BA46BD5B2740D39ED27677630F4BF0CCC1C55E3FD16F236F19235684C040A
5EDF1257A1B5CBCCDFEEFC01879125E8EB39AD64850E946B50713DDD03777B6D
BDB6DC5BBB4DABA9BC0A35CC61E84D97C7F2CF0662BD94A47A8D9310B66974F0
408B29E288D8A0612899F38A999CDD9B5D4887709C61F4BD7AF03A96ED66A1F3
521A7D994EA71EFDF3CC550B37ACE981A43B2A6E8A19A38F83F825F8008807D8
68EC1BDF8DE7F29DDE435EFFCD02D7A796F3A3E56D9E08DEE6A463E5C31C6025
F5F32750D2549D2F7D2A4214F33883226287AFA57C0865A10580702155BACAFD
69BD3E6CB845B169330167D19201D8094992F4A0FA559B8817988BAF91E21BE5
02E77D553D313E4E69A38180B6A66E4637AA54AE1DADFED6A4A507CFBE93BB32
8B3F3F5A0B3A594B8A0FFB11461EE37723FE62AE726E1A2DBDF4F12AE69FFA09
25A2C52A3D52A90079CA7DA18D254EB776332562BFE56A2A0EBF9D49798C73BE
2AAB21DC58B7449580DD2E78325B67AD0F1BDEB16AA03B1D7621A03CCF410029
618A59FE9B9B40085D7414A2BC970C268918892310735E504B216706C3B6A803
D9F87E12A371566A478822A266815DADEA4A98301B02645105D71EA7BA517E60
E211514707F37AA06D45010932287035192D750F24FA307D60D1A58B2D3F5EEA
C0F8EF33A7666BDD26A1F6D6A45A84A82E6E268FE81659E8063C5F6AB61383E7
CCA81B8A43DD0E2E36470C503289892951D67FA5CE3CB9AE8642556805B3F1E1
E79316FC30DFADEE62C368383C65375E808FBD1BEE7EC981830FFB153A9B03C3
BBA1AD844A178459E7E6E8390B122290E79FD17F834CC2D620523FE2038873E0
8713D193252FD906DC991A4F28F8802B4FC476D8FCC126EFFC4B405554C7266E
E4A9815E6E9FDF1EECA5DCFC47D20C5D789683B1EFFEA6BBE3E8D377993801D5
F0EEDDBD0FE82A7B941E365CBDB0BB118EEA576EBC861CC8C988842320040B3C
73C862C0E5DEE3C910B41317172D1E064117D7464460D492F5515AC34D34C33B
9787AC8881B04EC13AF38CB4E0B4BED93E8DDB039C9E9960E3156AE62913FA6A
633A3E1A8401673972738C1391BB4E22354137689FD2A4A78B0ECDC538590750
8006F224F0B0B18D8A275DA0A8591A2C5220EB9343187180BDAFD452CEAEA29C
73171E7E1D5E28AA0A8C1AABC5CB32E3000E40817DBCD8D4E42123EB3045293D
9F0E146B46B084E1C86409CFB6F19B23718781D6984278DA474247CC2857C925
F9DD128FBC38FCFE2DE44EF169DA401CAC6F84C18267E6028EAADCF23EB57D0E
66158510E459DC8E0BEE45EDFDF60B70FE430A40FF3608B158090533968E47A5
0194BC2F494542FCA044F513291728C75FB385378891F2954AD3F5A5DF9AD5FC
E45024F6C1E7428C4D16534D646F38CD6A2D4D8B2F54D63314E72B1FD7CA7490
709AEB3B137A2BD6D6F96773D2F86DAF0F0490729411B6D9B8F5A5AE514FEEBB
DEB6FC303A2B6601B9DEA381ADE5F1CA2C5CDF95EBAF9B8E79361C6DB1ADDCDE
2CC5B71843120AFEF72F6F13F448861C352441072D7FAC23B06DF1A7182B8EB2
09A8262A010A72A141DA7A63BA71CEB7189278185271DB1EA3F9A80A0EA8FF57
32A50B458FF48F0D1FB50C503E5130989ADAA7511B8584C5FDDAA0DE60D32C88
F96BA2FF5C6EF8E3B91BC2AF15F6FDD140DED0288C069A9AC03DFBB4B8B297F7
E0FC8D501F1C22A79148F71A62EF5CAA49D316055F12C86655CB25B6E3FEC73A
CDAE9D63646FA5CCE9D4E449527C23BE020C0FCBF162A0EBC6C4CE4EC17C4B91
2FED125C8F78B8991D48D83B4EBF43E6D4E4DD28A72646DE178CBDEC488BAEC6
2BBCB1B6B3B3395148344D3E2A56E67CE25E96D5D828862D2AB4DC089FDBA24C
3291C1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D916672480464F7E22
CA6E431FE38D3FC019BDD229E064B72C545C61C6EA55984565CCA88ACB01F744
3B4593CC8944C70F30925FB48A16342CC26D444F54CA15E5A624C4A2DAA2AEF8
404145BBA339F2A2D6FC2F3ECE54387761CA1213C8D56FF96E37C6147CA44B84
262EA87E7CC10D931E6B5B80D7F09813498497AA84ACB4AC69BC6C8481ED2953
084F560D7B1CF90555E69BD2AF7C5D944E8E3506165014652462BE1BC81CA341
E1B0725159D36DA0FFF3577D1DEBC5D91AE683FB0384
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusRomNo9L-ReguItal
%!PS-AdobeFont-1.0: NimbusRomNo9L-ReguItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular Italic) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -15.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-ReguItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-169 -270 1010 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E134D4CB5ABCED39AC635
DA001E9934C198A7F9B9ED0028A85E9AE00421DFD8EAA3BB3B4B4CE45D209303
237BD51809FE4D880900B1EEB236ACA87B9FF6EBE6B994A60AF5D67CCC42BD56
77295C346EB4C62BDC1EF22EE07DAAD928DFB73455F091F32408ED6430B97417
683AF27A03718A156E3F6E7B6E4F2E8177503CD82DDBF4557A3CCFF4C858AE7A
F7EFED6CC521A28342436B953E4650B5792BE85EA2F989EB6D986905A61FA38B
96E1BBC830B74469150FB0B598A794FD80D10870084A877273A9502C3456E5EF
74350E6E3BE5863E8BA185EB59FB87B36566AF71200B6ED389D1287D4E925E33
B2383ED05D87D48586E698FBC5D562ED9D8A09EC3EAA1B1F300224AF20C23F26
A2EADC74562571DA84B3914D1D80B127C6FF4706C7046BBB372A0013E0AB94F0
C27946583871D272BF4F20FA84E89D745DE7BBA885CC09BA72E0F530ED4EF7D1
864B3C67007ED98800284235372F0A70C912E21E851AFBF812165B8DF912CD1A
013E271F0B347967876C68AE4C4107EF8AD1F170916210034C66394A9D971B68
FBFC1131E37FC178EB97C1B2A0F573ADD9D7C0BF944E6529734DF8A7EF54485B
A3375CC30E9E328943733CBD352BC15B06C85BFB4A96994291C72A0EAE84FB01
0F1B24D0125FB8C16D60561DF8BB7AA7DDFE9549AFB70C1E89424214609FDE41
9A142892E30F02754FD234CEB3C59A2A04C06BAB7AE40E8FDEC50559B8347684
391C750987802D5452C47C1E0B5F222DE9A0EEAFEE19D796FF375A1E1EF0AEED
1BCAC4F485FCAEE18AEC585D1A9D80F41871DDA45FEF1EAE82C5893118987BEB
4D9E345C27C7419FE65E4853B40537D822E34FF1E0BD2819D21EF607981259E8
9F1040A2D708D7463858AA5381759AC49DF4DDDEB209A278FE60BD2508ACA0F4
6A249A05B652E4C7BF1B676943CDC4678C105B6F7C77CFC92B0797073A293097
27F949FFCFA845B0A8A5CB6B619B63B0A1D1981046F1B4E859D84E1710DC69E1
78C52B5FB4EA76925364202D717693407287F6EFC7FCED238E4B228002B018F8
53270938270A0BA4B7A3FDDE1DA1C862C9BDC3A2DF634276519375C5F79AB502
D918EB10300B507A1972441590EB25F30B2514EEA06C4D3BE4D8D2EFBB235EFE
FC8FE8B2C4A1D071EAC263297A33CDD908F8CE2CFC49E0FC3F4093CC6E13B870
84E461E23A4D6862F0EEA28BA7D65C10357563DFE6085FAD3790BCC95E858942
606F7BF8F2C0F92CCA49C489AC56BB4FAEB441E0B5DDFCD4F291E0BB1A9D79E8
29E1B64DE91C306B850F0DF4AEC960EE3BCDED36FEC31EAABE44B4E65AC2359C
511FCB552194CDACD36DB6FC331F8FB67C9AED9E11CE71D9034EE8704CED9534
746FB31E330BE53F44304E2B504D7A6AD4EEEBAFC8BE35B06BF8B30FFF0A5957
E39DF3DDC87E92E2FE8EE20996F52867C6CE8D2421EA47B964FDCF13CC2B720D
6EF7C16E03198453C10AA563F2964C3B13B7E54BBBF08F23F8F2FBAF141B2A24
D34C45E7B9EC8730E60E02CA72E2EFD7ECA25AC51DCB571982706F101B216B4A
F3523974378E45C892E53DF3AD9691D42235572F67AC5C0B20E59EBC60863407
0BF82CE46109C332BC95B250DDD47CA3E0C377BD150F134E5BB4F8D8247CF105
21AE6964C6B3651B2647FE0CDE1A2258F05CBAC20AE0C9F80EC7A64CB9EEAEEB
B91C50FD3E2EE0E437297DB82A1C7F8A116038BEB06DC30ED8E89BBDFE4480A3
6CD4F92ED10813F722DD86A572F602F36E083DFC32E5B188AC86BED7274A1E87
749F6B1B05B6CD5047BF5B6F6AD0D17020402FF8E0B391AF827DAB714D59E44C
0E28529DBBD0B8ACA80F6E7A468EFFDDA0F44FB32709CC52DA272724858A522B
9E47D4B5ED68BDDAFC0E87886D6FC29ED8F6CA090AB1E40AD29DA80A7C096C41
5EA3DF297D63B8DC952C181A02D22FB85F961C7CCB8ED1B80C895873C19FCFAB
9ABFE3B44D21730DBAD665A14D0D4BAD47CAD5EE287FF010AF55A4B864B822E4
BC0569E0916E6B555B31670C7044FACECC830BF9FC5B0D649CC38DD4B2E92181
38D27F49FBA3C2072D49182D661F2A720B37C4B2DCB7F7A15864E73339C9C22D
957B163CCA056BA39D1151A17BE5E15126B33BF5ADD929A8BA4892734CA9E01C
68BA3E214D7651402D5B33E72FE16213BC2778963960567849E1F6FAA1EA9DB7
F0B15679BFA992CA2D8945B38A4BF8B7E599354A843A7386A25CF46386D6975B
70E30002CEB0144F2D51EAE86EB7E2DC73C347153B9B9135A79D2898CBF02A1D
CF10A584114488D4C29EFF1D33AF0E3963EFD8E46345800DD13C04021FC924C8
8B19890571C60821FD932122CC04FEC35A0023F82192384592AD70FFB677B3AF
AF00AF6D367DB450F76362FD9E1C29E1A346FB1770D3FF36D19AB569AD0865E2
6C9F0048B1100CBB9EF077EF22D373A323A5A71768EDB3C6F00EF26E6A7A7017
EA3D220AC1798A57016655ECE23DD15FE98E5E0C7519713F428B1FC2FB48077B
4425BF9C0A6D19EED9BDD676E024F7EE6BE807B0A35F60A22424F35556D8E511
32CC55FA85395C32015B9A74FD769BD4F84636731784045350D1D50BC3011EFD
FB147F180E92CC82590F8EF5F74EC3A58D591F9B586DB505482DF19ECB34B055
3EEE8FDB3F3EBD72B45174DFBE7FD0F25AEB087C6B0166544FCB3278F5E3EABA
107B786883BC214F7891F216DCA5A69EDC35A1E0397EB24A96D1C1CEBA8167CF
D9F3D47E3CAD2E351212FCB66B4CE961B5E674C570FBECF2A3C67FA67497227D
76FDF77A2CB059C9873B5D20B18494E799C252491837502E5E04C49611BBAEB0
1B511989F7F8381B8048E5EF027D419F0639B7F4A00FB7100880A8281CE99EB1
F02B9DD81F65C8C87287497E0B1690F67C582A198131CE129C1007744AF621B6
B1FDE1B7BE9A262300C69FFDE29B0DBED7874524A07771903C88229608F00BC8
9501EFA06B522AADB02329636DC8F1DA219347832DB7DE9FA705A2C6E17FAB4C
FA3CF2F545B7276291BC6865B55729AB3CB5505A090935A070380F95761C151F
2973CA182AAFD953E8E1D271CD1083CB61935F376EB29DCECEA5257820D073B4
CB9000884CA767A32F087DDBC91AC53979DFBAAFB793970ADDA777EAE36EE564
A17662B16AD803DF81417053EF37208FE44BA871624782
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 23681430 14208860 1000 600 600
(/home/jw/.cache/matplotlib/tex.cache/60/8f/608f29cfa3bc7f24f6bd4c78fbde221e7ac75cd3cbd295d3627881a56f42f269.dvi)
@start /Fa 147[26 35[67 4[61 67[{ TeXBase1Encoding ReEncodeFont }3
92.1551 /NimbusRomNo9L-Regu rf /Fc 197[28 58[{}1 99.6264
/CMMI10 rf /Fe 162[41 1[41 15[90 29[41 45[{
 TeXBase1Encoding ReEncodeFont }4 124.533 /NimbusRomNo9L-Regu
rf /Ff 167[76 3[69 84[{ TeXBase1Encoding ReEncodeFont }2
124.533 /NimbusRomNo9L-ReguItal rf /Fh 201[50 50 50 50
50 50 50 48[{ TeXBase1Encoding ReEncodeFont }7 99.6264
/NimbusRomNo9L-Regu rf /Fj 139[23 32 28 1[42 1[42 65
23 4[42 28 37 1[37 1[37 13[46 2[46 80[{ TeXBase1Encoding ReEncodeFont }
14 83.022 /NimbusRomNo9L-Regu rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black -600 1200 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 -600
1200 a -600 1200 a
 /PSfrag where{pop(psmarker0)[[0(bl)1 0.000000]](psmarker1)[[1(bl)1
0.000000]](psmarker2)[[2(bl)1 0.000000]](psmarker3)[[3(bl)1 0.000000]](psmarker4)[[4(bl)1
0.000000]](psmarker5)[[5(bl)1 0.000000]](psmarker6)[[6(bl)1 0.000000]](psmarker7)[[7(bl)1
0.000000]](psmarker8)[[8(bl)1 0.000000]](psmarker9)[[9(bl)1 0.000000]](psmarker10)[[10(bl)1
0.000000]](psmarker11)[[11(bl)1 0.000000]](psmarker12)[[12(bl)1 90.000000]]13
0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 -600 1200 a @beginspecial 0 @llx 0
@lly 360 @urx 216 @ury 3600 @rwi @clip @setspecial
%%BeginDocument: /tmp/tmpm676j4xz/tmp.ps
%!PS-Adobe-3.0 EPSF-3.0
%%LanguageLevel: 3
%%Title: T-vs-HCl-compare.eps
%%Creator: Matplotlib v3.10.3, https://matplotlib.org/
%%CreationDate: Thu Aug 21 12:17:34 2025
%%BoundingBox: 0 0 360 216
%%HiResBoundingBox: 0.000000 0.000000 360.000000 216.000000
%%EndComments
%%BeginProlog
/mpldict 8 dict def
mpldict begin
/_d { bind def } bind def/m { moveto } _d/l { lineto } _d/r { rlineto } _d/c { curveto } _d/cl { closepath } _d/ce { closepath eofill } _d/sc { setcachedevice } _d
end
%%EndProlog
mpldict begin
0 0 translate
0 0 360 216 rectclip
gsave
0 0 m
360 0 l
360 216 l
0 216 l
cl
1 setgray
fill
grestore
gsave
58.888896 42.360788 m
349.2 42.360788 l
349.2 205.2 l
58.888896 205.2 l
cl
1 setgray
fill
grestore
1 setlinewidth
1 setlinejoin
0 setlinecap
[] 0 setdash
0 setgray
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
72.0849 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
72.0849 205.2 o
grestore
gsave
60.13 30.672 moveto
(psmarker0)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
124.869 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
124.869 205.2 o
grestore
gsave
112.914 30.672 moveto
(psmarker1)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
177.653 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
177.653 205.2 o
grestore
gsave
165.697 30.672 moveto
(psmarker2)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
230.436 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
230.436 205.2 o
grestore
gsave
218.481 30.672 moveto
(psmarker3)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
283.22 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
283.22 205.2 o
grestore
gsave
271.265 30.672 moveto
(psmarker4)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
336.004 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
336.004 205.2 o
grestore
gsave
324.049 30.672 moveto
(psmarker5)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
61.5281 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
61.5281 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
82.6416 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
82.6416 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
93.1984 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
93.1984 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
103.755 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
103.755 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
114.312 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
114.312 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
135.425 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
135.425 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
145.982 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
145.982 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
156.539 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
156.539 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
167.096 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
167.096 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
188.209 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
188.209 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
198.766 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
198.766 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
209.323 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
209.323 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
219.88 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
219.88 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
240.993 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
240.993 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
251.55 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
251.55 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
262.107 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
262.107 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
272.663 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
272.663 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
293.777 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
293.777 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
304.334 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
304.334 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
314.891 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
314.891 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
325.447 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
325.447 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
346.561 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
346.561 205.2 o
grestore
gsave
186.702 11.599 moveto
(psmarker6)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 48.7904 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 48.7904 o
grestore
gsave
28.167 44.654 moveto
(psmarker7)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 81.4704 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 81.4704 o
grestore
gsave
28.167 77.334 moveto
(psmarker8)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 114.15 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 114.15 o
grestore
gsave
28.167 110.014 moveto
(psmarker9)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 146.83 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 146.83 o
grestore
gsave
28.167 142.694 moveto
(psmarker10)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 179.51 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 179.51 o
grestore
gsave
28.167 175.374 moveto
(psmarker11)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 55.3264 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 55.3264 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 61.8624 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 61.8624 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 68.3984 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 68.3984 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 74.9344 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 74.9344 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 88.0064 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 88.0064 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 94.5424 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 94.5424 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 101.078 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 101.078 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 107.614 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 107.614 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 120.686 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 120.686 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 127.222 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 127.222 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 133.758 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 133.758 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 140.294 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 140.294 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 153.366 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 153.366 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 159.902 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 159.902 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 166.438 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 166.438 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 172.974 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 172.974 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 186.046 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 186.046 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 192.582 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 192.582 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 199.118 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 199.118 o
grestore
gsave
23.422 100.603 moveto
(psmarker12)
show
grestore
2.5 setlinewidth
[16 4 2.5 4] 0 setdash
0 0 1 setrgbcolor
gsave
58.889 42.361 290.311 162.839 rectclip
72.084855 49.769316 m
78.851743 50.317213 l
85.618631 51.133831 l
92.385519 52.325854 l
99.152407 54.02747 l
105.919295 56.40236 l
112.686183 59.646375 l
119.45307 63.992981 l
126.219958 69.717311 l
132.986846 77.1261 l
139.759013 86.510658 l
146.525901 98.048993 l
153.292788 111.670679 l
160.059676 126.931921 l
166.826564 142.961144 l
173.593452 158.517814 l
180.36034 172.218259 l
187.127228 182.920965 l
193.894116 190.14423 l
200.661004 194.242305 l
207.427892 196.146896 l
214.19478 196.858994 l
220.961668 197.07893 l
227.728556 197.149192 l
234.495444 197.186774 l
241.262331 197.219781 l
248.029219 197.253442 l
254.796107 197.287102 l
261.562995 197.321416 l
268.329883 197.355403 l
275.102049 197.389064 l
281.868937 197.421744 l
288.635825 197.45279 l
295.402713 197.481875 l
302.169601 197.508673 l
308.936489 197.532856 l
315.703377 197.554425 l
322.470265 197.573706 l
329.237153 197.592007 l
336.004041 197.610634 l
stroke
grestore
1 setlinewidth
2 setlinejoin
[] 0 setdash
0 setgray
gsave
58.889 42.361 290.311 162.839 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
2 setlinejoin

0 setlinecap

0 2 m
-0.449028 0.618034 l
-1.902113 0.618034 l
-0.726543 -0.236068 l
-1.175571 -1.618034 l
-0 -0.763932 l
1.175571 -1.618034 l
0.726543 -0.236068 l
1.902113 0.618034 l
0.449028 0.618034 l
cl

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
78.8517 50.3112 o
85.6186 51.1219 o
92.3855 52.3034 o
99.1524 53.9886 o
105.919 56.34 o
112.686 59.5533 o
119.453 63.8611 o
126.22 69.5354 o
132.987 76.8765 o
139.759 86.1692 o
146.526 97.5905 o
153.293 111.08 o
160.06 126.215 o
166.827 142.151 o
173.593 157.674 o
180.36 171.416 o
187.127 182.231 o
193.894 189.608 o
200.661 193.853 o
207.428 195.864 o
214.195 196.635 o
220.962 196.88 o
227.729 196.957 o
234.495 196.996 o
241.262 197.028 o
248.029 197.061 o
254.796 197.096 o
261.563 197.132 o
268.33 197.17 o
275.102 197.21 o
281.869 197.251 o
288.636 197.294 o
295.403 197.339 o
302.17 197.385 o
308.936 197.433 o
315.703 197.483 o
322.47 197.534 o
329.237 197.585 o
336.004 197.639 o
grestore
2.5 setlinewidth
1 setlinejoin
[9.25 4] 0 setdash
0 0.5 0 setrgbcolor
gsave
58.889 42.361 290.311 162.839 rectclip
72.084855 49.762571 m
78.851743 50.282971 l
85.618631 51.046516 l
92.385519 52.155657 l
99.152407 53.743415 l
105.919295 55.973663 l
112.686183 59.044507 l
119.45307 63.191209 l
126.219958 68.680701 l
132.986846 75.791808 l
139.759013 84.776003 l
146.525901 95.796686 l
153.292788 108.843203 l
160.059676 123.628952 l
166.826564 139.491833 l
173.593452 155.35112 l
180.36034 169.814643 l
187.127228 181.506247 l
193.894116 189.574291 l
200.661004 194.105049 l
207.427892 196.05866 l
214.19478 196.676966 l
220.961668 196.842327 l
227.728556 196.91553 l
234.495444 196.976315 l
241.262331 197.034159 l
248.029219 197.090368 l
254.796107 197.145271 l
261.562995 197.19952 l
268.329883 197.253442 l
275.102049 197.306383 l
281.868937 197.358671 l
288.635825 197.410306 l
295.402713 197.461613 l
302.169601 197.512594 l
308.936489 197.563575 l
315.703377 197.614883 l
322.470265 197.666844 l
329.237153 197.720439 l
336.004041 197.775995 l
stroke
grestore
1 setlinewidth
[] 0 setdash
0 0.75 0.75 setrgbcolor
gsave
58.889 42.361 290.311 162.839 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 -2 m
0.530406 -2 1.03916 -1.789267 1.414214 -1.414214 c
1.789267 -1.03916 2 -0.530406 2 0 c
2 0.530406 1.789267 1.03916 1.414214 1.414214 c
1.03916 1.789267 0.530406 2 0 2 c
-0.530406 2 -1.03916 1.789267 -1.414214 1.414214 c
-1.789267 1.03916 -2 0.530406 -2 0 c
-2 -0.530406 -1.789267 -1.03916 -1.414214 -1.414214 c
-1.03916 -1.789267 -0.530406 -2 0 -2 c
cl

gsave
0 0.75 0.75 setrgbcolor
fill
grestore
stroke
grestore
} bind def
78.8517 50.2837 o
85.6186 51.049 o
92.3855 52.1592 o
99.1524 53.7449 o
105.919 55.9685 o
112.686 59.0282 o
119.453 63.1592 o
126.22 68.6282 o
132.987 75.713 o
139.759 84.6652 o
146.526 95.6483 o
153.293 108.654 o
160.06 123.399 o
166.827 139.229 o
173.593 155.077 o
180.36 169.562 o
187.127 181.31 o
193.894 189.454 o
200.661 194.054 o
207.428 196.044 o
214.195 196.668 o
220.962 196.822 o
227.729 196.881 o
234.495 196.929 o
241.262 196.976 o
248.029 197.023 o
254.796 197.071 o
261.563 197.119 o
268.33 197.169 o
275.102 197.221 o
281.869 197.274 o
288.636 197.33 o
295.403 197.387 o
302.17 197.447 o
308.936 197.51 o
315.703 197.576 o
322.47 197.644 o
329.237 197.716 o
336.004 197.79 o
grestore
2.5 setlinewidth
2 setlinecap
1 0 0 setrgbcolor
gsave
58.889 42.361 290.311 162.839 rectclip
72.084855 49.796496 m
78.851743 50.339919 l
85.618631 51.138409 l
92.385519 52.290037 l
99.152407 53.917012 l
105.919295 56.172064 l
112.686183 59.245358 l
119.45307 63.366243 l
126.219958 68.795114 l
132.986846 75.80305 l
139.759013 84.636459 l
146.525901 95.462696 l
153.292788 108.288624 l
160.059676 122.859337 l
166.826564 138.554244 l
173.593452 154.335752 l
180.36034 168.83457 l
187.127228 180.662449 l
193.894116 188.91252 l
200.661004 193.60341 l
207.427892 195.65931 l
214.19478 196.334806 l
220.961668 196.537096 l
227.728556 196.640365 l
234.495444 196.726967 l
241.262331 196.807686 l
248.029219 196.883504 l
254.796107 196.956054 l
261.562995 197.025335 l
268.329883 197.091676 l
275.102049 197.155075 l
281.868937 197.216186 l
288.635825 197.275011 l
295.402713 197.332527 l
302.169601 197.388737 l
308.936489 197.44462 l
315.703377 197.501156 l
322.470265 197.558673 l
329.237153 197.618478 l
336.004041 197.68057 l
stroke
grestore
1 setlinewidth
0 setlinecap
0.75 0 0.75 setrgbcolor
gsave
58.889 42.361 290.311 162.839 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-2 -2 m
2 2 l
-2 2 m
2 -2 l

gsave
0.75 0 0.75 setrgbcolor
fill
grestore
stroke
grestore
} bind def
72.0849 49.7983 o
78.8517 50.3444 o
85.6186 51.1459 o
92.3855 52.2995 o
99.1524 53.9269 o
105.919 56.1812 o
112.686 59.2531 o
119.453 63.3721 o
126.22 68.7985 o
132.987 75.8037 o
139.759 84.6345 o
146.526 95.4578 o
153.293 108.28 o
160.06 122.848 o
166.827 138.542 o
173.593 154.332 o
180.36 168.856 o
187.127 180.729 o
193.894 189.036 o
200.661 193.775 o
207.428 195.85 o
214.195 196.517 o
220.962 196.697 o
227.729 196.776 o
234.495 196.841 o
241.262 196.902 o
248.029 196.961 o
254.796 197.018 o
261.563 197.075 o
268.33 197.132 o
275.102 197.19 o
281.869 197.249 o
288.636 197.309 o
295.403 197.372 o
302.17 197.436 o
308.936 197.503 o
315.703 197.572 o
322.47 197.645 o
329.237 197.72 o
336.004 197.798 o
grestore
1.5 setlinewidth
0 setlinejoin
2 setlinecap
0 setgray
gsave
58.888896 42.360788 m
58.888896 205.2 l
stroke
grestore
gsave
349.2 42.360788 m
349.2 205.2 l
stroke
grestore
gsave
58.888896 42.360788 m
349.2 42.360788 l
stroke
grestore
gsave
58.888896 205.2 m
349.2 205.2 l
stroke
grestore

end
showpage

%%EndDocument
 @endspecial -600 1200 a
 /End PSfrag
 -600 1200 a -600 -211 a
 /Hide PSfrag
 -600
-211 a -1285 -154 a Fj(PSfrag)20 b(replacements)p -1285
-123 685 4 v -600 -120 a
 /Unhide PSfrag
 -600 -120 a -799 -20 a
  {
 -799
-20 a Black 0 0 0 TeXcolorrgb -2 x Fh(1100)p Black Black
-799 -20 a
  } 0/Place PSfrag
 -799 -20 a -799 79 a
  {
 -799 79 a Black 0 0 0
TeXcolorrgb -2 x Fh(1200)p Black Black -799 79 a
  } 1/Place PSfrag
 -799
79 a -799 179 a
  {
 -799 179 a Black 0 0 0 TeXcolorrgb -2
x Fh(1300)p Black Black -799 179 a
  } 2/Place PSfrag
 -799 179 a -799 279
a
  {
 -799 279 a Black 0 0 0 TeXcolorrgb -2 x Fh(1400)p Black
Black -799 279 a
  } 3/Place PSfrag
 -799 279 a -799 378 a
  {
 -799 378 a Black
0 0 0 TeXcolorrgb -2 x Fh(1500)p Black Black -799 378
a
  } 4/Place PSfrag
 -799 378 a -799 478 a
  {
 -799 478 a Black 0 0 0 TeXcolorrgb
-2 x Fh(1600)p Black Black -799 478 a
  } 5/Place PSfrag
 -799 478 a -889
589 a
  {
 -889 589 a Black 0 0 0 TeXcolorrgb -20 x Ff(T)47
b Fe([K])p Black Black -889 589 a
  } 6/Place PSfrag
 -889 589 a -827 688
a
  {
 -827 688 a Black 0 0 0 TeXcolorrgb -2 x Fh(0)p Fc(:)p
Fh(000)p Black Black -827 688 a
  } 7/Place PSfrag
 -827 688 a -827 788 a
  {

-827 788 a Black 0 0 0 TeXcolorrgb -2 x Fh(0)p Fc(:)p
Fh(001)p Black Black -827 788 a
  } 8/Place PSfrag
 -827 788 a -827 888 a
  {

-827 888 a Black 0 0 0 TeXcolorrgb -2 x Fh(0)p Fc(:)p
Fh(002)p Black Black -827 888 a
  } 9/Place PSfrag
 -827 888 a -827 987 a
  {

-827 987 a Black 0 0 0 TeXcolorrgb -2 x Fh(0)p Fc(:)p
Fh(003)p Black Black -827 987 a
  } 10/Place PSfrag
 -827 987 a -827 1087
a
  {
 -827 1087 a Black 0 0 0 TeXcolorrgb -2 x Fh(0)p Fc(:)p
Fh(004)p Black Black -827 1087 a
  } 11/Place PSfrag
 -827 1087 a -986 1200
a
  {
 -986 1200 a Black 0 0 0 TeXcolorrgb -22 x Ff(X)-913
1199 y Fa(HCl)-724 1178 y Fe([-])p Black Black -986 1200
a
  } 12/Place PSfrag
 -986 1200 a 2400 1200 a
 currentpoint grestore moveto
 2400 1200 a Black Black Black
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
