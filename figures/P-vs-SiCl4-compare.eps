%!PS-Adobe-2.0
%%Creator: dvips(k) 2025.1 (TeX Live 2025)  Copyright 2025 Radical Eye Software
%%Title: 2c1000badc87de32ea84f69f0d0a1985464d8b276cf640d5f61902cdb068b930.dvi
%%CreationDate: Thu Aug 21 22:09:43 2025
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 360 216
%%DocumentFonts: NimbusRomNo9L-Regu StandardSymL NimbusRomNo9L-ReguItal
%%+ CMSY10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /run/current-system/sw/bin/dvips -q -R0 -o
%+ /tmp/tmpydmilcfr/tmp.ps
%+ /home/jw/.cache/matplotlib/tex.cache/2c/10/2c1000badc87de32ea84f69f0d0a1985464d8b276cf640d5f61902cdb068b930.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2025.08.21:1809
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2025 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
      pdf.dest.y pdf.tmpd mul add
      pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
            pdf.count 0 eq { exit } if
            counttomark 2 roll
            1 index /Rect eq
              {
                dup 4 array copy
                dup dup
                  1 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add sub
                  3 exch put
                dup
                  pdf.outerbox 2 get
                  pdf.linkmargin add
                  2 exch put
                dup dup
                  3 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add add
                  1 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                  {
                    pdf.currentrect
                    dup
                      pdf.outerbox 0 get
                      pdf.linkmargin sub
                      0 exch put
                    dup
                      pdf.outerbox 2 get
                      pdf.linkmargin add
                      2 exch put
                    dup dup
                      1 get
                      pdf.baselineskip add
                      1 exch put
                    dup dup
                      3 get
                      pdf.baselineskip add
                      3 exch put
                    /pdf.currentrect exch def
                    pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                  exch
                repeat
                pdf.currentrect
                dup
                  pdf.outerbox 0 get
                  pdf.linkmargin sub
                  0 exch put
                dup dup
                  1 get
                  pdf.baselineskip add
                  1 exch put
                dup dup
                  3 get
                  pdf.baselineskip add
                  3 exch put
                dup 2 index 2 get  2 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                SDict /pdf.pdfmark.good false put
                exit
              }
              { pdf.count 2 sub /pdf.count exch def }
            ifelse
          }
        loop
      }
    if
    /ANN
  }
    def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE585DEB6892874B4D6B35F4BA2895
2DDF4C9B8200B32D7368EC950C963D1DE798F32708041E395A94A27CF34DA94C
B1F8A8AE4E95E3D9D23DBB28D017F1A5A232B2533A21F4FAF71C5CD8623B1DB3
75DEDBBC846759B3DDBACBD0BB9FE882315994E7704F25655F9332C1ACC7C130
53510645FF66168961B7D66288CF36C97474DF121FE8E9B9CDC1B4F27BDAD2A0
4EAFC90D9DEE76C678DB7E7DEAAC1AE5F0C5AA20C9489CF6BF32D2A3CAD6BD84
A5074B5832023E809B80408BB9B61C23FD31B10B777D6D0303D8672E44415545
1033CEE160F9FBE554BD27786B870B25727E7084BEA8B53016FD85CF9289DF78
EE12F3DEB4E33DCD967D167E99036FF3B1B8EA0380FFD69361F81BAF8D677E07
6CEC52D4E5526B66BC38B0CC9669D8D3BCEAEC9258D51D73C33A4D4F1488C39A
AE61A41BAC6A15727CE914A10335A0A09DDE121A580DC892423613708F967186
E210792D9EA463C2FB76BC889370A04D8682D0AE03DE6338AA0D62613C595D1E
9AA52AAD14BB8222997715DC16BB65D88A7AAD93961976DE90E40187EA775CC4
040046CF004AF4D76C8434E66ADB72B6710A1830B017A9711B886A186DB61E3F
985EEFDAD748E35BA0325B034250D21A5C6AF7938C40B271F1A009EB695B077F
72BA75DCFC69B0F51A459B5188EFD13F7DB0985F0A3C2E1487D41BD2468A7485
68DF2313ECAB9404016B1330269B6C9AAF3DA1026C2155022E70A7B97D5562F5
5C3CD0CFDD5E1917BE04D545FBCC6E46D7AF6CBF36A165C6A9931EECD7F7D180
5326919EE4DC25691389942B725B498D7198E266F5F60C70844F6230EDE6EC7A
CFC35B6AE123E6B03D9875FCC11919647E8B40A5A2EB1BB8C26FE9004BC127FB
7367DD9F70A15A766C9C67C95A518A4E514DB0410B1E140095EBEBDD09F60C7E
4966B4FAEB0406B72F8FF605BD06D53BBF45339CF66C5C2BAAA51D9353F5CABF
827F4953D76B779C8609E85E4BCFE84319532B3AC9D62BD413CFB0A7489DD69A
A1D690954DD77B0CC9B824007A7E638672D6AD3E0F12CECB7595C5E680E31F06
B8DF8A89E3A21E12FD05D033B7BB01DD0B9469C910B7A7DD6AAC7302F6B52648
2E4C9257CDC556314D5C972D3472B6DE6FF9635DD8C6FD508F211931143BA01D
7D08EF514E0ECADFAEF80EC2B6173E40E41727528710CBCC57458FB78C6ECB64
60A281A80F502523BC02292CA59363D6091443CAA846B4B896AC332DBC5C50C9
7F6B6F1227D0D8FF71335393E9F72BBFCB7462632EB6BE7CEC198632CC739EEB
8A4075951B186DF6A9B62F7C96BB4B92ED7DBAD6C2DC672BF913ED44A41A2D1E
5D98F8F36DB986C6C618AA75E527C04ED4016B8B560315BDE6D5431809F175C7
567728FBC797A6FE0A013CC97535A6E4F812454833BEF05947F6414AFB850951
B78A6A20247B49CE410908042ACDE9414264C06FB74D7FBB23BC73D4E4E6B9C2
79210579B4BC35B21A7D332C017A9411BF924DE0E40A24B0E1B797094DD8845C
4A011443ECFF92062FC963AF559C5D4B1523B5ED4D3A61F54B46D1DE5D40D181
5DEDA70A37F7C835C209DEEFDA4C340958D49A0C8B4E4459B7C691BF68F6AAEA
38232A732EB571E1337FAB56A5B753DCDC25568B1E7C3534BF816D19A02789F1
E1BE623EDD5DA9AE195DB7EB209E1E665209BF7F436E36EF8FDB117FEEB9281F
63DF50E4AD899E67574F3EFF17D3177852132E1B66D135E09A46B054E37922BF
B709F40562D7D3C9EB9D4EB8F6E12E6FD5A6843DD48105C7E99E2ED37B079F4B
1FE2A89AD72D1D1AD2BF8BC6B31E4ADB8344F23BEECB6E0DAB28979DCA9FF1E7
B3A9E1899D033E1D02CD57C8961D1E0EA51C02097026083440BA45CC8437A4D8
88FA4FA4772845A518108C5548A8E05CB03ED7A523AA1088DDB644E127A7AC36
05417DE7C8955C51F97141125A74C5B3A10EA582A5CE8765E2681E123B88B49B
1771907C9A00B8E77A5F6BA570464F63E2A8088B8DEC7CF2B7AD52EE40311B0C
1E32AAF747B4924B1EBF9AD7FC50473C958EB4A19E8FA04BEC5E4D82B4727E3E
99DF31156624038D849306B7C6796778B0918C26EBCDDAEFEAE5601617D8E22E
83FD810F7467D089C4DEFF91B8F5C4316471F294DA4E593873DA817C7194E3B7
97684A7CCB1E536599EDA6EF4C1EBB4B7FF5BFE240B4991A86975E85FDF48245
8C13BD55FDED5C43094D00F5DC190F98D7E9EFED72743DC985A8BA736D1E8338
BE5A86374A51E3FE38D5A549252250EF805FF7E152AD19C4261651F52410992A
D7BA49D6885177575599E7E004D8140FBF915D29604AE8F73D0CFD6C030B9F4F
24F9BE595279E0158FFFA8C422C060B15F1B45200E62765CB57ECA2162BD29F0
E926A1042B12AB5A6C06C21B626085A290BDCF236F813A15583AABB4EA3E50C0
7073C5F650547746D39693734B16AB45A0D6F81163095CB0228A39EAE95B4E7A
CAF678AAAC9D0ADE91AEA8BAD797B3D3E39373C85CA900ABB51A0588887110E6
695245370F6F7FFF151987C16FF39B4058F82BA185C8D5704932E3C9BCCB6A02
4D79906C2435068676CBEFD89A703F3D5E168EEAF6C44C2AEB04FCFC1DCC545C
7C06D6F2882BE27F7FECB251C07A0CBF632410D7D948427FF67D231975FDE54B
E1956BF9A81D91D6703F3AB779487FA7A56131C3C3E2DB3D9254363A00BFB2F2
B2FFC89863E4740E8895169607D57C89956B526A664B28A2AFAAA40FB98C1F25
1CB49EAE29A3AE0601DB63F00AEEF72396A4B5F518445A66CE9C98832B62DA6A
B4EB2D117BAB39735095A31BBF3C1D0D021B9AFFDB32CBB2D258B1215369A10A
6F80A7399327D4D43B6FFC7B5A56C5CE19DB05CF529A5DB0DFA4F1AE311FF2EE
1313AC86815826A0132FCFD809E2BC34AED8593685917792810E3E8A6F2D6262
4F8FE4885E026B5748C0D34BDFC204AE4868012441E36CCEB83971E3268925E4
77C69BAE522B4821985E2F3BB273C45AFD346545AD97213E44022F008129872A
03335FDFC9699749C1D9410155EC8607FB663BB0DA931A45213855A8ACA692EB
09DFB0B9563E62A6D148E6C6883E66A4A769BB5F0967CA82FF56752E49ED4F53
70E9C13F80F15A53AB003FEB30360DF39E803B20AD60430DF29080DADA2F1065
5BBF75EE92756B1520C0F07A1AB186653521EA59D67F0DD3616CD3C4E4E67479
8D19317379B6E7B5AC601690111E0CB9ECD39906D9B3A623C0D156272BFECA5D
D2A93121B6236175DFCD3B1560AFAA74D9DF308D0BAAC3DCE166BA3588A602D4
9F23554431694EA09B5052C836E87267C33303092D358D20CC0CEF5E68CFA597
117B6B2C12A6EA0E06F7E71B621851A1594C95B52D2F5A274A5B75E62A5E3581
76EF3AB1E77B958883131A3D7E011BB8BB13217CE15A0AC83803736F6688F3E5
193764BDFED65DBB7F586A4440153CD6C95A76CD17AFDDB9FFAC965ED7173614
0A0D41AD571329C7FE546B4C1F911994E458787505F98C38ECCABB39F621AF01
579DC1D014EC3759591AAF9B974EEF817A3B0F0EAE18617A6DC6D266439974A2
34EFCD5B6E0E9555876D3712B2BC1AE59AD0025944CAC4838C881C778C74E4AA
80F7E284024B480E431BFC32AD6FFF7054156B23DD85558056EFDE8757BD40D5
2FE71FB417926EE7EA7CF0F04476C42C0BCE3308F1E5DF5343790F3E7E6B10B9
BDC69BF798F350598765BFBD34976FF8B5935C8ACCFF71287C18CC525EC8D73A
F17F67AE52BC831CC060B162D9AF2B90DC7A43EA830ECF6D6772E5E775D03DC2
3611FF7B6FFDBB1D6B72C77967AA05FA6E19C18C2F2812BC62A9D7E1C46A1925
07F0B74B352EAC479E218E053ED37FBC0EB204AAD253FF338FEC59BF0B7AEB1B
5A03B7A717E254192D14BBA2CED7AE52D20752707445E43F11298F2B2836FC9F
145DC459ADFD781722202EDF2C3F52D34947E0964D0E8E89F6043C0D2C9B7891
82FA161075ACABC7546CCED07147F459F299DC7E474AAD4240CDC4A30790A98F
A4941BB3E3CB33FA45C5AE0591B53CBD3D2B9349A85E6661C1B358E0D52FFB82
4C4A41B5052F998B0B9ADA63BC50FB6D9AB4DFA133EE9236FCBE1E8F63BE7240
0C5389BB5EBFBF1BA7B9E725E68D279E58B9CA7771B3CC10B9CAC865E74A4065
48BD2671C9B286CA67CE8DC8610EA7482D4ADB30B78F38C77D3719193631709D
78D7AC50326F1000E36F3E9E75ED639EADD79A4FE8FD49FC9C8914C4A02DCB27
989E0752A84CB2D20D79D212AAF2C9C5948B3F7A5E6CBCB27417EC206476F32D
C8D14480849B85FCC583ED6BC743C7AB0E8AC821CE40D04D61E2BA36830559BC
1E8FF0C3D790FC1AB1588A55BDAD410D13310D332113ACDC8BE5129A3B4132C9
214D18884CABA6261D5605FBB803B61862CCB1613DAA8B95B2E72760EFF221B5
5861517935F29CF3FAEECABD037F5CF32D743C9C8C228427C10811415BAEA7B0
866A4B5EC9B64F1BD6C233E5273CB34FEE74A274174C0BE1080BAAEF37B58032
DB09C2EE90CBF872E344EC580B62EDE378396C70E17665381462E5A0223B1BA3
F877D2C9E6DDC4681B41A253650F396349401CA8D7E45983976ADBA0F5A42385
E23E7CAD458FD77C2EC1C285506A1AF437D288A5113059708BCDA43D0C6FC121
191C449FFADA29A496954CE81623D920C75A20AA65A6D8B235A7C8C06D63115F
1A4B4CED1C7D166759F0229C4833B053C1119E383E00396BC83F23C6C5DC1B44
67052E35343DAC8F8279434DE3037DB067834D7E53DD6D7BCAFC14DA691637E4
D1609B9FD92AAE737B73339E94007771F20B1B39A9C48BA8C17BFC58AE6EFE64
15C902BDEF89E63B2BA447EF88C111D4D3E6171D40717972791BEA532CFE5C7D
E553494A77491254A7AC517CA03DF559ABAC30BB66FE5CE9026D1D2225E4E3C7
8765E758A20AFBB9F17E7470E215C7C306142D81B1BAADC4A3C37E65B39B5E7E
C1B1921DB882C70EC94278705A9C3333859733C93CD5EC1F9E8A9E337BD16D60
04B0D7940F8B3BB3E8C7295B779748273C485A5F88DC1B5B0E562622002C3DDF
0D5BB0D1F5A4FBAE0C60213046273C0E59C78DC9EB4AE83D1CB6E4DF546FBC91
4A6FF038C6DCE92114EEA06C4D3BE4D852335F5C447A4CCA3EC75326188E2D36
3794D82FAC8806F28F4191E74EEA308B65C5DF4291734BFF24A44D3B30CE53C8
9BBD61CD379CC1D8B68FA75C331825DE98915C09AD8F5CD4C686B1D3395740B0
59BF60C6047783E14FCB2404FB1C794A648F0D3CD8F5974359257B8C08DCB8FF
E7342586B3A54791E781399189FE6ED99B790BCCAABC0774F8A63E76F51AE724
54991FD265D4E99B32AC641520A552B5D1DCBADED9387E4F979C2C7E94DC6482
734A5CC19BED91EEB71ACC1169A01E07257699B19DE36FA285F200C32DEAC4D3
1AA28E1F2F87D6F3CBC700B06F11C055C8DF673593D115958003B8C23D102D07
6F22187DE886A1E1F78EE36603CFD622B6D5B16907CE63CBBB2CEB97C82FEE8F
FF71C804D8996EFBC88F8CD4E4AC32CCBD73732EC61E323845F40614336B7A01
CC2590AE76C90C7467290F4D977B1AFE8F63247CE497ED59283809254452EE42
AE24CBA24E0B5DA068AB1665CCA7077C7E11C0B255F128BF32BD3406DFD95817
6C666D2CCBD79BE0CC6F5A17D0A887B5BE606C0A21EFE6853F86AC579A101863
B1CE6E7D800138FDFF7F5B941C7D4C1A6F1C1D375E2F6C38F1786DB3C9DEAB86
4109BDC6B7E94A3903C33AB41E835231B01F97CE9CD975BE27F973AA31BEA8D4
7AF963233256A1F63A4C125C1C0A764E13DE09D8577B1014DEED657FBCA7D809
47AF05DCA429AAF8DE0B8D61C3585BFA84D057DE72749A4B89793862EADFCB0A
75A468DC32028845769E5022D5513A63DD6CC84E8E6239EA635E49591229F5EF
7D7F3EE6681A9955945149697BF8995EAEA578C071459FAE0A9BB561FBBF414C
E36C2C567D12C6D45939C9425C9B6A11A41E2444F00529E2AA2B902CB3DC8DE3
9690B59FD77802654266CE245095B21421679031D71D0F8A416EA3E7994E94B6
179B1A7B618854859850A21C9EA0419C3A17490CF7125F521B51E5C24E8B9FCA
2BB4FD8FC803E7A9D3B788D34FE8013B359983AEF86382CE9187FB3B9588F10C
884F8AF4A3E374D8F7922044CDF978E1133A94AD4E3E0D370A48C9DD7AF2B05B
9332C3C3B8129DAC73005021617DC173E8468EB41FDE685E011F06B46197B085
AEE33F55AA24E9804DD6272E508FB1069387B023F906B6AFC632E36F01961805
E621388C4B1424BE07AD70B0F2C6AED695BC588E6ABF1D2B38B6A6C3DD6FD89D
29369FFEC78E75016E0C5F88414D52812F0106B19DD47D12CA99C4C7F8B077C2
D919F6E79822D2E558771160CF7D5B4C1DF1F410B1B4BFC39E8266F18F7C2B88
10D01F7456C58AEA498BF279BB449511A91258DC4B7C64E3174050B7C8FAD56D
BEECD31E340A84A5FFE1F4E73AB0D97814C976112B9DE60C2B9B5DC10B27D938
E4E2ED19D9A346970B3FAAC4DDBC9CE916E9873BE38030E36C24CE003E222F0B
231CA8545DBD1051D31C8390960420D8FC056B04E77002CEFCCA0489F12A3640
713EC3DDD0DC45DCDA48200551FD1140A4E685DAB37D11924AAF00565E3B8EDE
8E40FDB4B1999991919D5589C52B018E46EBE636B6214175D6C3850D96283524
49D33F89196645962942DEBDD82A0C4A86F033DD81C25AF2E0C86F2AEEF587F7
FF90E05A28234C71C626BBB119C6057DBFC2B0085C818FDDA774EBDBE7A95018
305356B44FF1625F8400B9041822D7257822D94CD38994F0DCF6CA9C06832E0B
CDBD641B9E673F20AFE5D04D7AA72DF0579C8660394939C321A97D4644D6A811
9B63CBB916F7EDCEC8EFEA7F6410E1511C924FA76B3CACD5E1FF41733D498EB3
0FBE4BD9524A7D9DFF3FE90CD6536E5CA1D6E13BB03BF68B833A83D024B97C47
5CE8C6ECB0D03B51C5B86D31A8B7F71FB272D0E55C2C1389C444547B399E1B36
3EF5FA426AAEB7CFA0201368B14535019A353B8AD44469296DD256E2576AF5A5
083378153907E8FCC24D95DCD55322C3114E05AD6F4C749DFE7538888419A148
C5E9680DC50EEDE0B50E5D8A9A1EB6B111A177DCFD4CD6F5A57A0368FAFEC846
83E0694B8D49201ACDCA3B7FEAE9C9F2DDEC3F13EF8B47659874B532969F77A3
1734B0710311CFF7D2E81E227AE7B85D8B1632EBBBA234AE2CE2AB87739D872E
131CC8AA41BCAF25DF3412D2EA221AAB4C0BDB4CBCDE78CF1AAABB6618E4FE09
A948F900E8E81D90649E3A8C6974CF8BEA49336F976391D628D4F127BC5081D0
A4615B16818D99B6F3E211E760F8C31A12F21A8962CC732483BBDBE878E238A3
AD7D54A0F8D49FFBBEEA2A08DE67253E14091FB92373C71F3F9B1649C5F3C80F
F3CBC0C96E836D6598FD8B539BDCA02A0A1C3058ABF110679EAC1AE74B4EEADD
E0FE0B5D86C9538B9E3260EB81496D3C547C1141A7903C924ABA53A4B5C7C390
F436CB4C0DB8E54FA38D419001AE35BBF8E45CB1D9EC09E266A73531E9F9B83A
B19D7A795E2BE005DB42E46653449EE9772E06F36A75482AB01D1425FF06DF36
71E2423ADC32137D05344921545DD99DB567D5486DF8C29864621BB2A29D5698
29577BF4A90C0A7A3716E46F464A198EBEE6C1FB72AF08A8D70AEE51EB0ABDEE
AC94BF3611A6C3560C8FFB243A03528359F9CA0BC7FD7E77265441DBB89C9815
27ADC2B4CE6CDDB4BAA9EBC266AECA66192930CE16E72E4F8503DDB58EB2B929
CE53EB5D706ADE5FA46BD7F43F050DD2BAC23CA90A1B3F48F7BA02A2AD093DD4
4627A8415B5BF9CC780D7FBF21C20D5E8BD8EDD3011935C6EB98716C9F052D6C
66D3FAEE0166ADE5F16BE5F1CAC3CEB55D9DF0244CD985EDF7315B239001EA63
1F6E56552CA421D14A0B49DEDFA9B15A961EB62924F76ACBE5705BAC665A8468
23D2E41417CB5659F4A3CFC8C97FBB116362E8A258EC0F8CCFB7E0607CB566EC
A1EE092900BE6FD3C47D29CFB83E438FA7115926B508854EBB0BF3BAC3B44161
78862E8EAAE161FA2F8D711C14792AC84CDECB815A2B83CF7E2C563928D33F7D
B0985F0A3C2E9D379189360FED33DD9AFD4BCD49BCCFB65347FD1767DFDB6F85
337F7B399825D48797F341825ABD849980EBBAF61719BC50DFACBBC00F0115B8
FBAE1E8134BC45C573FB02668AC5DE573D52DB29069A8BB6EBB0684B510DFD80
DF00095688B66DF033A4F9F7EEE92BA769DC7E4C5AB3F50FE19F3A3904E87813
B21E74A216ECAAB6DAE2D8907671248569054F450ED9796220D6EF04EA845A62
41FF262C6E8C4C3F2D173143110CEE64FEC112E525B7397893AA3D939EA7116F
BA984034BF416E8F6CD8A749E73F755679638E2360C7010222639EE315626BC1
4D272D97333B743C7AF418C2A2E06261D47759D92D9231A7717976FBB04E6A35
77A6641A0411822D61C461E26D2E83645828EB112AE678F6903E6F528D88CDAC
56EE02E71C38A0275A810FEF7735EA808D88783FC6589991EFABE92DDC5E0D57
17FB80B78186D7F391CD91B6222E88C0BCFF662088104C55AFA4D32860F93170
3DB69BE408F2BBBE436E02E293BD3D115DD935D8F0F5EE315FB81892E4681664
3192F6AB4CB21879F0A910CE8145DA9F6BCC9588EB253163FEBFD041FFFB50A8
D05EBD990108D3846FE48A7B088541F51D307AA464BB5555951D247C5A2E2089
83DF2BD52684E1125277241ADD70419D3C3C569CD3B0EC812FEF7F33E5D03042
688545DB0E5657C31D96285557B332CEE2959749E610D026F60E2566D3586E21
9C55EC4EA46E42986A204F0B48F458F7194E4F70FEA9D89B449A816459B14ADF
A9FA485D23DB05E79A4C0D6B71E487A1D6CE824F516B1C688CE2AF2F8B504453
0B33095755FD69A33D9E78BB5FF7B27E2AA5490FB3CC3086401733F50F636A4C
7426584812DB19428FD6C0AF612CB8A2CACE0B6688CDBD0567637ED0C5EA2038
CF6194AF036EB3090451311D2E0315E7E13958173BEFA5424D243AA8BC7E8717
6773002363255E717281FA764F314AC16BB1740C1B9A34534A154E2B040147CE
CFE362567ED47BF94B63D67A9113921AAC23AB1D683E02A2428BBA8209D50F64
7728F58AFB5CE3F8E8392705A8E303135E00AE343882AD0796D5CCBAA6F264F1
25A48324CBFFD7558991E2863EB51F2A3AC14AC7BBF7517A5080465D34A86DB6
7F479D8DBBDE40746787053D6CBC34EC86D2BC2DCA14C5CD87C548EAB615DB2E
E802A05EA5F95D79F7ECBE26B77AC35FEC78C3AF86F44DBF033DD32A9399307A
D3BA56FE89314CFBBF9B89A31670C438DD689D03C9C5BCBFC3F66156452AA904
3F7058C2084082FD3551EE33831CA72BCF0ACF5806CF91BBB0D22FD5E6E871AF
23E1E8F614BB3BC9B7E47728E2E7B97F378403727B2316CD2FA670101359A72B
68DAC50D35CC3FE5B34AE2082A4815DD6C976941D7DF7AA82D26602B35B3B345
52106D96FCCA8D8F35AE3EED13E09B657C1D642C8CA605649F67A6E73DA22BC1
808EAAABC8B84FDCA37DD519B95C8CAB9E4F86C6EF4DA295C9787231E65CC72C
A775CF95AF8AD2216D8C10892E78242FC36E7D4C360AAEBCEBFABC346804C6D7
8E34E7E5880CA364B407652C9826C6F98DB7EE71FE4A34BB13A16DD0175AA069
E5E084B9C9850BD02C8E6D1822631A78F008396AB0061808B1AA8A9FD9158195
6EC08657C96BA27D1A9C5DFE27CF1A2B3390C3B24432F7D29BB52E45AC293EC6
D145947F3008502C6E7D580843A56A34602C39047FD0BA55AA3109A09B634756
8970F8D789A9B2DF335A32905F4E0E5B1DE965B895FD9E9CBBCBDFFECC26F36D
426CF61CBFEDF878FDE89A858C31FB24143DD7851B55AD27F3F82F298E692BC8
2030FB3026AD340E57E88F6740B6EA568AFAE4845EC53081FCE1CCF0EAE6DC48
C30A8EA3C73EE73D6EC7A7E007FD3E47952E8C141D83E23284170B5E9CEDB86A
AAB94570EC6A3DD41365BD1CCF04580050284C5FC2B5C5454CF8FBE45A2F118C
B442B8208E82FA3E8C8881ED205F2653C608EEC374123432CE4568F0B7D59C4D
B455C2311D9A8095C678B0A4BDC94E1ABF95D33B8306CFCC521369CF42263105
8FF97419E62D8160534CDF63672A2485DF07E156F2F852539A67BFA965392B84
778DE73F0B7BEE7847C036F6279E91B6C94D0CD6E1BA01488A7E17B51DB56834
3F5374B1CAD7F7A2ADC7B6B63320BEF8DB65474BCB2797D215AE5210B89340B7
0BE90F52CC8D426C4063D5E7F4E753A713F08859DD09E531C7D61E77BFFCE6AB
86DB8CA53A6658610A6C22F3BBC9C69DBA334DC369647594107FFC486D1B78D6
98633FBCAD038B434D57CB35E4B64AE82E5D5334D48CC98CD890F9C02BF24CC0
F1996161A324FE2C3BEE183DEFD4D66CE92BA0BB3F68F0E311A645A5CF52C56B
332778BE20052B1BF754C85DC0FBAB6AAEDC49CDD193BC6DB59A33E9D6B32DB4
E6D167CD990E3311934D3A833CD03A469A4F1EB4B8F313E8855A8DE07CC41BEF
7416C471AD53CE977C8B649B12AB2506F38B90BC5083E95C691F95A817803DA2
046CF636EBFDBB8781BCFBD79FEDE84CCB3C2EA9EFB08C5C74668A0CF115EFBB
2589A3E222A9CB89C6B5BA4FB6FA962B6F8FC1973F293D5CD9D862E950FDDCD7
3F2E287F45A12E63C830A807C80DC694365A384D6FD2C30398FA64BA42193145
25F5345D907E44B4B4A506C2406EE715914B9BC15C7E6B974FB8DF0F6569B1E7
5A3B10CB39C36B25D07F3A7247F08CCDB6CE5C4067DDECF820E1A903D712CDDB
22E1B279C4BA552F163613E35279535F603F8573703C8E989FF167AC2C42D4EA
BA32F75FB00CA05D865D3B7F5913E1884CFBA08E50A6AD4955401D25F4913F1E
FE22B832B8CFD70FBA1FE3950927A5C352571B3F8700AD8BE15643AB4B168750
DF7E7961AC02CA9223CDABB417F7D36942930B11E1CB4E47A8E15F28321432AE
ADF3328894A2267E5A11BB62D2E7ED7F5946FF908988DD1713E9E6EC14D12143
0D11E87AA652908EAB83AD5122B5A93B1D9D143B390DFF518E83896288817F10
5CE6378A2ED9130D30D774232D55A78951F2E8B2AF5913C5562D0322CA400917
A23C31706FE2F486E79AD889C914EA6F3D66D213FBC0EC4D40EF8DFF58D12CB2
6A4DE9CA46D155AB7641ADAA9C957043D4BC269F7AF519FE2EEC6812BF9066C1
CB00E00190FB7FD42537BAA87E0BBEDAA7B8717A752172D8587326FC63559308
07B683907BFB8AF759FCDA7184E58C4527E6A06AEA4240C6ED6C788726EE6FA8
BD3FF6E00AF419F43B2AABE45C5988C0E35101CC71B5BBAFBAD12C39D01AFB32
78EC44E49BB3C0273654166364D1334AEC0CA9BCEF6AEAB1438372295515DF5A
E0BDD7D9C4B7134E46579A73FD36B3935159B42D070574E713FCD0F818D7AB59
53374C4E036EEAD937D3EF22C6E294FCC35B661378B71A707D9777A4189DE6D2
2F48BBE328776A1A8E794D674B578497C79E393357B81AD6066DDB7C35DB9645
617A588D763A2A75687917D18E57D9902A7CE4A4BE37F60E33CED357DAFC6282
35381F2D44CC53608EC34F8277F8550E09D22B89B619EA62C96047D011041159
A1E97035FD09ED19E7DE6F40862190BD9851CF718B7A8978B7DCADA34CD1D5E8
AD3210630DA80665FD3052755BE98FFADD6F2311537E695DD893610BF0EE623E
990FA4D039CC5EAC7F7866FF7E67593EC32F0C344B0D3AC3E40E0EBDC32CD835
649D53970DAC6B37D7FEB2952E8D0B874CC175E46280EFE88668753CF2BEBBE7
61AABD101F41F74C9F1E227F413256255F17DFDF607FFB82C3BF8504F5C80289
76A1CB275C63E92B2A8A6B97824736077796C4BA276437A05F913F37172D1E22
77B8DA42B814E9B58293634EBE2EE9119FE2A36B93C85FCBB0A75115699A0389
D9C66651D48C85DCEF161CE1A7F97DAA078F63EFFAB325F1C657C2968BE20FB8
306A89B60E01C8D8AA83E8E355A193F6BDD69E89709584353700A9E48AA82620
64D80E8FB33047DDA962EBC64F81EECC761AEBDC31879E00E28C36B87F5BC160
5635AFB937AD5E3253B39AF1BA23D5FCB48970D57563D1F3F4F3C96615D6AF1E
26E3EC9AE833B5CE66C4884A6B6C2DC0276B6A30D4E7E5232A5FFAA784D46792
FF5E983930777A9AFAE6A7CD657E1C6A9840A5B770CED683426AB593743762CE
19E62D912F5ED4A922DDC004AA989446D0D1621768FDB9FBAE1E8134BC45C59B
BFFD6D70CB871B35CE529EC45887D86977F4FCF17669F7B77273A06532362D40
655BE31E9AF6E0C9C67A870215B23B1FA387079E850E917E2912E519DEDAFA9C
17CC6387193C5C8E44E09048F15FED4D2174429B0B488B0DFE59F17DA2AD0B71
73D21C0256B624FB3FD0F1F2C7DE8B2FFF912DD3C88DF0521DCEAA6208577E46
533376B12CFC2A27BC1DFB3F27CFCB8FB959706471CCA2592697B74671DADF5D
7C63C76CE5B660F28E40648306382D43F8E3A185822858D34E7439A1E3BF0C57
938301C71E58EF1D2771D9BFCECD9FFCB2CBF99AC1A575FEBBD59A0C4C3EF679
FA2B0BCD228139546D5ACC862D4D2CF9C7CD6527EE805229DD7EDC19F3E5D8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 2 /multiply put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AF3863EE8A24A003F07FBF0DFBC12CF2625CE95B5F1C575C28144E1D3C8CF5D7
6D071DB7562414E228147876D452804B3142DCDCAB22773DE75726823F1BB198
1C1CA8D89B59FF008B054F0322A543DBCCABA518AB9945020DF8C049A6E112C5
3F67BB74E95B7EB282BEF71477392749E10B5C1C6C07AC21EBB2EE0FD69336E7
FB6E5C2EEE519C09CDCE1B441625FEB1EA001C20A6E1AF36E9E6CE683E15F6C9
8AF7A28A5B36A5275F6FD71D8DC344DA75A23E0FABF641A6F5BF97EEE8CF39FC
10EDB0F4751E9FC25283304D652488E56C8F2A7F01D3DD87F77AD57B3BC9436C
F36C2DC4A62D115F760F0E65DE1531FACAEE786C71767C6210956AE30E65EED9
34A219A75F0BD724FC918B7D65B3B3F13F88A608B2D91018BA00E961C517B1E5
0670B56056553BB50DF8884887B2233A1291D2AE55B3A50B911F5F7570004CB1
4A93BA42F37A9F1E107619EE967D4227A2280EEF8BCEDBB29F52AE13A63C283B
3213A04998E9F450FFF52F973584
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusRomNo9L-ReguItal
%!PS-AdobeFont-1.0: NimbusRomNo9L-ReguItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular Italic) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -15.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-ReguItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-169 -270 1010 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E134D4CB5ABCED39AC635
DA001E9934C198A7F9B9ED0028A85E9AE00421DFD8EAA3BB3B4B4CE45D209303
237BD51809FE4D880900B1EEB236ACA87B9FF6EBE6B994A60AF5D67CCC42BD56
77295C346EB4C62BDC1EF22EE07DAAD928DFB73455F091F32408ED6430B97417
683AF27A03718A156E3F6E7B6E4F2E8177503CD82DDBF4557A3CCFF4C858AE7A
F7EFED6CC521A28342436B953E4650B5792BE85EA2F989EB6D986905A61FA38B
96E1BBC830B74469150FB0B598A794FD80D10870084A877273A9502C3456E5EF
74350E6E3BE5863E8BA185EB59FB87B36566AF71200B6ED389D1287D4E925E33
B2383ED05D87D48586E698FBC5D562ED9D8A09EC3EAA1B1F300224AF20C23F26
A2EADC74562571DA84B3914D1D80B127C6FF4706C7046BBB372A0013E0AB94F0
C27946583871D272BF4F20FA84E89D745DE7BBA885CC09BA72E0F530ED4EF7D1
864B3C67007ED98800284235372F0A70C912E21E851AFBF812165B8DF912CD1A
013E271F0B347967876C68AE4C4107EF8AD1F170916210034C66394A9D971B68
FBFC1131E37FC178EB97C1B2A0F573ADD9D7C0BF944E6529734DF8A7EF54485B
A3375CC30E9E328943733CBD352BC15B06C85BFB4A96994291C72A0EAE84FB01
0F1B24D0125FB8C16D60561DF8BB7AA7DDFE9549AFB70C1E89424214609FDE41
9A142892E30F02754FD234CEB3C59A2A04C06BAB7AE40E8FDEC50559B8347684
391C750987802D5452C47C1E0B5F222DE9A0EEAFEE19D796FF375A1E1EF0AEED
1BCAC4F485FCAEE18AEC585D1A9D80F41871DDA45FEF1EAE82C5893118987BEB
4D9E345C27C7419FE65E4853B40537D822E34FF1E0BD2819D21EF607981259E8
9F1040A2D708D7463858AA5381759AC49DF4DDDEB209A278FE60BD2508ACA0F4
6A249A05B652E4C7BF1B676943CDC466CFFDF0E84AB0B48F8A92F379B6AB32FD
FEBB8A80ABD337AE696F67BC815250CE538103F5D8ACB7A816057705303FC1F7
F0EC7DAED7CF1C8AA9A0A495EE75A168A715976FBD5F0709FEDD26FD29CEB3E5
955BD04F4BCB9D5BA41ED7303D15E633A518E38D5E7BF925EA30F9291FFC32C1
EDDC8046BB8326DE0B22FB880AB97FB6FCD46E7B1A995CF6579AF2E6E471019D
1480CFE6ECC312D6188D585FFAE5C0F98E7C3258873B80349E8E7D71E6C903A0
29591697CEB593B52716370B09310DB3EA509F660879B0191AE8B5E669DFB492
97D6AFF170EE660BD98CFDE917CAB1206021AF885AE0A834C3C7AF2EB647432D
1342935485FF127534EB51617CB8C7E22541BDEBDA1CDCA2BEE1A013AD7F2443
A50CFA43D254FA7DB5640378730CDB4762B2ED5175395EDB850ABD9ED0E845DC
B9D2D7BB58CFA615A14C5DCB9720CACB04909D84FBB1F2A4E5E7F69F536DD171
BD387EECCD2842F4C6C331870D08CC0BDCB9CAC6D64F6F3C53DCF8009ED3C361
40C7AB0AEDBFAC74A00E96FA5FE7E2F3A42FDC0E1A74A57EBAAA59F09BCAA195
BB15BB1FFABAD6F76AE275DB8B7964DC539D3E80C8F644F580E2D84C034590A5
14FA9C0A9117CE3740CDDCCF2E6FAE3B9930EDA241BC5B786FF7CF08F011470E
456D4236CA6097A50F1AC132895D94817928CF3AAB0825465E7EC07015583BB9
BE31A921CA50F07462F6AECB9258FAE9F7BA3259CFEC779D08B6CEAF55D96751
D2F511526504D18877732619888B727639842C303C4BC4E1BBB6D21B59BB0C9D
A7CD536692113A84200BB9C201CD29EC9D6400F511E9AFD3F121279648E61AAA
063125D7817BAAB7D5A9A5691D12BF55BB04F3383C67635C811B9FB8911F7D4D

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 23681430 14208860 1000 600 600
(/home/jw/.cache/matplotlib/tex.cache/2c/10/2c1000badc87de32ea84f69f0d0a1985464d8b276cf640d5f61902cdb068b930.dvi)
@start /Fa 201[37 54[{ TeXBase1Encoding ReEncodeFont }1
74.7198 /NimbusRomNo9L-Regu rf /Fc 255[58{}1 74.7198
/CMSY10 rf /Fd 253[77 2[{}1 99.6264 /CMSY10 rf /Fe 203[37
52[{ TeXBase1Encoding ReEncodeFont }1 74.7206 /NimbusRomNo9L-Regu
rf /Fg 147[26 2[26 21[51 15[61 67[{ TeXBase1Encoding ReEncodeFont }4
92.1551 /NimbusRomNo9L-Regu rf /Fi 141[41 2[62 17[41
1[41 6[76 38[41 45[{ TeXBase1Encoding ReEncodeFont }6
124.533 /NimbusRomNo9L-Regu rf /Fj 167[76 7[76 80[{
 TeXBase1Encoding ReEncodeFont }2 124.533 /NimbusRomNo9L-ReguItal
rf /Fl 199[50 1[50 1[50 1[50 50 50 48[{ TeXBase1Encoding ReEncodeFont }
6 99.6264 /NimbusRomNo9L-Regu rf /Fn 139[23 32 28 1[42
1[42 65 23 4[42 28 37 1[37 1[37 13[46 2[46 80[{
 TeXBase1Encoding ReEncodeFont }14 83.022 /NimbusRomNo9L-Regu
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black -600 1200 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 -600
1200 a -600 1200 a
 /PSfrag where{pop(psmarker0)[[0(bl)1 0.000000]](psmarker1)[[1(bl)1
0.000000]](psmarker2)[[2(bl)1 0.000000]](psmarker3)[[3(bl)1 0.000000]](psmarker4)[[4(bl)1
0.000000]](psmarker5)[[5(bl)1 0.000000]](psmarker6)[[6(bl)1 0.000000]](psmarker7)[[7(bl)1
0.000000]](psmarker8)[[8(bl)1 0.000000]](psmarker9)[[9(bl)1 0.000000]](psmarker10)[[10(bl)1
90.000000]](psmarker11)[[11(bl)1 0.000000]]12 0 -1/Begin PSfrag}{userdict
/PSfrag{pop}put}ifelse
 -600 1200 a @beginspecial 0 @llx 0
@lly 360 @urx 216 @ury 3600 @rwi @clip @setspecial
%%BeginDocument: /tmp/tmp9weia019/tmp.ps
%!PS-Adobe-3.0 EPSF-3.0
%%LanguageLevel: 3
%%Title: P-vs-SiCl4-compare.eps
%%Creator: Matplotlib v3.10.3, https://matplotlib.org/
%%CreationDate: Thu Aug 21 18:09:42 2025
%%BoundingBox: 0 0 360 216
%%HiResBoundingBox: 0.000000 0.000000 360.000000 216.000000
%%EndComments
%%BeginProlog
/mpldict 8 dict def
mpldict begin
/_d { bind def } bind def/m { moveto } _d/l { lineto } _d/r { rlineto } _d/c { curveto } _d/cl { closepath } _d/ce { closepath eofill } _d/sc { setcachedevice } _d
end
%%EndProlog
mpldict begin
0 0 translate
0 0 360 216 rectclip
gsave
0 0 m
360 0 l
360 216 l
0 216 l
cl
1 setgray
fill
grestore
gsave
38.874305 42.360788 m
349.2 42.360788 l
349.2 193.373237 l
38.874305 193.373237 l
cl
1 setgray
fill
grestore
1 setlinewidth
1 setlinejoin
0 setlinecap
[] 0 setdash
0 setgray
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
97.5244 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
97.5244 193.373 o
grestore
gsave
91.547 30.672 moveto
(psmarker0)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
156.917 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
156.917 193.373 o
grestore
gsave
150.939 30.672 moveto
(psmarker1)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
216.309 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
216.309 193.373 o
grestore
gsave
210.332 30.672 moveto
(psmarker2)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
275.702 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
275.702 193.373 o
grestore
gsave
269.724 30.672 moveto
(psmarker3)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
335.094 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
335.094 193.373 o
grestore
gsave
326.128 30.672 moveto
(psmarker4)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
50.0104 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
50.0104 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
61.8889 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
61.8889 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
73.7674 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
73.7674 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
85.6459 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
85.6459 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
109.403 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
109.403 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
121.281 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
121.281 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
133.16 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
133.16 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
145.038 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
145.038 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
168.795 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
168.795 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
180.674 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
180.674 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
192.552 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
192.552 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
204.431 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
204.431 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
228.188 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
228.188 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
240.066 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
240.066 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
251.945 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
251.945 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
263.823 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
263.823 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
287.58 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
287.58 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
299.459 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
299.459 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
311.337 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
311.337 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
323.216 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
323.216 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
346.973 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
346.973 193.373 o
grestore
gsave
169.948 11.599 moveto
(psmarker5)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 48.8303 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 48.8303 o
grestore
gsave
29.397 44.694 moveto
(psmarker6)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 96.8423 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 96.8423 o
grestore
gsave
29.397 92.79 moveto
(psmarker7)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 144.854 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 144.854 o
grestore
gsave
29.397 140.802 moveto
(psmarker8)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 192.866 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 192.866 o
grestore
gsave
29.397 188.73 moveto
(psmarker9)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 58.4327 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 58.4327 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 68.0351 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 68.0351 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 77.6375 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 77.6375 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 87.2399 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 87.2399 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 106.445 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 106.445 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 116.047 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 116.047 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 125.649 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 125.649 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 135.252 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 135.252 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 154.457 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 154.457 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 164.059 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 164.059 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 173.662 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 173.662 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 183.264 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 183.264 o
grestore
gsave
25.397 91.58 moveto
(psmarker10)
show
grestore
gsave
38.874 195.377 moveto
(psmarker11)
show
grestore
2.5 setlinewidth
[16 4 2.5 4] 0 setdash
0 0 1 setrgbcolor
gsave
38.874 42.361 310.326 151.012 rectclip
52.980019 52.017052 m
60.213725 53.659207 l
67.447402 55.364401 l
74.681139 57.121809 l
81.914846 58.924204 l
89.148552 60.766376 l
96.382259 62.644246 l
103.615966 64.55462 l
110.849673 66.494809 l
118.08338 68.462629 l
125.317086 70.456136 l
132.550793 72.473697 l
139.7845 74.513823 l
147.018207 76.575459 l
154.251914 78.657019 l
161.48562 80.758025 l
168.719327 82.877035 l
175.953034 85.013569 l
183.186741 87.166668 l
190.420448 89.33561 l
197.653857 91.519676 l
204.887564 93.718626 l
212.121271 95.93126 l
219.354978 98.157817 l
226.588685 100.397097 l
233.822391 102.6491 l
241.056098 104.913106 l
248.289805 107.188635 l
255.523512 109.475687 l
262.757219 111.773782 l
269.990925 114.0822 l
277.224632 116.40094 l
284.458339 118.729762 l
291.692046 121.067947 l
298.925753 123.415734 l
306.159459 125.772404 l
313.393166 128.137955 l
320.626873 130.511909 l
327.86058 132.894265 l
335.094287 135.284783 l
stroke
grestore
1 setlinewidth
2 setlinejoin
[] 0 setdash
0 setgray
gsave
38.874 42.361 310.326 151.012 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
2 setlinejoin

0 setlinecap

0 2 m
-0.449028 0.618034 l
-1.902113 0.618034 l
-0.726543 -0.236068 l
-1.175571 -1.618034 l
-0 -0.763932 l
1.175571 -1.618034 l
0.726543 -0.236068 l
1.902113 0.618034 l
0.449028 0.618034 l
cl

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
52.98 50.6295 o
60.2137 51.6262 o
67.4474 52.6669 o
74.6811 53.7433 o
81.9148 54.8498 o
89.1486 55.9826 o
96.3823 57.1386 o
103.616 58.3157 o
110.85 59.5119 o
118.083 60.7257 o
125.317 61.9557 o
132.551 63.2009 o
139.785 64.4603 o
147.018 65.733 o
154.252 67.0182 o
161.486 68.3152 o
168.719 69.6235 o
175.953 70.9424 o
183.187 72.2716 o
190.42 73.6105 o
197.654 74.9587 o
204.888 76.3155 o
212.121 77.6809 o
219.355 79.0548 o
226.589 80.4363 o
233.822 81.8253 o
241.056 83.2218 o
248.29 84.6254 o
255.524 86.0355 o
262.757 87.4523 o
269.991 88.8754 o
277.225 90.3047 o
284.458 91.7398 o
291.692 93.1809 o
298.926 94.6275 o
306.159 96.0794 o
313.393 97.5365 o
320.627 98.9987 o
327.861 100.466 o
335.094 101.938 o
grestore
2.5 setlinewidth
1 setlinejoin
[9.25 4] 0 setdash
0 0.5 0 setrgbcolor
gsave
38.874 42.361 310.326 151.012 rectclip
52.980019 53.088968 m
60.213725 55.242523 l
67.447402 57.523285 l
74.681139 59.918172 l
81.914846 62.416789 l
89.148552 65.010662 l
96.382259 67.692829 l
103.615966 70.457456 l
110.849673 73.299599 l
118.08338 76.214648 l
125.317086 79.198835 l
132.550793 82.249038 l
139.7845 85.362136 l
147.018207 88.53501 l
154.251914 91.765498 l
161.48562 95.05096 l
168.719327 98.389715 l
175.953034 101.779603 l
183.186741 105.218463 l
190.420448 108.705335 l
197.653857 112.237818 l
204.887564 115.814953 l
212.121271 119.435299 l
219.354978 123.097174 l
226.588685 126.799861 l
233.822391 130.541676 l
241.056098 134.321662 l
248.289805 138.138857 l
255.523512 141.9923 l
262.757219 145.880793 l
269.990925 149.803374 l
277.224632 153.759324 l
284.458339 157.747681 l
291.692046 161.767727 l
298.925753 165.8185 l
306.159459 169.89928 l
313.393166 174.009589 l
320.626873 178.148224 l
327.86058 182.315186 l
335.094287 186.509035 l
stroke
grestore
1 setlinewidth
[] 0 setdash
0 0.75 0.75 setrgbcolor
gsave
38.874 42.361 310.326 151.012 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 -2 m
0.530406 -2 1.03916 -1.789267 1.414214 -1.414214 c
1.789267 -1.03916 2 -0.530406 2 0 c
2 0.530406 1.789267 1.03916 1.414214 1.414214 c
1.03916 1.789267 0.530406 2 0 2 c
-0.530406 2 -1.03916 1.789267 -1.414214 1.414214 c
-1.789267 1.03916 -2 0.530406 -2 0 c
-2 -0.530406 -1.789267 -1.03916 -1.414214 -1.414214 c
-1.03916 -1.789267 -0.530406 -2 0 -2 c
cl

gsave
0 0.75 0.75 setrgbcolor
fill
grestore
stroke
grestore
} bind def
52.98 49.9224 o
60.2137 50.5752 o
67.4474 51.276 o
74.6811 52.017 o
81.9148 52.7931 o
89.1486 53.6008 o
96.3823 54.4371 o
103.616 55.2998 o
110.85 56.1873 o
118.083 57.0979 o
125.317 58.0302 o
132.551 58.9832 o
139.785 59.9559 o
147.018 60.9472 o
154.252 61.9565 o
161.486 62.9829 o
168.719 64.026 o
175.953 65.0849 o
183.187 66.1591 o
190.42 67.2482 o
197.654 68.3517 o
204.888 69.4691 o
212.121 70.6 o
219.355 71.744 o
226.589 72.9006 o
233.822 74.0697 o
241.056 75.251 o
248.29 76.4439 o
255.524 77.6483 o
262.757 78.864 o
269.991 80.0907 o
277.225 81.3277 o
284.458 82.5755 o
291.692 83.8332 o
298.926 85.1012 o
306.159 86.3788 o
313.393 87.666 o
320.627 88.9628 o
327.861 90.2685 o
335.094 91.5833 o
grestore
2.5 setlinewidth
2 setlinecap
1 0 0 setrgbcolor
gsave
38.874 42.361 310.326 151.012 rectclip
52.980019 49.342267 m
60.213725 49.581002 l
67.447402 49.814717 l
74.681139 50.043706 l
81.914846 50.268229 l
89.148552 50.488523 l
96.382259 50.704795 l
103.615966 50.917248 l
110.849673 51.12606 l
118.08338 51.331393 l
125.317086 51.533403 l
132.550793 51.732245 l
139.7845 51.928038 l
147.018207 52.120926 l
154.251914 52.311006 l
161.48562 52.498372 l
168.719327 52.683171 l
175.953034 52.865448 l
183.186741 53.045349 l
190.420448 53.222898 l
197.653857 53.398213 l
204.887564 53.571345 l
212.121271 53.742388 l
219.354978 53.911414 l
226.588685 54.078448 l
233.822391 54.243585 l
241.056098 54.406874 l
248.289805 54.568386 l
255.523512 54.728122 l
262.757219 54.886178 l
269.990925 55.042601 l
277.224632 55.197392 l
284.458339 55.350646 l
291.692046 55.502388 l
298.925753 55.652641 l
306.159459 55.801455 l
313.393166 55.948851 l
320.626873 56.094904 l
327.86058 56.239612 l
335.094287 56.383 l
stroke
grestore
1 setlinewidth
0 setlinecap
0.75 0 0.75 setrgbcolor
gsave
38.874 42.361 310.326 151.012 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-2 -2 m
2 2 l
-2 2 m
2 -2 l

gsave
0.75 0 0.75 setrgbcolor
fill
grestore
stroke
grestore
} bind def
52.98 49.225 o
60.2137 49.4124 o
67.4474 49.5969 o
74.6811 49.7786 o
81.9148 49.9576 o
89.1486 50.134 o
96.3823 50.308 o
103.616 50.4796 o
110.85 50.6489 o
118.083 50.8161 o
125.317 50.9811 o
132.551 51.144 o
139.785 51.3051 o
147.018 51.4642 o
154.252 51.6214 o
161.486 51.7769 o
168.719 51.9307 o
175.953 52.0828 o
183.187 52.2333 o
190.42 52.3822 o
197.654 52.5296 o
204.888 52.6756 o
212.121 52.8201 o
219.355 52.9632 o
226.589 53.1049 o
233.822 53.2453 o
241.056 53.3845 o
248.29 53.5224 o
255.524 53.659 o
262.757 53.7945 o
269.991 53.9288 o
277.225 54.062 o
284.458 54.1941 o
291.692 54.3251 o
298.926 54.455 o
306.159 54.5839 o
313.393 54.7118 o
320.627 54.8387 o
327.861 54.9646 o
335.094 55.0896 o
grestore
1.5 setlinewidth
0 setlinejoin
2 setlinecap
0 setgray
gsave
38.874305 42.360788 m
38.874305 193.373237 l
stroke
grestore
gsave
349.2 42.360788 m
349.2 193.373237 l
stroke
grestore
gsave
38.874305 42.360788 m
349.2 42.360788 l
stroke
grestore
gsave
38.874305 193.373237 m
349.2 193.373237 l
stroke
grestore

end
showpage

%%EndDocument
 @endspecial -600 1200 a
 /End PSfrag
 -600 1200 a -600 -128 a
 /Hide PSfrag
 -600
-128 a -1285 -72 a Fn(PSfrag)20 b(replacements)p -1285
-40 685 4 v -600 -37 a
 /Unhide PSfrag
 -600 -37 a -700 63 a
  {
 -700 63 a
Black 0 0 0 TeXcolorrgb -2 x Fl(20)p Black Black -700
63 a
  } 0/Place PSfrag
 -700 63 a -700 162 a
  {
 -700 162 a Black 0 0 0 TeXcolorrgb
-2 x Fl(40)p Black Black -700 162 a
  } 1/Place PSfrag
 -700 162 a -700 262
a
  {
 -700 262 a Black 0 0 0 TeXcolorrgb -2 x Fl(60)p Black
Black -700 262 a
  } 2/Place PSfrag
 -700 262 a -700 361 a
  {
 -700 361 a Black
0 0 0 TeXcolorrgb -2 x Fl(80)p Black Black -700 361 a
  } 3/Place PSfrag

-700 361 a -749 461 a
  {
 -749 461 a Black 0 0 0 TeXcolorrgb
-2 x Fl(100)p Black Black -749 461 a
  } 4/Place PSfrag
 -749 461 a -1001
572 a
  {
 -1001 572 a Black 0 0 0 TeXcolorrgb -19 x Fj(P)31
b Fi([T)-10 b(orr])p Black Black -1001 572 a
  } 5/Place PSfrag
 -1001 572
a -650 672 a
  {
 -650 672 a Black 0 0 0 TeXcolorrgb -2 x
Fl(0)p Black Black -650 672 a
  } 6/Place PSfrag
 -650 672 a -650 771 a
  {
 -650
771 a Black 0 0 0 TeXcolorrgb Fl(2)p Black Black -650
771 a
  } 7/Place PSfrag
 -650 771 a -650 871 a
  {
 -650 871 a Black 0 0 0 TeXcolorrgb
Fl(4)p Black Black -650 871 a
  } 8/Place PSfrag
 -650 871 a -650 970 a
  {
 -650
970 a Black 0 0 0 TeXcolorrgb -2 x Fl(6)p Black Black
-650 970 a
  } 9/Place PSfrag
 -650 970 a -1038 1100 a
  {
 -1038 1100 a Black
0 0 0 TeXcolorrgb -38 x Fj(X)-965 1082 y Fg(SiCl)-801
1100 y Fe(4)-724 1062 y Fi([-])p Black Black -1038 1100
a
  } 10/Place PSfrag
 -1038 1100 a -877 1200 a
  {
 -877 1200 a Black 0 0 0 TeXcolorrgb
-8 x Fd(\002)p Fl(10)-700 1156 y Fc(\000)p Fa(6)p Black
Black -877 1200 a
  } 11/Place PSfrag
 -877 1200 a 2400 1200 a
 currentpoint grestore moveto
 2400 1200 a
Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
