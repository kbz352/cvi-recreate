%!PS-Adobe-2.0
%%Creator: dvips(k) 2025.1 (TeX Live 2025)  Copyright 2025 Radical Eye Software
%%Title: 4b327d84fc6fb8000f242b39493cdf87dbab8d5bad23b21f0850ec362cc2c6e7.dvi
%%CreationDate: Mon Aug 18 15:49:56 2025
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 360 216
%%DocumentFonts: NimbusRomNo9L-Regu StandardSymL NimbusRomNo9L-ReguItal
%%+ CMMI10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /run/current-system/sw/bin/dvips -q -R0 -o
%+ /tmp/tmpfioxj096/tmp.ps
%+ /home/jw/.cache/matplotlib/tex.cache/4b/32/4b327d84fc6fb8000f242b39493cdf87dbab8d5bad23b21f0850ec362cc2c6e7.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2025.08.18:1149
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2025 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
      pdf.dest.y pdf.tmpd mul add
      pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
            pdf.count 0 eq { exit } if
            counttomark 2 roll
            1 index /Rect eq
              {
                dup 4 array copy
                dup dup
                  1 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add sub
                  3 exch put
                dup
                  pdf.outerbox 2 get
                  pdf.linkmargin add
                  2 exch put
                dup dup
                  3 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add add
                  1 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                  {
                    pdf.currentrect
                    dup
                      pdf.outerbox 0 get
                      pdf.linkmargin sub
                      0 exch put
                    dup
                      pdf.outerbox 2 get
                      pdf.linkmargin add
                      2 exch put
                    dup dup
                      1 get
                      pdf.baselineskip add
                      1 exch put
                    dup dup
                      3 get
                      pdf.baselineskip add
                      3 exch put
                    /pdf.currentrect exch def
                    pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                  exch
                repeat
                pdf.currentrect
                dup
                  pdf.outerbox 0 get
                  pdf.linkmargin sub
                  0 exch put
                dup dup
                  1 get
                  pdf.baselineskip add
                  1 exch put
                dup dup
                  3 get
                  pdf.baselineskip add
                  3 exch put
                dup 2 index 2 get  2 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                SDict /pdf.pdfmark.good false put
                exit
              }
              { pdf.count 2 sub /pdf.count exch def }
            ifelse
          }
        loop
      }
    if
    /ANN
  }
    def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE585DEB6892874B4D6B35F4BA2895
2DDF4C9B8200B32D7368EC950C963D1DE798F32708041E395A94A27CF34DA94C
B1F8A8AE4E95E3D9D23DBB28D017F1A5A232B2533A21F4FAF71C5CD8623B1DB3
75DEDBBC846759B3DDBACBD0BB9FE882315994E7704F25655F9332C1ACC7C130
53510645FF66168961B7D66288CF36C97474DF121FE8E9B9CDC1B4F27BDAD2A0
4EAFC90D9DEE76C678DB7E7DEAAC1AE5F0C5AA20C9489CF6BF32D2A3CAD6BD84
A5074B5832023E809B80408BB9B61C23FD31B10B777D6D0303D8672E44415545
1033CEE160F9FBE554BD27786B870B25727E7084BEA8B53016FD85CF9289DF78
EE12F3DEB4E33DCD967D167E99036FF3B1B8EA0380FFD69361F81BAF8D677E07
6CEC52D4E5526B66BC38B0CC9669D8D3BCEAEC9258D51D73C33A4D4F1488C39A
AE61A41BAC6A15727CE914A10335A0A09DDE121A580DC892423613708F967186
E210792D9EA463C2FB76BC889370A04D8682D0AE03DE6338AA0D62613C595D1E
9AA52AAD14BB8222997715DC16BB65D88A7AAD93961976DE90E40187EA775CC4
040046CF004AF4D76C8434E66ADB72B6710A1830B017A9711B886A186DB61E3F
985EEFDAD748E35BA0325B034250D21A5C6AF7938C40B271F1A009EB695B077F
72BA75DCFC69B0F51A459B5188EFD13F7DB0985F0A3C2E1487D41BD2468A7485
68DF2313ECAB9404016B1330269B6C9AAF3DA1026C2155022E70A7B97D5562F5
5C3CD0CFDD5E1917BE04D545FBCC6E46D7AF6CBF36A165C6A9931EECD7F7D180
5326919EE4DC25691389942B725B498D7198E266F5F60C70844F6230EDE6EC7A
CFC35B6AE123E6B03D9875FCC11919647E8B40A5A2EB1BB8C26FE9004BC127FB
7367DD9F70A15A766C9C67C95A518A4E514DB0410B1E140095EBEBDD09F60C7E
4966B4FAEB0406B72F8FF605BD06D53BBF45339CF66C5C2BAAA51D9353F5CABF
827F4953D76B779C8609E85E4BCFE84319532B3AC9D62BD413CFB0A7489DD69A
A1D690954DD77B0CC9B824007A7E638672D6AD3E0F12CECB7595C5E680E31F06
B8DF8A89E3A21E12FD05D033B7BB01DD0B9469C910B7A7DD6AAC7302F6B52648
2E4C9257CDC556314D5C972D3472B6DE6FF9635DD8C6FD508F211931143BA01D
7D08EF514E0ECADFAEF80EC2B6173E40E41727528710CBCC57458FB78C6ECB64
60A281A80F502523BC02292CA59363D6091443CAA846B4B896AC332DBC5C50C9
7F6B6F1227D0D8FF71335393E9F72BBFCB7462632EB6BE7CEC198632CC739EEB
8A4075951B186DF6A9B62F7C96BB4B92ED7DBAD6C2DC672BF913ED44A41A2D1E
5D98F8F36DB986C6C618AA75E527C04ED4016B8B560315BDE6D5431809F175C7
567728FBC797A6FE0A013CC97535A6E4F812454833BEF05947F6414AFB850951
B78A6A20247B49CE410908042ACDE9414264C06FB74D7FBB23BC73D4E4E6B9C2
79210579B4BC35B21A7D332C017A9411BF924DE0E40A24B0E1B797094DD8845C
4A011443ECFF92062FC963AF559C5D4B1523B5ED4D3A61F54B46D1DE5D40D181
5DEDA70A37F7C835C209DEEFDA4C340958D49A0C8B4E4459B7C691BF68F6AAEA
38232A732EB571E1337FAB56A5B753DCDC25568B1E7C3534BF816D19A02789F1
E1BE623EDD5DA9AE195DB7EB209E1E665209BF7F436E36EF8FDB117FEEB9281F
63DF50E4AD899E67574F3EFF17D3177852132E1B66D135E09A46B054E37922BF
B709F40562D7D3C9EB9D4EB8F6E12E6FD5A6843DD48105C7E99E2ED37B079F4B
1FE2A89AD72D1D1AD2BF8BC6B31E4ADB8344F23BEECB6E0DAB28979DCA9FF1E7
B3A9E1899D033E1D02CD57C8961D1E0EA51C02097026083440BA45CC8437A4D8
88FA4FA4772845A518108C5548A8E05CB03ED7A523AA1088DDB644E127A7AC36
05417DE7C8955C51F97141125A74C5B3A10EA582A5CE8765E2681E123B88B49B
1771907C9A00B8E77A5F6BA570464F63E2A8088B8DEC7CF2B7AD52EE40311B0C
1E32AAF747B4924B1EBF9AD7FC50473C958EB4A19E8FA04BEC5E4D82B4727E3E
99DF31156624038D849306B7C6796778B0918C26EBCDDAEFEAE5601617D8E22E
83FD810F7467D089C4DEFF91B8F5C4316471F294DA4E593873DA817C7194E3B7
97684A7CCB1E536599EDA6EF4C1EBB4B7FF5BFE240B4991A86975E85FDF48245
8C13BD55FDED5C43094D00F5DC190F98D7E9EFED72743DC985A8BA736D1E8338
BE5A86374A51E3FE38D5A549252250EF805FF7E152AD19C4261651F52410992A
D7BA49D6885177575599E7E004D8140FBF915D29604AE8F73D0CFD6C030B9F4F
24F9BE595279E0158FFFA8C422C060B15F1B45200E62765CB57ECA2162BD29F0
E926A1042B12AB5A6C06C21B626085A290BDCF236F813A15583AABB4EA3E50C0
7073C5F650547746D39693734B16AB45A0D6F81163095CB0228A39EAE95B4E7A
CAF678AAAC9D0ADE91AEA8BAD797B3D3E39373C85CA900ABB51A0588887110E6
695245370F6F7FFF151987C16FF39B4058F82BA185C8D5704932E3C9BCCB6A02
4D79906C2435068676CBEFD89A703F3D5E168EEAF6C44C2AEB04FCFC1DCC545C
7C06D6F2882BE27F7FECB251C07A0CBF632410D7D948427FF67D231975FDE54B
E1956BF9A81D91D6703F3AB779487FA7A56131C3C3E2DB3D9254363A00BFB2F2
B2FFC89863E4740E8895169607D57C89956B526A664B28A2AFAAA40FB98C1F25
1CB49EAE29A3AE0601DB63F00AEEF72396A4B5F518445A66CE9C98832B62DA6A
B4EB2D117BAB39735095A31BBF3C1D0D021B9AFFDB32CBB2D258B1215369A10A
6F80A7399327D4D43B6FFC7B5A56C5CE19DB05CF529A5DB0DFA4F1AE311FF2EE
1313AC86815826A0132FCFD809E2BC34AED8593685917792810E3E8A6F2D6262
4F8FE4885E026B5748C0D34BDFC204AE4868012441E36CCEB83971E3268925E4
77C69BAE522B4821985E2F3BB273C45AFD346545AD97213E44022F008129872A
03335FDFC9699749C1D9410155EC8607FB663BB0DA931A45213855A8ACA692EB
09DFB0B9563E62A6D148E6C6883E66A4A769BB5F0967CA82FF56752E49ED4F53
70E9C13F80F15A53AB003FEB30360DF39E803B20AD60430DF29080DADA2F1065
5BBF75EE92756B1520C0F07A1AB186653521EA59D67F0DD3616CD3C4E4E67479
8D19317379B6E7B5AC601690111E0CB9ECD39906D9B3A623C0D156272BFECA5D
D2A93121B6236175DFCD3B1560AFAA74D9DF308D0BAAC3DCE166BA3588A602D4
9F23554431694EA09B5052C836E87267C33303092D358D20CC0CEF5E68CFA597
117B6B2C12A6EA0E06F7E71B621851A1594C95B52D2F5A274A5B75E62A5E3581
76EF3AB1E77B958883131A3D7E011BB8BB13217CE15A0AC83803736F6688F3E5
193764BDFED65DBB7F586A4440153CD6C95A76CD17AFDDB9FFAC965ED7173614
0A0D41AD571329C7FE546B4C1F911994E458787505F98C38ECCABB39F621AF01
579DC1D014EC3759591AAF9B974EEF817A3B0F0EAE18617A6DC6D266439974A2
34EFCD5B6E0E9555876D3712B2BC1AE59AD0025944CAC4838C881C778C74E4AA
80F7E284024B480E431BFC32AD6FFF7054156B23DD85558056EFDE8757BD40D5
2FE71FB417926EE7EA7CF0F04476C42C0BCE3308F1E5DF5343790F3E7E6B10B9
BDC69BF798F350598765BFBD34976FF8B5935C8ACCFF71287C18CC525EC8D73A
F17F67AE52BC831CC060B162D9AF2B90DC7A43EA830ECF6D6772E5E775D03DC2
3611FF7B6FFDBB1D6B72C77967AA05FA6E19C18C2F2812BC62A9D7E1C46A1925
07F0B74B352EAC479E218E053ED37FBC0EB204AAD253FF338FEC59BF0B7AEB1B
5A03B7A717E254192D14BBA2CED7AE52D20752707445E43F11298F2B2836FC9F
145DC459ADFD781722202EDF2C3F52D34947E0964D0E8E89F6043C0D2C9B7891
82FA161075ACABC7546CCED07147F459F299DC7E474AAD4240CDC4A30790A98F
A4941BB3E3CB33FA45C5AE0591B53CBD3D2B9349A85E6661C1B358E0D52FFB82
4C4A41B5052F998B0B9ADA63BC50FB6D9AB4DFA133EE9236FCBE1E8F63BE7240
0C5389BB5EBFBF1BA7B9E725E68D279E58B9CA7771B3CC10B9CAC865E74A4065
48BD2671C9B286CA67CE8DC8610EA7482D4ADB30B78F38C77D3719193631709D
78D7AC50326F1000E36F3E9E75ED639EADD79A4FE8FD49FC9C8914C4A02DCB27
989E0752A84CB2D20D79D212AAF2C9C5948B3F7A5E6CBCB27417EC206476F32D
C8D14480849B85FCC583ED6BC743C7AB0E8AC821CE40D04D61E2BA36830559BC
1E8FF0C3D790FC1AB1588A55BDAD410D13310D332113ACDC8BE5129A3B4132C9
214D18884CABA6261D5605FBB803B61862CCB1613DAA8B95B2E72760EFF221B5
5861517935F29CF3FAEECABD037F5CF32D743C9C8C228427C10811415BAEA7B0
866A4B5EC9B64F1BD6C233E5273CB34FEE74A274174C0BE1080BAAEF37B58032
DB09C2EE90CBF872E344EC580B62EDE378396C70E17665381462E5A0223B1BA3
F877D2C9E6DDC4681B41A253650F396349401CA8D7E45983976ADBA0F5A42385
E23E7CAD458FD77C2EC1C285506A1AF437D288A5113059708BCDA43D0C6FC121
191C449FFADA29A496954CE81623D920C75A20AA65A6D8B235A7C8C06D63115F
1A4B4CED1C7D166759F0229C4833B053C1119E383E00396BC83F23C6C5DC1B44
67052E35343DAC8F8279434DE3037DB067834D7E53DD6D7BCAFC14DA691637E4
D1609B9FD92AAE737B73339E94007771F20B1B39A9C48BA8C17BFC58AE6EFE64
15C902BDEF89E63B2BA447EF88C111D4D3E6171D40717972791BEA532CFE5C7D
E553494A77491254A7AC517CA03DF559ABAC30BB66FE5CE9026D1D2225E4E3C7
8765E758A20AFBB9F17E7470E215C7C306142D81B1BAADC4A3C37E65B39B5E7E
C1B1921DB882C70EC94278705A9C3333859733C93CD5EC1F9E8A9E337BD16D60
04B0D7940F8B3BB3E8C7295B779748273C485A5F88DC1B5B0E562622002C3DDF
0D5BB0D1F5A4FBAE0C60213046273C0E59C78DC9EB4AE83D1CB6E4DF546FBC91
4A6FF038C6DCE92114EEA06C4D3BE4D852335F5C447A4CCA3EC75326188E2D36
3794D82FAC8806F28F4191E74EEA308B65C5DF4291734BFF24A44D3B30CE53C8
9BBD61CD379CC1D8B68FA75C331825DE98915C09AD8F5CD4C686B1D3395740B0
59BF60C6047783E14FCB2404FB1C794A648F0D3CD8F5974359257B8C08DCB8FF
E7342586B3A54791E781399189FE6ED99B790BCCAABC0774F8A63E76F51AE724
54991FD265D4E99B32AC641520A552B5D1DCBADED9387E4F979C2C7E94DC6482
734A5CC19BED91EEB71ACC1169A01E07257699B19DE36FA285F200C32DEAC4D3
1AA28E1F2F87D6F3CBC700B06F11C055C8DF673593D115958003B8C23D102D07
6F22187DE886A1E1F78EE36603CFD622B6D5B16907CE63CBBB2CEB97C82FEE8F
FF71C804D8996EFBC88F8CD4E4AC32CCBD73732EC61E323845F40614336B7A01
CC2590AE76C90C7467290F4D977B1AFE8F63247CE497ED59283809254452EE42
AE24CBA24E0B5DA068AB1665CCA7077C7E11C0B255F128BF32BD3406DFD95817
6C666D2CCBD79BE0CC6F5A17D0A887B5BE606C0A21EFE6853F86AC579A101863
B1CE6E7D800138FDFF7F5B941C7D4C1A6F1C1D375E2F6C38F1786DB3C9DEAB86
4109BDC6B7E94A3903C33AB41E835231B01F97CE9CD975BE27F973AA31BEA8D4
7AF963233256A1F63A4C125C1C0A764E13DE09D8577B1014DEED657FBCA7D809
47AF05DCA429AAF8DE0B8D61C3585BFA84D057DE72749A4B89793862EADFCB0A
75A468DC32028845769E5022D5513A63DD6CC84E8E6239EA635E49591229F5EF
7D7F3EE6681A9955945149697BF8995EAEA578C071459FAE0A9BB561FBBF414C
E36C2C567D12C6D45939C9425C9B6A11A41E2444F00529E2AA2B902CB3DC8DE3
9690B59FD77802654266CE245095B21421679031D71D0F8A416EA3E7994E94B6
179B1A7B618854859850A21C9EA0419C3A17490CF7125F521B51E5C24E8B9FCA
2BB4FD8FC803E7A9D3B788D34FE8013B359983AEF86382CE9187FB3B9588F10C
884F8AF4A3E374D8F7922044CDF978E1133A94AD4E3E0D370A48C9DD7AF2B05B
9332C3C3B8129DAC73005021617DC173E8468EB41FDE685E011F06B46197B085
AEE33F55AA24E9804DD6272E508FB1069387B023F906B6AFC632E36F01961805
E621388C4B1424BE07AD70B0F2C6AED695BC588E6ABF1D2B38B6A6C3DD6FD89D
29369FFEC78E75016E0C5F88414D52812F0106B19DD47D12CA99C4C7F8B077C2
D919F6E79822D2E558771160CF7D5B4C1DF1F410B1B4BFC39E8266F18F7C2B88
10D01F7456C58AEA498BF279BB449511A91258DC4B7C64E3174050B7C8FAD56D
BEECD31E340A84A5FFE1F4E73AB0D97814C976112B9DE60C2B9B5DC10B27D938
E4E2ED19D9A346970B3FAAC4DDBC9CE916E9873BE38030E36C24CE003E222F0B
231CA8545DBD1051D31C8390960420D8FC056B04E77002CEFCCA0489F12A3640
713EC3DDD0DC45DCDA48200551FD1140A4E685DAB37D11924AAF00565E3B8EDE
8E40FDB4B1999991919D5589C52B018E46EBE636B6214175D6C3850D96283524
49D33F89196645962942DEBDD82A0C4A86F033DD81C25AF2E0C86F2AEEF587F7
FF90E05A28234C71C626BBB119C6057DBFC2B0085C818FDDA774EBDBE7A95018
305356B44FF1625F8400B9041822D7257822D94CD38994F0DCF6CA9C06832E0B
CDBD641B9E673F20AFE5D04D7AA72DF0579C8660394939C321A97D4644D6A811
9B63CBB916F7EDCEC8EFEA7F6410E1511C924FA76B3CACD5E1FF41733D498EB3
0FBE4BD9524A7D9DFF3FE90CD6536E5CA1D6E13BB03BF68B833A83D024B97C47
5CE8C6ECB0D03B51C5B86D31A8B7F71FB272D0E55C2C1389C444547B399E1B36
3EF5FA426AAEB7CFA0201368B14535019A353B8AD44469296DD256E2576AF5A5
083378153907E8FCC24D95DCD55322C3114E05AD6F4C749DFE7538888419A148
C5E9680DC50EEDE0B50E5D8A9A1EB6B111A177DCFD4CD6F5A57A0368FAFEC846
83E0694B8D49201ACDCA3B7FEAE9C9F2DDEC3F13EF8B47659874B532969F77A3
1734B0710311CFF7D2E81E227AE7B85D8B1632EBBBA234AE2CE2AB87739D872E
131CC8AA41BCAF25DF3412D2EA221AAB4C0BDB4CBCDE78CF1AAABB6618E4FE09
A948F900E8E81D90649E3A8C6974CF8BEA49336F976391D628D4F127BC5081D0
A4615B16818D99B6F3E211E760F8C31A12F21A8962CC732483BBDBE878E238A3
AD7D54A0F8D49FFBBEEA2A08DE67253E14091FB92373C71F3F9B1649C5F3C80F
F3CBC0C96E836D6598FD8B539BDCA02A0A1C3058ABF110679EAC1AE74B4EEADD
E0FE0B5D86C9538B9E3260EB81496D3C547C1141A7903C924ABA53A4B5C7C390
F436CB4C0DB8E54FA38D419001AE35BBF8E45CB1D9EC09E266A73531E9F9B83A
B19D7A795E2BE005DB42E46653449EE9772E06F36A75482AB01D1425FF06DF36
71E2423ADC32137D05344921545DD99DB567D5486DF8C29864621BB2A29D5698
29577BF4A90C0A7A3716E46F464A198EBEE6C1FB72AF08A8D70AEE51EB0ABDEE
AC94BF3611A6C3560C8FFB243A03528359F9CA0BC7FD7E77265441DBB89C9815
27ADC2B4CE6CDDB4BAA9EBC266AECA66192930CE16E72E4F8503DDB58EB2B929
CE53EB5D706ADE5FA46BD7F43F050DD2BAC23CA90A1B3F48F7BA02A2AD093DD4
4627A8415B5BF9CC780D7FBF21C20D5E8BD8EDD3011935C6EB98716C9F052D6C
66D3FAEE0166ADE5F16BE5F1CAC3CEB55D9DF0244CD985EDF7315B239001EA63
1F6E56552CA421D14A0B49DEDFA9B15A961EB62924F76ACBE5705BAC665A8468
23D2E41417CB5659F4A3CFC8C97FBB116362E8A258EC0F8CCFB7E0607CB566EC
A1EE092900BE6FD3C47D29CFB83E438FA7115926B508854EBB0BF3BAC3B44161
78862E8EAAE161FA2F8D711C14792AC84CDECB815A2B83CF7E2C563928D33F7D
B0985F0A3C2E9D379189360FED33DD9AFD4BCD49BCCFB65347FD1767DFDB6F85
337F7B399825D48797F341825ABD849980EBBAF61719BC50DFACBBC00F0115B8
FBAE1E8134BC45C573FB02668AC5DE573D52DB29069A8BB6EBB0684B510DFD80
DF00095688B66DF033A4F9F7EEE92BA769DC7E4C5AB3F50FE19F3A3904E87813
B21E74A216ECAAB6DAE2D8907671248569054F450ED9796220D6EF04EA845A62
41FF262C6E8C4C3F2D173143110CEE64FEC112E525B7397893AA3D939EA7116F
BA984034BF416E8F6CD8A749E73F755679638E2360C7010222639EE315626BC1
4D272D97333B743C7AF418C2A2E06261D47759D92D9231A7717976FBB04E6A35
77A6641A0411822D61C461E26D2E83645828EB112AE678F6903E6F550A87C7C3
696AD83CA15099ECDF3A273E8CEF02EB3FB56440DF99E6DC49E4D01F9286E110
85D68EBB05E731890B2943B9666224238DC2474FA063D45F185461D8AD5AAD09
5647EB85042583C97109326F51053A08C55122FEB4CE15CF650E25FBF401B916
94F437F92D88C9ECB5CDFA5812BFF70B33F5289EFF0E1449019182C7C6A1D52C
FA7698981C9B6113FE9E1C781C3CBE645A0F2B353C392C7D740628AE945B60AE
3D43E04691EA342FCB2623DFA6BE42ABC853DE4855462F941DE00884102BCC0F
7095A3289153CB75D11CAD02ABB6357F0AEB3073FCA9B33AEC147B381DD480B9
FDD07CC588F6956EA539F8D3D032A234F38B5B8837973108785C1400E0D96EDB
A20A78D585115EDCEE11F3802AF740BD9C765861A95092B7CED26EF1639ACAC3
C3C3AC7708061FAC0F21DE18CC23D29A563527B595118FF987B207CA0C68F3E6
806A192AD803396574D713018CB234A10836AB34663A141DA69B46D41A04EDB9
93985CE265F1145D3B1428B90D09A2EBC928A7F45C2CF092C3E8760F75049300
9BA9B13FD300A78B984ADD836701BE3CA4554FAEA417E42BABE0C8DFA45ADE77
FA6B842B0E4335502C2819D626576715E6B577374C6F891993D07FDCBBFECF19
8AA5C28D0934FA48C7FC7510B2871F1324933CB7F3E7C1A59F0DC987720EC342
3FD37E586D414C9B34217DD5D15B472AE491DC2A1B2D75225EFEA39202B10C57
812C1FF8DE361C46A55BAEE96A1DFE527FE70B06090D67E7BB00A34677D5EEDE
8D294F585B9D9F17DFBAF837DCB81B817FCC2ECE7AA9F4BD96D8F7AC779E62D0
BEBBFE223BA9B7C2F8395214EB73D56A49606E2F2A919A49A9DD9F74023C7C5F
61CAB97DA3FEE6B0CB2BDB589CFAC45801100FA347EFCC2276081F080C86F93F
2220535272279A831D784DBDBD2B08A875DDACA3FFADB72B53B57FC81EF21495
2BD1EA3E6F1BE8B5A75D7C5CF55AB1DF5D03D1C36457737AD7A7DE6A45A86FEB
F99B1EC6A0412BEC2D31B5118EAB972FAEB834D26EC17A5C239243CEEB9F4600
0494378C7E74315A30D394B883CBB3CBE2B8DFCF4072071870608BC6D4453C68
41ECC7B98959FB9D5EF749E79721BB69DAA014F8406D909C9BD512A998CF7B8B
45A263425D9A6210456F13FCD1526F22456DE444BE794F0E7F2B7E8E3DC6C2EB
1F44BA75A6041FB8EAAE9AB901A003E06578E6C6D0C4264C30C1EAB90554B1FD
8C5C909198A0287D569147C991553573CEDB8C07B285894A34177E60CBBFAE5D
3433BD96ACDA16A04315E40EFA7157260EAF6A2FBC2C9667887726BE69BBDA34
9288E11506DB605C2E247AFEFD36D02BD1A4D09B1F9B0DA97133A3ABC8B10239
79AEE23540EB7903B8C5CC9928838D46E4D34E6B8963DE4A1CF228725A774BB2
3D17E01AA3F41A52AD8A869A8D69E11323E73C3D1E7A3AF1EBF95BFA7E6DA00A
74B5B1D37BA13752B6C9DDF4B456A7ABF5FAFC8C3FE3115964BA38A601532D16
A3F269B9FDDD26605961C05FE2AC18E070D91A43A0F9F2815E18AA4744440E84
23E5DFCD5F5866CA21E9B8AEBC143B4190409C4B03AB2131B59709DFB7D898F3
C5BDA4BB16580F9AEE617FE89BC46292F16DB16199ED4700E05FF3AF49C91A7C
268CD34E35148A1BFE76103A7F2D2E713D4FD909D2FB6014E2957D2016BDA248
4848917004C0610CA5008AF5CC24E8F03BAB7875019F28AECE1F74FE44FAF86D
C3ED0B8355E0BE4106C227E11D5BCBBA6D007681DF63C9E2A6A53AA2ABBB9456
E5952A0525328F2D6C5960C870852FE19AAD32A09F7F47B8ED1233325CA158ED
057C9BF9835063D5118F80CF65399FF92A04EB43B009908225BA47402C3CF3AD
C3A1BF06611A987DF11D5785280CBDAF42B83EC13851A3F8514F554574C5527B
0925020A7077E7617C77C9EC413E7AE2EE996A945A794DAB58D85C798D76BC1E
1F4D31CF12EA0E76FC0FF737012311C92F49B45D650A64A74D078737491D4FD1
BAE70C4CA52172460A5F837D14C9C5072A29F30634059266D41C7D3E420C0E35
62687146C60E822B7B9B301BD5D8CC7C2F1891F7D43C10EA0183FB3C9D9810BD
99807D5AEC0CFAFD14A14D353335D498B9292167774B85A26A4D596505263F59
6B56215341AA3833899300348CE84D859005B46DE8B6362427BCA61E05466F48
062B053E531B0DB87704FA5FF39CBC57D26831635F7FACDF086BE7BCD561A2FA
BB13E077D796EF8A1C11BEAF1579941291722A40DCA542AC740CC52F3A64CC3B
E2531DE57A20C24E7D3B8FD7047C3ACF9EFCED2F6A0BBB971D57107ACEDEDCBC
F4744D750C868DFB5FE5C4A242A60896ED979FCEE9CD4129275F82F2EC7ED2FB
6F2C72824D2085348F60FE3280A9DCFF549A2C9CDC3A0B60DA55E124844C756E
E9FEE25EC5EAB1D964540E04999961900B97F4BFD929ECE8E61F51593BCA0E35
BD70C5F0EA27CA7414B39B7D5531BB57536F1C9C507D60F25D86EEC0F477A1A0
AF646CD1137B332327BE03A6565ECC5875EC3D858E8E9655A095335268312F51
F8E2BBE82474FE984B724AE20449955E87E7CDFD026DE397456358587A68A00D
7E13E3F88D7DCE6E6BDE71DA733D3FF96CD42386C234A9B841AF5B86B05F573A
2628A8F72F32F5C3B81E4F20045530056D368CA739A61101D205A122D28D1C07
0FC1DD37B3911B21CC3AA7886F38D685799A08D385AB3BC8A59938AD03ABFAC1
D02E0C4F3C76619DBBC6645C49F89EFB35CB67BB34EE1D3E283257FA60C5AF0F
B4E3AFF0912C005C8CEB8D7D99FCB077940538E774ADDA2FCCA33907625CEDE7
DEB73C7830A3277708012985BABF7786012146161C844DE7899B178F0C7D7317
51392123054227A2D0B85E4A9E9CD208D3099C6097980E7B35A59B240F76A20D
3A6656AAE47BA6B6C49CC3C5B88A3A112F342B108DA64661F22512F864F7CD10
D48FA7F6AB41CB50F6FBDACD01780348FBFC20D6FA8E9D98B9E0650BB72540F7
0333796181D0B225996024D2CB7E2DD844B1EC544A5E2EDC7EDF14C1527FAAA9
A2C210BA92F5D5F43430462A3CE40DA2CC6B27C9F08263EC869B883F2D5DF040
24292425508E80078BE4BA998F7908F0E411F9CE59CCF35BCEAA02CDFB805061
F946FFFE367BBC48418201EEFA62C6DB2E4B78EAE8891B4D7AF8009037BC2152
56CFF25F22E7CFE2655FF54457742DB40BE9243A112153492A11097EB94B7B72
5FEEDBE579C19C233F69553B0F1D07C04642BBD0AC66287D35A9E2D1C1C7C84C
674F30AE5F6D290E6730020CE04168F69FFA3AA6C9E8F02299BBD46EC7D0A18A
9939B159AD77C1756C44EED2EAA9B1DE54AB36861CA6156A2CA0BBEFEEA8599C
67672D696A18D1156BADB8CF6EF6A2A6EB639BC47EBCC9EB7EA5E64C5F75A51F
E31444B4EBA97D60EAD4086F12A733122DA5252B8F58352B190832E18D6A5023
301F9B4531A69B3D87F4D1E4CA60F48595BEE9736DEA8F70E5DC2FA99F3CA553
5780E7D2E1702239C09469FA7090EA091889DD54EE0164A6D5C8EF0F360900AB
EC1E54D704811E1ED7AF55BAB40D38EF1372BF3CA0426398051BE47CCBE1083C
7C2212BC1EF9E00A736EDB0F50C8D2170014830BA61FA6970C1A7A832974F8A7
F5E5029F35E0DE0AB3E9FF9290B2CB81712F1C3468CBAA1A6226B0791049D7A9
B1CD51F5F17A283E508B46006C638116F6357DBBFF8E1485DF084D642E53BAB4
FB04A39FCDBB2D63CE913EBA5C4A39BC8B79079E06BA9AA1A4198CF8D9CCF544
F05391CD8C64D1D3A285AE9C1E235D9DE64E0ACE4CBDA86BEDE1468E555E89A0
B6D49BB40BB90D801233F308C8462BEE5E41B5AA863E1AAC337FAC97A3188D06
81DB241C9465E2AB7E88F6ECA3103341863DCC608DC755CF0E19E1EA63962E23
068C5965E04E921CE6D221EF852795B9D8DE8B7FAD89A3EE75834CA0BC3C118B
63C0E950138197E3CA885FC826D7A945CC13F2076EA8A3D7B6966B5BDF224607
000D73886F178488737937B7ACF90F33114B1CF6D4053EADEA082BB0F17C4579
DDDDB708AFABEF8F8ADF73374F415C56DE6B480EAF3206FA4511B359E5D8548F
04DE7C9E0BA58E51FC8D15D932F1BBCC4BB7568CE7115827F0456291A77634B9
D90616DCCC388660DF4FC881B1B23636B6D1D256987D998DA8A5DF75032886BC
78CCA1390CD16AC5F91DA9BAB29B22D1614C4AADE935F6856B33C9793C104A99
DD7DD952E53891CBA457E5C4665F0C806A7F79AB1694D03B44B80BF7B67324FA
BE241CB67DBE56A3CC958A84E939B33D88F456E937D57DACF4ED620CE2F8EEA7
63CD150D5C4FAD5A1153BD774DF9C1D00D66FEBFD928BFE4348502C9930E161F
231CEC8BD761E82A14463BB8B2D9A02A91DCA15DECCDF57338BB4AC2277B5D01
E1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D916672480464F7E22
CA6E431FE38D3FC019BDD229E064B72C545C61C6EA55984565CCA88ACB01F744
3B4593CC8944C70F30925FB48A16342CC26D444F54CA15E5A624C4A2DAA2AEF8
404145BBA339F2A2D6FC2F3ECE54387761CA1213C8D56FF96E37C6147CA44B84
262EA87E7CC10D931E6B5B80D7F09813498497AA84ACB4AC69BC6C8481ED2953
084F560D7B1CF90555E69BD2AF7C5D944E8E3506165014652462BE1BC81CA341
E1B0725159D36DA0FFF3577D1DEBC5D91AE683FB0384
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusRomNo9L-ReguItal
%!PS-AdobeFont-1.0: NimbusRomNo9L-ReguItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular Italic) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -15.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-ReguItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-169 -270 1010 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E134D4CB5ABCED39AC635
DA001E9934C198A7F9B9ED0028A85E9AE00421DFD8EAA3BB3B4B4CE45D209303
237BD51809FE4D880900B1EEB236ACA87B9FF6EBE6B994A60AF5D67CCC42BD56
77295C346EB4C62BDC1EF22EE07DAAD928DFB73455F091F32408ED6430B97417
683AF27A03718A156E3F6E7B6E4F2E8177503CD82DDBF4557A3CCFF4C858AE7A
F7EFED6CC521A28342436B953E4650B5792BE85EA2F989EB6D986905A61FA38B
96E1BBC830B74469150FB0B598A794FD80D10870084A877273A9502C3456E5EF
74350E6E3BE5863E8BA185EB59FB87B36566AF71200B6ED389D1287D4E925E33
B2383ED05D87D48586E698FBC5D562ED9D8A09EC3EAA1B1F300224AF20C23F26
A2EADC74562571DA84B3914D1D80B127C6FF4706C7046BBB372A0013E0AB94F0
C27946583871D272BF4F20FA84E89D745DE7BBA885CC09BA72E0F530ED4EF7D1
864B3C67007ED98800284235372F0A70C912E21E851AFBF812165B8DF912CD1A
013E271F0B347967876C68AE4C4107EF8AD1F170916210034C66394A9D971B68
FBFC1131E37FC178EB97C1B2A0F573ADD9D7C0BF944E6529734DF8A7EF54485B
A3375CC30E9E328943733CBD352BC15B06C85BFB4A96994291C72A0EAE84FB01
0F1B24D0125FB8C16D60561DF8BB7AA7DDFE9549AFB70C1E89424214609FDE41
9A142892E30F02754FD234CEB3C59A2A04C06BAB7AE40E8FDEC50559B8347684
391C750987802D5452C47C1E0B5F222DE9A0EEAFEE19D796FF375A1E1EF0AEED
1BCAC4F485FCAEE18AEC585D1A9D80F41871DDA45FEF1EAE82C5893118987BEB
4D9E345C27C7419FE65E4853B40537D822E34FF1E0BD2819D21EF607981259E8
9F1040A2D708D7463858AA5381759AC49DF4DDDEB209A278FE60BD2508ACA0F4
6A249A05B652E4C7BF1B676943CDC466CFFDF0E84AB0B48F8A92F379B6AB32FD
FEBB8A80ABD337AE696F67BC815250CE538103F5D8ACB7A816057705303FC1F7
F0EC7DAED7CF1C8AA9A0A495EE75A168A715976FBD5F0709FEDD26FD29CEB3E5
955BD04F4BCB9D5BA41ED7303D15E633A518E38D5E7BF925EA30F9291FFC32C1
EDDC8046BB8326DE0B22FB880AB97FB6FCD46E7B1A995CF6579AF2E6E471019D
1480CFE6ECC312D6188D585FFAE5C0F98E7C3258873B80349E8E7D71E6C903A0
29591697CEB593B52716370B09310DB3EA509F660879B0191AE8B5E669DFB492
97D6AFF170EE660BD98CFDE917CAB1206021AF885AE0A834C3C7AF2EB647432D
1342935485FF127534EB51617CB8C7E22541BDEBDA1CDCA2BEE1A013AD7F2443
A50CFA43D254FA7DB5640378730CDB4762B2ED5175395EDB850ABD9ED0E845DC
B9D2D7BB58CFA615A14C5DCB9720CACB04909D84FBB1F2A4E5E7F69F536DD171
BD387EECCD2842F4C6C331870D08CC0BDCB9CAC6D64F6F3C53DCF8009ED3C361
40C7AB0AEDBFAC74A00E96FA5FE7E2F3A42FDC0E1A74A57EBAAA59F09BCAA195
BB15BB1FFABAD6F76AE275DB8B7964DC539D3E80C8F644F580E2D84C034590A5
14FA9C0A9117CE3740CDDCCF2E6FAE3B9930EDA241BC5B786FF7CF08F011470E
456D4236CA6097A50F1AC132895D94817928CF3AAB0825465E7EC07015583BB9
BE31A921CA50F07462F6AECB9258FAE9F7BA3259CFEC779D08B6CEAF55D96751
D2F511526504D18877732619888B727639842C303C4BC4E1BBB6D21B59BB0C9D
A7CD536692113A84200BB9C201CD29EC9D6400F511E9AFD3F121279648E61AAA
063125D7817BAAB7D5A9A5691D12BF55BB04F3383C67635C811B9FB8911F7D4D

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 23681430 14208860 1000 600 600
(/home/jw/.cache/matplotlib/tex.cache/4b/32/4b327d84fc6fb8000f242b39493cdf87dbab8d5bad23b21f0850ec362cc2c6e7.dvi)
@start /Fa 147[26 35[67 4[61 67[{ TeXBase1Encoding ReEncodeFont }3
92.1551 /NimbusRomNo9L-Regu rf /Fc 197[28 58[{}1 99.6264
/CMMI10 rf /Fe 141[41 2[62 17[41 1[41 6[76 38[41 45[{
 TeXBase1Encoding ReEncodeFont }6 124.533 /NimbusRomNo9L-Regu
rf /Ff 167[76 7[76 80[{ TeXBase1Encoding ReEncodeFont }2
124.533 /NimbusRomNo9L-ReguItal rf /Fh 199[50 1[50 1[50
50 50 50 50 48[{ TeXBase1Encoding ReEncodeFont }7 99.6264
/NimbusRomNo9L-Regu rf /Fj 139[23 32 28 1[42 1[42 65
23 4[42 28 37 1[37 1[37 13[46 2[46 80[{ TeXBase1Encoding ReEncodeFont }
14 83.022 /NimbusRomNo9L-Regu rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black -600 1200 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 -600
1200 a -600 1200 a
 /PSfrag where{pop(psmarker0)[[0(bl)1 0.000000]](psmarker1)[[1(bl)1
0.000000]](psmarker2)[[2(bl)1 0.000000]](psmarker3)[[3(bl)1 0.000000]](psmarker4)[[4(bl)1
0.000000]](psmarker5)[[5(bl)1 0.000000]](psmarker6)[[6(bl)1 0.000000]](psmarker7)[[7(bl)1
0.000000]](psmarker8)[[8(bl)1 0.000000]](psmarker9)[[9(bl)1 0.000000]](psmarker10)[[10(bl)1
0.000000]](psmarker11)[[11(bl)1 90.000000]]12 0 -1/Begin PSfrag}{userdict
/PSfrag{pop}put}ifelse
 -600 1200 a @beginspecial 0 @llx 0
@lly 360 @urx 216 @ury 3600 @rwi @clip @setspecial
%%BeginDocument: /tmp/tmp9bfih533/tmp.ps
%!PS-Adobe-3.0 EPSF-3.0
%%LanguageLevel: 3
%%Title: P-vs-HCl-compare.eps
%%Creator: Matplotlib v3.10.3, https://matplotlib.org/
%%CreationDate: Mon Aug 18 11:49:56 2025
%%BoundingBox: 0 0 360 216
%%HiResBoundingBox: 0.000000 0.000000 360.000000 216.000000
%%EndComments
%%BeginProlog
/mpldict 8 dict def
mpldict begin
/_d { bind def } bind def/m { moveto } _d/l { lineto } _d/r { rlineto } _d/c { curveto } _d/cl { closepath } _d/ce { closepath eofill } _d/sc { setcachedevice } _d
end
%%EndProlog
mpldict begin
0 0 translate
0 0 360 216 rectclip
gsave
0 0 m
360 0 l
360 216 l
0 216 l
cl
1 setgray
fill
grestore
gsave
58.888896 42.360788 m
349.2 42.360788 l
349.2 205.2 l
58.888896 205.2 l
cl
1 setgray
fill
grestore
1 setlinewidth
1 setlinejoin
0 setlinecap
[] 0 setdash
0 setgray
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
113.756 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
113.756 205.2 o
grestore
gsave
107.779 30.672 moveto
(psmarker0)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
169.318 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
169.318 205.2 o
grestore
gsave
163.341 30.672 moveto
(psmarker1)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
224.88 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
224.88 205.2 o
grestore
gsave
218.903 30.672 moveto
(psmarker2)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
280.442 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
280.442 205.2 o
grestore
gsave
274.465 30.672 moveto
(psmarker3)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
336.004 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
336.004 205.2 o
grestore
gsave
327.038 30.672 moveto
(psmarker4)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
69.3068 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
69.3068 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
80.4191 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
80.4191 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
91.5315 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
91.5315 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
102.644 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
102.644 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
124.869 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
124.869 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
135.981 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
135.981 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
147.093 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
147.093 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
158.206 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
158.206 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
180.431 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
180.431 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
191.543 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
191.543 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
202.655 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
202.655 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
213.768 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
213.768 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
235.993 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
235.993 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
247.105 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
247.105 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
258.217 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
258.217 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
269.33 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
269.33 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
291.554 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
291.554 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
302.667 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
302.667 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
313.779 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
313.779 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
324.892 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
324.892 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
347.116 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
347.116 205.2 o
grestore
gsave
179.955 11.599 moveto
(psmarker5)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 44.8614 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 44.8614 o
grestore
gsave
28.167 40.725 moveto
(psmarker6)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 78.8873 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 78.8873 o
grestore
gsave
28.167 74.751 moveto
(psmarker7)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 112.913 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 112.913 o
grestore
gsave
28.167 108.777 moveto
(psmarker8)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 146.939 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 146.939 o
grestore
gsave
28.167 142.803 moveto
(psmarker9)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 180.965 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 180.965 o
grestore
gsave
28.167 176.829 moveto
(psmarker10)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 51.6666 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 51.6666 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 58.4718 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 58.4718 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 65.2769 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 65.2769 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 72.0821 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 72.0821 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 85.6925 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 85.6925 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 92.4976 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 92.4976 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 99.3028 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 99.3028 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 106.108 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 106.108 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 119.718 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 119.718 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 126.524 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 126.524 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 133.329 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 133.329 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 140.134 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 140.134 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 153.744 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 153.744 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 160.549 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 160.549 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 167.355 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 167.355 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 174.16 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 174.16 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 187.77 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 187.77 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 194.575 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 194.575 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 201.38 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 201.38 o
grestore
gsave
23.422 100.603 moveto
(psmarker11)
show
grestore
2.5 setlinewidth
[16 4 2.5 4] 0 setdash
0 0 1 setrgbcolor
gsave
58.889 42.361 290.311 162.839 rectclip
72.084855 105.867776 m
78.852021 105.335271 l
85.619159 104.998415 l
92.386352 104.741179 l
99.153518 104.529198 l
105.920684 104.34852 l
112.687849 104.191321 l
119.455015 104.052835 l
126.222181 103.929662 l
132.989347 103.819078 l
139.756512 103.719382 l
146.523678 103.628533 l
153.290844 103.54619 l
160.05801 103.470312 l
166.825175 103.4009 l
173.592341 103.336931 l
180.359507 103.277726 l
187.126672 103.222604 l
193.893838 103.171565 l
200.661004 103.124269 l
207.427892 103.080036 l
214.195058 103.038524 l
220.962223 102.999734 l
227.729389 102.963327 l
234.496555 102.929301 l
241.26372 102.897317 l
248.030886 102.867034 l
254.798052 102.838452 l
261.565218 102.811571 l
268.332383 102.786392 l
275.099549 102.762234 l
281.866715 102.739437 l
288.633881 102.718 l
295.401046 102.697585 l
302.168212 102.67819 l
308.935378 102.659816 l
315.702544 102.642122 l
322.469709 102.62545 l
329.236875 102.609798 l
336.004041 102.594486 l
stroke
grestore
1 setlinewidth
2 setlinejoin
[] 0 setdash
0 setgray
gsave
58.889 42.361 290.311 162.839 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
2 setlinejoin

0 setlinecap

0 2 m
-0.449028 0.618034 l
-1.902113 0.618034 l
-0.726543 -0.236068 l
-1.175571 -1.618034 l
-0 -0.763932 l
1.175571 -1.618034 l
0.726543 -0.236068 l
1.902113 0.618034 l
0.449028 0.618034 l
cl

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
72.0849 105.294 o
78.852 104.788 o
85.6192 104.485 o
92.3864 104.259 o
99.1535 104.076 o
105.921 103.922 o
112.688 103.789 o
119.455 103.673 o
126.222 103.571 o
132.989 103.48 o
139.757 103.399 o
146.524 103.326 o
153.291 103.259 o
160.058 103.199 o
166.825 103.145 o
173.592 103.095 o
180.36 103.049 o
187.127 103.008 o
193.894 102.969 o
200.661 102.934 o
207.428 102.901 o
214.195 102.871 o
220.962 102.844 o
227.729 102.818 o
234.497 102.794 o
241.264 102.772 o
248.031 102.752 o
254.798 102.733 o
261.565 102.715 o
268.332 102.699 o
275.1 102.683 o
281.867 102.669 o
288.634 102.656 o
295.401 102.644 o
302.168 102.633 o
308.935 102.622 o
315.703 102.612 o
322.47 102.603 o
329.237 102.594 o
336.004 102.587 o
grestore
2.5 setlinewidth
1 setlinejoin
[9.25 4] 0 setdash
0 0.5 0 setrgbcolor
gsave
58.889 42.361 290.311 162.839 rectclip
72.084855 197.511039 m
78.852021 197.696821 l
85.619159 197.767594 l
92.386352 197.793454 l
99.153518 197.798218 l
105.920684 197.790732 l
112.687849 197.776101 l
119.455015 197.757046 l
126.222181 197.73493 l
132.989347 197.710771 l
139.756512 197.685252 l
146.523678 197.658712 l
153.290844 197.631831 l
160.05801 197.604951 l
166.825175 197.57739 l
173.592341 197.550169 l
180.359507 197.523289 l
187.126672 197.496068 l
193.893838 197.469528 l
200.661004 197.442987 l
207.427892 197.416788 l
214.195058 197.390928 l
220.962223 197.365068 l
227.729389 197.339889 l
234.496555 197.31471 l
241.26372 197.290211 l
248.030886 197.265713 l
254.798052 197.241554 l
261.565218 197.217736 l
268.332383 197.193918 l
275.099549 197.17044 l
281.866715 197.147303 l
288.633881 197.124505 l
295.401046 197.101708 l
302.168212 197.078911 l
308.935378 197.056453 l
315.702544 197.034337 l
322.469709 197.01222 l
329.236875 196.990103 l
336.004041 196.968326 l
stroke
grestore
1 setlinewidth
[] 0 setdash
0 0.75 0.75 setrgbcolor
gsave
58.889 42.361 290.311 162.839 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 -2 m
0.530406 -2 1.03916 -1.789267 1.414214 -1.414214 c
1.789267 -1.03916 2 -0.530406 2 0 c
2 0.530406 1.789267 1.03916 1.414214 1.414214 c
1.03916 1.789267 0.530406 2 0 2 c
-0.530406 2 -1.03916 1.789267 -1.414214 1.414214 c
-1.789267 1.03916 -2 0.530406 -2 0 c
-2 -0.530406 -1.789267 -1.03916 -1.414214 -1.414214 c
-1.03916 -1.789267 -0.530406 -2 0 -2 c
cl

gsave
0 0.75 0.75 setrgbcolor
fill
grestore
stroke
grestore
} bind def
72.0849 197.167 o
78.852 197.393 o
85.6192 197.483 o
92.3864 197.524 o
99.1535 197.542 o
105.921 197.548 o
112.688 197.548 o
119.455 197.543 o
126.222 197.536 o
132.989 197.527 o
139.757 197.516 o
146.524 197.505 o
153.291 197.494 o
160.058 197.482 o
166.825 197.47 o
173.592 197.457 o
180.36 197.445 o
187.127 197.432 o
193.894 197.419 o
200.661 197.407 o
207.428 197.394 o
214.195 197.381 o
220.962 197.369 o
227.729 197.356 o
234.497 197.344 o
241.264 197.331 o
248.031 197.319 o
254.798 197.307 o
261.565 197.294 o
268.332 197.282 o
275.1 197.27 o
281.867 197.258 o
288.634 197.245 o
295.401 197.233 o
302.168 197.221 o
308.935 197.209 o
315.703 197.197 o
322.47 197.185 o
329.237 197.173 o
336.004 197.161 o
grestore
2.5 setlinewidth
2 setlinecap
1 0 0 setrgbcolor
gsave
58.889 42.361 290.311 162.839 rectclip
72.084855 50.108512 m
78.852021 50.006196 l
85.619159 49.932462 l
92.386352 49.879109 l
99.153518 49.84066 l
105.920684 49.813235 l
112.687849 49.794147 l
119.455015 49.781421 l
126.222181 49.773561 l
132.989347 49.769512 l
139.756512 49.768423 l
146.523678 49.769648 l
153.290844 49.772744 l
160.05801 49.77727 l
166.825175 49.782952 l
173.592341 49.789553 l
180.359507 49.796835 l
187.126672 49.804695 l
193.893838 49.812997 l
200.661004 49.82164 l
207.427892 49.830554 l
214.195058 49.839639 l
220.962223 49.84886 l
227.729389 49.858149 l
234.496555 49.86754 l
241.26372 49.876932 l
248.030886 49.886323 l
254.798052 49.895714 l
261.565218 49.905037 l
268.332383 49.91436 l
275.099549 49.923581 l
281.866715 49.932768 l
288.633881 49.941887 l
295.401046 49.950904 l
302.168212 49.959853 l
308.935378 49.968699 l
315.702544 49.977478 l
322.469709 49.986155 l
329.236875 49.994763 l
336.004041 50.003236 l
stroke
grestore
1 setlinewidth
0 setlinecap
0.75 0 0.75 setrgbcolor
gsave
58.889 42.361 290.311 162.839 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-2 -2 m
2 2 l
-2 2 m
2 -2 l

gsave
0.75 0 0.75 setrgbcolor
fill
grestore
stroke
grestore
} bind def
72.0849 50.0701 o
78.852 49.9743 o
85.6192 49.9061 o
92.3864 49.8574 o
99.1535 49.8226 o
105.921 49.7983 o
112.688 49.7818 o
119.455 49.7711 o
126.222 49.7651 o
132.989 49.7626 o
139.757 49.7628 o
146.524 49.7652 o
153.291 49.7693 o
160.058 49.7748 o
166.825 49.7813 o
173.592 49.7886 o
180.36 49.7967 o
187.127 49.8052 o
193.894 49.8141 o
200.661 49.8233 o
207.428 49.8328 o
214.195 49.8424 o
220.962 49.8521 o
227.729 49.8619 o
234.497 49.8718 o
241.264 49.8817 o
248.031 49.8915 o
254.798 49.9013 o
261.565 49.9111 o
268.332 49.9208 o
275.1 49.9305 o
281.867 49.9401 o
288.634 49.9496 o
295.401 49.959 o
302.168 49.9683 o
308.935 49.9776 o
315.703 49.9867 o
322.47 49.9957 o
329.237 50.0047 o
336.004 50.0135 o
grestore
1.5 setlinewidth
0 setlinejoin
2 setlinecap
0 setgray
gsave
58.888896 42.360788 m
58.888896 205.2 l
stroke
grestore
gsave
349.2 42.360788 m
349.2 205.2 l
stroke
grestore
gsave
58.888896 42.360788 m
349.2 42.360788 l
stroke
grestore
gsave
58.888896 205.2 m
349.2 205.2 l
stroke
grestore

end
showpage

%%EndDocument
 @endspecial -600 1200 a
 /End PSfrag
 -600 1200 a -600 -111 a
 /Hide PSfrag
 -600
-111 a -1285 -55 a Fj(PSfrag)20 b(replacements)p -1285
-24 685 4 v -600 -20 a
 /Unhide PSfrag
 -600 -20 a -700 79 a
  {
 -700 79 a
Black 0 0 0 TeXcolorrgb -2 x Fh(20)p Black Black -700
79 a
  } 0/Place PSfrag
 -700 79 a -700 179 a
  {
 -700 179 a Black 0 0 0 TeXcolorrgb
-2 x Fh(40)p Black Black -700 179 a
  } 1/Place PSfrag
 -700 179 a -700 279
a
  {
 -700 279 a Black 0 0 0 TeXcolorrgb -2 x Fh(60)p Black
Black -700 279 a
  } 2/Place PSfrag
 -700 279 a -700 378 a
  {
 -700 378 a Black
0 0 0 TeXcolorrgb -2 x Fh(80)p Black Black -700 378 a
  } 3/Place PSfrag

-700 378 a -749 478 a
  {
 -749 478 a Black 0 0 0 TeXcolorrgb
-2 x Fh(100)p Black Black -749 478 a
  } 4/Place PSfrag
 -749 478 a -1001
589 a
  {
 -1001 589 a Black 0 0 0 TeXcolorrgb -20 x Ff(P)31
b Fe([T)-10 b(orr])p Black Black -1001 589 a
  } 5/Place PSfrag
 -1001 589
a -827 688 a
  {
 -827 688 a Black 0 0 0 TeXcolorrgb -2 x
Fh(0)p Fc(:)p Fh(000)p Black Black -827 688 a
  } 6/Place PSfrag
 -827 688
a -827 788 a
  {
 -827 788 a Black 0 0 0 TeXcolorrgb -2 x
Fh(0)p Fc(:)p Fh(001)p Black Black -827 788 a
  } 7/Place PSfrag
 -827 788
a -827 888 a
  {
 -827 888 a Black 0 0 0 TeXcolorrgb -2 x
Fh(0)p Fc(:)p Fh(002)p Black Black -827 888 a
  } 8/Place PSfrag
 -827 888
a -827 987 a
  {
 -827 987 a Black 0 0 0 TeXcolorrgb -2 x
Fh(0)p Fc(:)p Fh(003)p Black Black -827 987 a
  } 9/Place PSfrag
 -827 987
a -827 1087 a
  {
 -827 1087 a Black 0 0 0 TeXcolorrgb -2
x Fh(0)p Fc(:)p Fh(004)p Black Black -827 1087 a
  } 10/Place PSfrag
 -827
1087 a -986 1200 a
  {
 -986 1200 a Black 0 0 0 TeXcolorrgb
-22 x Ff(X)-913 1199 y Fa(HCl)-724 1178 y Fe([-])p Black
Black -986 1200 a
  } 11/Place PSfrag
 -986 1200 a 2400 1200 a
 currentpoint grestore moveto
 2400 1200 a
Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
