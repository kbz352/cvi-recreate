%!PS-Adobe-2.0
%%Creator: dvips(k) 2025.1 (TeX Live 2025)  Copyright 2025 Radical Eye Software
%%Title: c8b12a6d80e87e31c9fc514dfc6d780bdd0fedac52f516684d162fb92b9765fa.dvi
%%CreationDate: Mon Aug 18 15:58:57 2025
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 360 216
%%DocumentFonts: NimbusRomNo9L-Regu StandardSymL NimbusRomNo9L-ReguItal
%%+ CMSY10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /run/current-system/sw/bin/dvips -q -R0 -o
%+ /tmp/tmpqes4lipa/tmp.ps
%+ /home/jw/.cache/matplotlib/tex.cache/c8/b1/c8b12a6d80e87e31c9fc514dfc6d780bdd0fedac52f516684d162fb92b9765fa.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2025.08.18:1158
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2025 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
      pdf.dest.y pdf.tmpd mul add
      pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
            pdf.count 0 eq { exit } if
            counttomark 2 roll
            1 index /Rect eq
              {
                dup 4 array copy
                dup dup
                  1 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add sub
                  3 exch put
                dup
                  pdf.outerbox 2 get
                  pdf.linkmargin add
                  2 exch put
                dup dup
                  3 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add add
                  1 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                  {
                    pdf.currentrect
                    dup
                      pdf.outerbox 0 get
                      pdf.linkmargin sub
                      0 exch put
                    dup
                      pdf.outerbox 2 get
                      pdf.linkmargin add
                      2 exch put
                    dup dup
                      1 get
                      pdf.baselineskip add
                      1 exch put
                    dup dup
                      3 get
                      pdf.baselineskip add
                      3 exch put
                    /pdf.currentrect exch def
                    pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                  exch
                repeat
                pdf.currentrect
                dup
                  pdf.outerbox 0 get
                  pdf.linkmargin sub
                  0 exch put
                dup dup
                  1 get
                  pdf.baselineskip add
                  1 exch put
                dup dup
                  3 get
                  pdf.baselineskip add
                  3 exch put
                dup 2 index 2 get  2 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                SDict /pdf.pdfmark.good false put
                exit
              }
              { pdf.count 2 sub /pdf.count exch def }
            ifelse
          }
        loop
      }
    if
    /ANN
  }
    def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE585DEB6892874B4D6B35F4BA2895
2DDF4C9B8200B32D7368EC950C963D1DE798F32708041E395A94A27CF34DA94C
B1F8A8AE4E95E3D9D23DBB28D017F1A5A232B2533A21F4FAF71C5CD8623B1DB3
75DEDBBC846759B3DDBACBD0BB9FE882315994E7704F25655F9332C1ACC7C130
53510645FF66168961B7D66288CF36C97474DF121FE8E9B9CDC1B4F27BDAD2A0
4EAFC90D9DEE76C678DB7E7DEAAC1AE5F0C5AA20C9489CF6BF32D2A3CAD6BD84
A5074B5832023E809B80408BB9B61C23FD31B10B777D6D0303D8672E44415545
1033CEE160F9FBE554BD27786B870B25727E7084BEA8B53016FD85CF9289DF78
EE12F3DEB4E33DCD967D167E99036FF3B1B8EA0380FFD69361F81BAF8D677E07
6CEC52D4E5526B66BC38B0CC9669D8D3BCEAEC9258D51D73C33A4D4F1488C39A
AE61A41BAC6A15727CE914A10335A0A09DDE121A580DC892423613708F967186
E210792D9EA463C2FB76BC889370A04D8682D0AE03DE6338AA0D62613C595D1E
9AA52AAD14BB8222997715DC16BB65D88A7AAD93961976DE90E40187EA775CC4
040046CF004AF4D76C8434E66ADB72B6710A1830B017A9711B886A186DB61E3F
985EEFDAD748E35BA0325B034250D21A5C6AF7938C40B271F1A009EB695B077F
72BA75DCFC69B0F51A459B5188EFD13F7DB0985F0A3C2E1487D41BD2468A7485
68DF2313ECAB9404016B1330269B6C9AAF3DA1026C2155022E70A7B97D5562F5
5C3CD0CFDD5E1917BE04D545FBCC6E46D7AF6CBF36A165C6A9931EECD7F7D180
5326919EE4DC25691389942B725B498D7198E266F5F60C70844F6230EDE6EC7A
CFC35B6AE123E6B03D9875FCC11919647E8B40A5A2EB1BB8C26FE9004BC127FB
7367DD9F70A15A766C9C67C95A518A4E514DB0410B1E140095EBEBDD09F60C7E
4966B4FAEB0406B72F8FF605BD06D53BBF45339CF66C5C2BAAA51D9353F5CABF
827F4953D76B779C8609E85E4BCFE84319532B3AC9D62BD413CFB0A7489DD69A
A1D690954DD77B0CC9B824007A7E638672D6AD3E0F12CECB7595C5E680E31F06
B8DF8A89E3A21E12FD05D033B7BB01DD0B9469C910B7A7DD6AAC7302F6B52648
2E4C9257CDC556314D5C972D3472B6DE6FF9635DD8C6FD508F211931143BA01D
7D08EF514E0ECADFAEF80EC2B6173E40E41727528710CBCC57458FB78C6ECB64
60A281A80F502523BC02292CA59363D6091443CAA846B4B896AC332DBC5C50C9
7F6B6F1227D0D8FF71335393E9F72BBFCB7462632EB6BE7CEC198632CC739EEB
8A4075951B186DF6A9B62F7C96BB4B92ED7DBAD6C2DC672BF913ED44A41A2D1E
5D98F8F36DB986C6C618AA75E527C04ED4016B8B560315BDE6D5431809F175C7
567728FBC797A6FE0A013CC97535A6E4F812454833BEF05947F6414AFB850951
B78A6A20247B49CE410908042ACDE9414264C06FB74D7FBB23BC73D4E4E6B9C2
79210579B4BC35B21A7D332C017A9411BF924DE0E40A24B0E1B797094DD8845C
4A011443ECFF92062FC963AF559C5D4B1523B5ED4D3A61F54B46D1DE5D40D181
5DEDA70A37F7C835C209DEEFDA4C340958D49A0C8B4E4459B7C691BF68F6AAEA
38232A732EB571E1337FAB56A5B753DCDC25568B1E7C3534BF816D19A02789F1
E1BE623EDD5DA9AE195DB7EB209E1E665209BF7F436E36EF8FDB117FEEB9281F
63DF50E4AD899E67574F3EFF17D3177852132E1B66D135E09A46B054E37922BF
B709F40562D7D3C9EB9D4EB8F6E12E6FD5A6843DD48105C7E99E2ED37B079F4B
1FE2A89AD72D1D1AD2BF8BC6B31E4ADB8344F23BEECB6E0DAB28979DCA9FF1E7
B3A9E1899D033E1D02CD57C8961D1E0EA51C02097026083440BA45CC8437A4D8
88FA4FA4772845A518108C5548A8E05CB03ED7A523AA1088DDB644E127A7AC36
05417DE7C8955C51F97141125A74C5B3A10EA582A5CE8765E2681E123B88B49B
1771907C9A00B8E77A5F6BA570464F63E2A8088B8DEC7CF2B7AD52EE40311B0C
1E32AAF747B4924B1EBF9AD7FC50473C958EB4A19E8FA04BEC5E4D82B4727E3E
99DF31156624038D849306B7C6796778B0918C26EBCDDAEFEAE5601617D8E22E
83FD810F7467D089C4DEFF91B8F5C4316471F294DA4E593873DA817C7194E3B7
97684A7CCB1E536599EDA6EF4C1EBB4B7FF5BFE240B4991A86975E85FDF48245
8C13BD55FDED5C43094D00F5DC190F98D7E9EFED72743DC985A8BA736D1E8338
BE5A86374A51E3FE38D5A549252250EF805FF7E152AD19C4261651F52410992A
D7BA49D6885177575599E7E004D8140FBF915D29604AE8F73D0CFD6C030B9F4F
24F9BE595279E0158FFFA8C422C060B15F1B45200E62765CB57ECA2162BD29F0
E926A1042B12AB5A6C06C21B626085A290BDCF236F813A15583AABB4EA3E50C0
7073C5F650547746D39693734B16AB45A0D6F815AF894B558561839D7F33962A
A01C1302C92599F1370268AB1F0E9E41C1E7B82193A0F5CF51A67113D3CDFF86
45F0BE1E25404BF8131379A057266486B7F004142161A7701192F6585586FC5D
DAB14D19C2D13092097015E0C4F622C4B5080B76BAA2635F36341197A02EF8DB
C323983FE3080CC0BE03329FB9B40B64DEE6F4059B764CABE282BCF201A00C06
829558B22FAB5BFD98ACF80D5927A07DA8A3AA987A899E28E916FB19DF8BCB74
1FCC90E115F979056CAAB4BF045605A37A998C561ABE01BCEA8D861E6EA21448
1C40C4A9E46E91402D5E8C590CF59FDFD8BB1CC5A9F32DD0CB947527D857FD47
7BA50486F6864CB7AB263AD03D83C857B0301FFC461601672BE6EED97FF91EA2
A00970A97DAB9DFDEBA1E28A4944F6DDCCA9E5CA6FC4DBD83157135CE1EE3D8A
6DB79FBDF9BB07C46BCAD3D07040A38EEA747355121E3112F7CBD52BA95D154A
A9E2F910D1013BAD0177C9365E7FA3FCE384F914B7FBEA19424A01E285D46975
FBC9ADF92FB169CCAA5CB73F47B7D087131F6F6F573C3BFB25682F9E41A9B1C9
52766239B7AD5A2DA8CA7F284C1B8CA1DFC776D169CD634CD66596A9523E7CC3
C47EC65EA1219F440E16EE03E0D24CE0437284B1BB160D051C31677369AE0635
F14888F28A1C8CE08ECB99A96D6FE379B070CADD7168D3CEACBAE301308D8D25
AC355CD86B9644E55BFBAEEE0AC1EDF4DC2F53ADE191D077E35E09B6FB917DEF
9096D27D3D64828C83E9E7357B597236A90367952B51135816F49FD78C41C6C9
FD4CF7CD1EC440F42AF793A4937CFC9E9A466A0049055B8AB4EF5F092C4CE681
8C16225D61D5BC6E6293CBC9423D966DED3E6AC9EE212EF93FDF1DF29D596E8C
BC1B605B8FF88A6B6BE5D3652EB656A5D9802DE7A62749635E64ACDE691038F9
A1305E09BEEE46BEC191C2EC9E44FF76E086A89705D2C37EA9A44A351584E21E
F17580CC0681E9AB85F09D99ADFD1C0706696263A76C220DDC212539545FEB58
7579A11CEE8563529CCAE4FC3517C811ACDAC9E0E24302173FCA5E31057B0473
3D177EC024C9442D40141C4B477FCD64A5E6B0223ED2F55B68C912F80F7959BA
7FE205366701D3075911DF2C7F74C30A4646D8726DD73FFCCF1358C756F9CFD8
FDE80E495150D14546AD2314D02A2F600DD87A29F1884E7C4B715935E2B9D435
CB9B082E6196D2E4BA1BAE2EAA53FF433AAA6D12256F20400B919A108CCF28AD
D9B2582CF6C3178700E56D15BB3DEFC522CF56EDA6F3147B3861904FBF8BEE6D
B3DF61DF0AAA5A4BF65B0FA7D0BFE3869209CB0FF2A2C259AA2937974DBEB542
E195EAF9D49EDF6190BCA55F577243E99F2D426A73BD0877FB0707FD0CFB80D2
F463DD83522D571226623E88BBEA686CCADB88397DBE9EA584D93CEFED8768DA
BF7F2E4FCED47D16F4DD2F7BF27F9A18E0B8548BF1F4DB2CE7CE111FF1EBC25E
305E182C07AA0A48FA9399449616273B7D5CFC972C14958E26C5A6F5DE91CE52
44E3BB451A99B211EEA399BD5993F661B75F403B0327A58E94861527D71899B0
F272AF04F2704D9367231B1B8C4102A58FD666120569EB275F9F8A436D3D6EB8
48AEB3ED8FCA285454D782F0EE0B2FC30FF1DCAE9BF86FD2DC770443807638D1
16FFECF153CA8AC20930D814C6A36CE6362102CAE205287CA3660144B50A8E94
71FD9B248DD2CF9D5D199E5F7FE9375C563207B20CD99284C7BC384C1A686EAD
1FAB079A4C7BB3B1983F69B25AD632999517F6E80D8E84A9A1A19A844F303796
AA82384E0B3F4B6396E310676A8A5C411E6BDFF6A18F30CBA4ECE6FD9904B5D0
43B953D2EC5687657D1F98683763736148F1808FD56B15923CAB0A8F3DCEF828
BE9A04F9815DB6DB1EB3472A1CFA532E87B80606CF67FD27815BC6AA35AAA245
48EF843B42B699C523796B24DDCC2A5D4F1C948FD5F508EF79A6E58394BD8315
32D909D574766075BA04259AAC658551DA940B4655C87BD5F9BD7278685C4CC5
4FE1C1C4332F05F5AF14E70D335BF5935D6FD7D43D9134ABD9FA8503E81083D7
69249D52C04DF97E53AB4918EDB8A4A31B080093BE719B29629DCA9CE4DD9146
4F8E47A01D5AC2E21ADE3CD82F8B31D71841865552EED6626E7B4F0A7DA2DAA6
F81C1088D141DC27831B0D1A33A22F46B117C1453FA2C11B3DB97902DE8A0CC7
E4BA24587805C4FFE22B1D1FB8F72BF07CACE596A569DA055E9CF9FEDF090B4F
34EA6C8C692D1817DB2CBF1BD72762423565469128553BB914B7A10A1EFA2615
1F8C737DDA30EC6D834E3A3085422DF536FFA16754BCB57A505E874C69A15ED9
D04A7D6DEA1948F87DAA8EEA065E0CE1EAC06CAE98BE342254CF5A4FBAA95C81
115C9B810986FCBF5F656F061A42E32044C20446EC1ADB8393F36F76B0370639
A91D9961AAE8D1CAA43FB8FEF5D314DE8C87903BE5D2BD1735A5E95B9211287E
7236523BE205E94A297DB539A4C35F61598C8D43D8A83C432B4440FA3ADC74C3
D1E0E8909CEEEC404F7E885F45396864B3821143CC8E5FEFCAA6CB8FED6AF561
FEF84929F28BADD069394DFE27B4827CE38AEABBC3AC548A79A74C1F06B93474
9223C64264D9A1FE1D7896B05B4C688C292AF75F62C0724FF9D89125E400BE0D
DF0B95474A9460F7AD292E4437C8A46818D3914D1C0CAF2F2A8C3E8248880242
AE015219DFD0EB55B170A73D47EAE72AF8A8482D766DBCE0DDB5AF214ECF3679
31F3C2300CCF5C434B6FF1BFA35BB75A359BCCE3855B9F8A436D3D6EB8482EF7
348408404A715735810768798A3E6CE9F359DE899FC41B533251C325D7D0A4FC
A9EB80665739561FE220EFDAE817AF9142BD530B535036C46E0119E6541DC46A
0FBD11D7802BBDF37AF440A68E5030FE5CEAEFF2DCF00789E6CB876BB82C1986
E948333E9DC8C704CA056CC4FE812D1F5E2D223B31DF5DDE2713384E9823ACE8
267C58BE9909CBFCD2E9088A7C7835148F59E3D5271A2F1527F9A18CA331545F
D6F0A2B495CCE8474AEAFC37387A820DFECDEF2A4BDF0AD0BA5705470E836FD8
D4983B2859319FEE268E4B1A7E5A26DB2111B029314E9ECF13836AC81EA7E97C
A9981BAA8C36AF696191FC83DA8E36EF1AE7BB65CF8A58DE8E909B19F650F767
A53A82F9D83704FECC98C90250928F8CCAF09A14C80C79DC71ACB9334B3268C2
FBC093F5FC2061B51FF2C42E51EF96784ED2206D80192C2787656B2D102C6CC2
FCBD09F82ECF0716F5378A8C51C139D72BABE978D09E66F93DBC8E9CA5E8E743
116572AF8B3215A80021F3099CCD799C248750D727D2F83CB160C170298E89FA
96D867B0A75A23F2947AAD7B9B02CD45C7C0623668D60CF58759CD85E0C4FFAD
CB526EAB59D49903E81F71C04DD2BA1EBA73BB5EAE030DB7A60013532F3003CF
54097193B9A8B309896120853A9C1DBC8F061C368CA0E23A6BB1A35F0E7FFCAA
67C01643EDD811F9173B6F381DDDEA607F7A19556958A60B4254D65FAB990CD1
2A44D1B956046D818FBA902951D90128D7DEB0D8B215F328978875CB92187B11
9420B8FC657DFCC82E7074356E75788B2A49BF6EA57806826AF4F419FDEE525D
A402976DE1C3427F48241A363F1061FCCFDE3F622DECA68060A4840F68A61866
87FBE4016ECACDD9E5D09BA5F16A7DC0C5D4964026277747F90843558AE1F4A3
54E4F2073E6C6A1594C6207CF63A54BD07BA103F6E2025B33281EAEDA815557B
254218C0222AA130E2DA8FBA269EC0BF90EA3261F5E97D27A66791C0EDCFD3CC
CFA11524421F41AEDEDEFB9E7B246F42899916BF29ADE97D46B58A0787D60A3C
F754CB1EBFF3BACD29D6718405309DA2888657A01F2CBFC1EE4F866FB48A080A
E028D11A28E0561F3F4E72D2F9022A94C6D8DE7E9D487DE4C23913705D4DE858
8BA19294FFB25645C229D79B653C8924EA89BA1CCA966BAF5993C45A356CCF29
ADE5DC1E7327317D53FADC5E88BA48B50A9B5A647481D38402075B63859D2724
FF4E23AF659ACD0120F4830EFED86917C5CEFF9ADFD18C0FE8DFED278EA06786
03F85C0F3013AEB1B2AADDB2337DBAC0FD6686E31B66D8C1D7E8DAA6804AAE5D
E138E8A311A4A7C9F0990A3F2D97CF60735246EFD1404204BBCE6F2321816D66
B7BCEDBE1DD0B5D560DF7DDC6F3E2CC8DDD500CFACDD70B4E5993274D3E69AA6
F6114C7FDBF9FB8A3FFB11A82E401A42DF13634343E4A666C7A27E6AB9D0C655
BA5E53124F7FC666801C182AF99D4A8A3DEAE2BF431AFA10C69AD5034FC98561
12429267999EA3548D2D1A1C0F5FF73B3F4E335518F14A80C4D80AD24605AA62
E69016C180CB85FD2D1D5063EB4B2B2D85542665FA6DCEC67C2D25384D8E7B9E
B31D79E2C46074213898250DDD858747EAAE222B1D550213BEA06364396D2794
84B8839F0BBFD3ADFA44CC3A1D926B8736786B06895FDDF05B392312432BF54C
80E629F3BA77EFCAF91E1CEAFEB247E2C9ED226397F98EE332AEF83730542D56
36ED8EEA52793FCB6DB66394F6C92030A5BF9D2ED8069FB563A5AF64402F90C5
738712D5DDD81A9BDFD53EDB183187C117DAF77BFC22A20731EE7F946655F81B
3E69FE843FEE7A6598C7B166303938130E8334E1CF5D31DB1901466812E0C6C0
43C47CEB610E61138C1EF1CCA8C91994628ADF197F87C989B838A9F847412B25
535C49207CB22CD72F9828D9DD591A0F07588152A85F8A02ACBB94178EBD57C4
6F36824A6F101EAF0C5780D2ECA302CBD7BDE3EAEE3CCDE5ACDE0EC88E6F1925
C275997CA9EB4FBDAEA373183D61D6060A920A6F9E1E759A65AD861D30F84498
37C57FEFEF9EE27D34A777E0E7B9EF583DD19C3E43180C49EE9EB24BB2F33508
A936D428B51BC4CC20850F9E1A5C5856D41D8FB730E04B0845E58A8A847A0A30
A41818600D7A52B63B131A1F787C1669E0DEAB2AFA3ABE1482A0E8E52E58E3A0
A038F97577B09D5CD6919ADF2E9932C4295E25982DE1DC5A7B3D44C28114C49D
630E6E1FB4DE203C8BF9E638EA9A6EE547AD5D2F3718A2590BD1D0A6D49E6247
8FF7256CEB9C532004B3A36C555F2853FF310996D457C4AE4F5A4FA740C32B30
3AEA6B90706004ECB3764B6430F0C5C494FCFE48EE3B46B2150DE67F616FBA22
F823AFAC1A9A7F05248D081F67125D3750E3B00171C322102F98DD2B22CFF97A
887790AD66094709274169E75C3923B20AA27F1101B07933495A954F676F7DFA
49F81BA6B221FAB4FF6882B622204AEF7778AA81055BF4B7E8C455A6398D7BFA
C0DA719845AA9C4BA8AC40C1E24DD4CABD064949F5798D4722CE96786CC228DD
6BDA9B4F88DC224D329F457C4A7ACC5DE6C22DF58627399F63ECFF4FE661FD5B
53BE7173E8F583461AB0B92B85B73942EA553AAD6E4BC55428C4425B0A4947CE
3C4A3EE986616449FE094A5F949D5BB4FD85F9AE85700C5BCF23B335EAD7599B
795CC589659C49ABC0D748DFC2F2D05E4FCA2D8F85E7BA1AA5962AA9DC9B1103
74E5CAA61221CB271314CCED8FF73ABA2C5C6127CB71BA294550D4E81CB29B9E
1E02C759EEEE8E6C3C795CA51A90099A4DAB23CA33DC438CBA367A364877B96A
40C88B51E1B63CE97A6719ADFB73517AC0C314DCF08578A30A6399E08408C023
26B40E27E034DC75E7E797B53DEB549EC3AB06103FB8A08DCCD7061AD53A8EF8
E4D0339BA19E60153FDD00FF97794144F0343368A9170BECE87FD515F1496EF0
AC463759333B27DF0A49159707C99A752D3D6CF129D1C66EB4EDA345525FD4FC
BB4E5CB711DE81D805A4BCC11AA4157F7CC11191D9DA18C621D859943D77E53A
A9E8B4C6BAA6825975EAF495F92FC61205659ABBA17B7D0D910CC393BA92FCF7
952A708C0AF94B47510DB3A00F8C8CFEAA802AA756D295E404B2B331CD0C7DA6
6103AB1256EBEB0D9B5DAB1C7D96028198DFD7488D907607C356325B4456170E
9ADEF02464A57D0CC0A750805E759F476E455B01C64FB89E724580B4CD7ACB9E
6D14846EBD347BBAE7EDF985A31A59D1D3A011EA04EBF7DB3B57111DD681A466
11D41A85C2DD56D3A90D8670AE35A41A851299DCF6A34882A332637AEC878C2B
B8797164A60BC32326C2D36742C0D71D21C63AA4DECBB0EF72C1A80C951A08B0
1323270CBE54EDEFD9B7692FB9F387A2298EE2D8B405DC63B46E2925DBF6CA62
288E4E780F76C0888EFA6A9EF4E1C843946086EAB19847B4B6BFFE87E3B4D7A1
FE1E5A123C1A8C4F2954D56B8F24B99DD5F1B638172DB22C5D891F5D5EE25C7E
2E642E6FEE5FD39DCBF8FF388EC491959A5C63CB6EE50CC3BF3D540CB6441B03
DFC13E85F0A33C46EC274A77BC37F4CF7C183FA6844ADA6F446A8FEE1661A8D1
A476FC1744FF59909EB59D1EF232011AE3F1A80BC2BA01FAB65E3C91AF82D520
1412387801723261B578D2574388D48F17FDBF84B4F2033A85B65AEA35E77FC0
7620C1DC238085DC4E78C139FF3A8FB26A384316EA2278A65E36711CE80A4360
D829E3905EFAD34BFAB387977946314C2FD50B1EFABC3D291F4FDD9F859A6668
BAFC9BEB325ECE7BA227DE03A9FA9242F6CDA09F5E3FA70B901CD5D2C4914477
8CFFF1D5B63E099C9BF55030632D452BC8A23D12AA1A295EF5F50B62E4E7FDA3
CAD1C2D3424E9CD58A179A2BB40AC54D2E45D205E5239B9245DA7EEB851DBA2D
895DAF932C488BF28699B03F9ABF95CD8D787202F8B55A84BD66DDC022645CFA
14E95B339581A9798BC43C8DC9A0DDC807360D944875E8BCA013F4A733264F02
1811B83FC3FBF1132D291EBE20C9AF3B6B561E4E99C41FA4A5AF7A016D4AEB38
74FC568835A3B6560B1333F362124C8155F713FF938B091D3BF0FFF91A263532
8F7C21E748C8CD3487F04C99573831B50D3F7644990D43C181EC1C676D8E79F5
BC4870DD9994238A754679F23C97EA392B4B2E82BF77FE768BD8CC515CFA119C
4C7B738EB12DA190F7B7FCF32D15A4D58CECC584899AFA2C0EEFB0589EF9EE50
7ACCF2A3C8F62040EA362440BA3B8210C60014390D5D1DB42EDA68D360EEFDAB
AA9271C886886FB9BD7AFA22C3BB23208DA23E4CD5C9297A6750998176F33107
A56DADC7AAF8A6E717D8A2692CA53228CF6AD9C0049CAF10E09F30EEE8F8B168
8D038605B9BAE8B305C0A10CBFBEE078417E84145B58D17A6061DC0954E06803
EBC19AE60CF62E4BE653615AC753B2F809AAFC12533BEB30D4AC47892FC5A2A3
DDDA6A2CC49058D72A514943EA7B2B6323D21256A16E70AC38318BE1DB94ECA3
8F66095C6055902977FCD439F4225336B17F46E8942B9F6004279827470A6307
9235C60E9E31C072AE013A06C8C4D25AB5EACD6CFF256A4AFFC44CFA82BA6E2C
1D6F1AF4F265484D2498040B9324D0838E4E00A38A4999F52616F1D45745A471
C6F26D72DE21A4E3255342FF6BF9BCDD9714372E724A1D8D86834CB6BA824EAF
F40040E5E964EC91772F25512B2E0D2B9A972349850B5D656D8A1CA8DEED30D5
DC5D031D41E5542857D9A4049F7C755E621FA1793E31CAA5FDCF6C5626D8159D
AFF00EDD77AF163439B0532748B20646D3451C30CCDE4C56E3179DCDBA8D3248
126E168F968C259061B086137D87A52B450E90897D210FBE379AB6DB9E9BDDBB
858C8C71FEF9D03D3349D23FD93E9F71AD64BECD40CE032739CF2CC73F89825E
B07BE3EDC6FCD56A4BE7EAA5F24F1A89750BBBFEE867BC0E5716C42F4E7EC8C3
465FBF748BF3FF2C0B712C4F89EFE73EBD828B3455C73CECD97FD62CE60AC167
F4BB51059ADC9B1D08B2AF9B3BF14BB2EA141489B8CD5F00858097AE65C0BC2A
2E1F8C4FB30D18A09FC658B83C6C551783E443D0521F993DDC6288ADFD74FA54
1264C1197C278E4F9F2EAB8995A8CE61EE2D73F6971F9CE669A054D98A251269
BE71969806BB46480A3D834D5F8CF630D3E3806337E9CABE01053E0B0052857F
9CD9912FD63CAF7A83689ED7A9FEF96097726738B3203479ECEFCA7B38C21625
108517365CA4450B429DAE48BDA77B330EAA549EEA3601B06BBC641A7FEB4F1E
3DABA87138DA07A2ABB0BAA1A896D5AF526B2C52772A41E6E6B91F0BFB3053F7
8E5BFCA990BA61515B871F511445C4ED45C868D62F199CC50BB1FA905CDB9F1A
FD4A9B709201CFCAFBBBCC398884349AFFB6B088D450258F7C6A64002CA86F3C
33B20F53DBD58187B9E71EA6161CE4DC8F9216FCD0BA6594C29B1F9F27D14A02
FB5A87758559EA2FB6D8D15EBFFC567360A9C57E415603C8C34B5D51C4B4FA86
A94859EDD294DBE935D40CC4670C88449C36CB2E0EFEAEA42F8FFAD1991BD066
DE45A7E25F150E1D8533A3A6804983A03B5341E9F1B8C872A1E47D4CCBF03FDC
DBFC66E024D65E77FBAC6B7A9243647E5A32E0FCE98A870D46D5BBF46E65E9C4
E93F8B7641CACA9BCB282E477929092855A9731A743F8DF811E47DF03E9DB543
B140E9B6B639F71232128481FFD5458C1DC0C43705CB33DE714E93997DCA813D
9F423C16A8B70474C03E1CC8E03D38E26AD3598651A10605E5A248621FA7D101
7A9E37A9CC9D8592C5E735F069C3B10DD00A506061580A10FE358F67B8C0F598
351EC27A9EDC6CB16EEB25D41D2B5EE0C3F0C687084A548BC8678421C580B67A
FFE3D79373019A1367382C0B1D0323734FC89A21F70D129639849385E2129EEE
207DB4A87DF7DA6E9321F2533EBC74C8BB47B1D84CCDEAE2D0ED31F46E14ABEA
FF2900EB770449A26A4EA183B07A4C81085CC690590583604E5F6FD3BA42CAF0
A24BDF1ECD9FC33AB82EAA37034FAE035D78EB73FC643A767572E9D040C9FF3C
75ABEECD50169AA2CBE904A4434FC2AEFDB46FBA370EA3AC79940B784B45EC04
5E4907110986370C693EE29264810689F424475D1CFBD47F17FC0CB8CF55F3A7
EDFD264389B4C13CD4BEA2FCD4557D0D22D4D003609016783DF5B98EDB1E4ED5
B3929CFDFCB56FF2A60DC647716B964B88E2D80BD0B4213384A3AC7D859734B7
D552731B91FCCC4C742822C64C8E78FF368B242DDA1A1D90048A7D29F2D0D9C3
3DBA50E37D3BF803679047990C64851F1E6133FF9FF3E40DE9372451B28279A2
A5A37F92EFD6775BAA0FE3552FE9438550D4AA9DA3E1FA4BE9BAA83A4EC70DD0
A18F27E29CF7564284B735D2465AA2342DAD00A4C38F61AD1579414B141B0B14
AC7654AF5A1834BEF9D116C96800677B8BCD5E1B41AA84A265B845BA997F8929
7F62AD60EA56E4D3AD6EABA36CE5A5DD5A8D2C5968120CC475D3BB5A56D1FD2D
C16A2CDF80D8117BFE395854419EDD81795D351FBBB38C17D7E11F829CC621B3
5E21517C21042DABED91CCC43F0D962B72BD9D868C9DDBC66B24E4CD78A2D7B7
D46579BE3FCA44636A19A93A852AD324DEF770DAADF80BCB4D57B8B21734D260
11E2C559FFF8EEEFA0734F15A619AEEADEA021C541D93672CBBC2760E0258803
0D3F058F695FF358D2F3DE635353ED936149B0F4E10D88029FC2B4BACAD6D521
A14756F06E10778B1FEB1ABA10ADCFC7F2B5DBA40ED3AD3FB83EEDA6DDCBCFA6
C8956832D3A6CDCF9A76823CBF786952714899678CA19FB0930282CE7F3D272E
F76F7CB63B8D55D6F2EC02A0F9EE8727E6139E746EFFC76A63B36A1673A6470E
A4E482399E70B7D05AF6B009F9232155E07E9CDDC480A6EF6247EC2297E592CE
B04AEB2A9517C92C69F4A04F8D2B86DFB05BD4CD870A1A14C17F31635343BDCC
AEC84867BB21FD9E8AA8FFE7302D3B2FA9F4931998BBC7D0AD0736E700460967
5058434466B867520FAA928780A2C4F7B5B01108D1908DCEECF28925EDFB17AB
038B67585C6DD1D5F8D9A4B0B5BA335BCA2E7DBF15B449CE312D8940280121B4
01BC0DC9BEB609651C5DC47C3920F1EFB768DDBF7EDAB4C20A1CF2FD44EA6640
FB3E67A10607637E370A2149FCB0388F905042C43B2356ADAA3D7D6B67195B86
3430A3FEC437634016E64A0973A9CFC39307E6B82443EAD4521E2ED40709EACE
B5AC1162CE92446C06B488CD2BB2440B682058E8978F016FB198139CEDD564B6
00C59A4751F99C96A0FA848B2D11F441D96BBB6314370AA7447B99EB36D84E80
58908F3366033EC5D793BC10A65CBDF566B3202973A483DF6BA30A65CAC385AE
4607E7DA40D81C21E4200F697B8E1CF1896C66D5795BC4548CD889E5E418901A
047A8B74D9C1A3A45BF9A00E2CEA78CE19A23CA692BF507B75D7081C9E54FB2F
91D3709FA4C14EEE029EDD5FAF5EBA68A2F3D92A82A96482D082FEB1030AA5FB
4933B43850D5CBF70E1247C1567D380DE77F4748B2B0C2DF023C318C259D21A9
FEF240429E258DC44CCB00D8FB89AB5203196FD1889C3B6BC3E9BF11D80EA71D
215B66379070057CADDDC9D922DE133DC18C56610032C02127ACE861A256825D
8E11AD729652B49608933710C26DBB65A30796F6EB2B74C6221D5BDDE0BF0755
C8BBFC9FD8726405EFE414668607D11D4C41C7AEB1D4425DB57010BFBC92A50A
BA6B151584DB25E49E3C6B12540062CE28488CEE407321EAE10C45F0122CF2D4
1771145CEE425DAF0FF64103F9AC0DE4F87DCCB9B0474FD11E231DC872D13D59
73120C7ECB431E3D567B7D0EECEB3DAA73504D01D5C5CDD64534
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 2 /multiply put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AF3863EE8A24A003F07FBF0DFBC12CF2625CE95B5F1C575C28144E1D3C8CF5D7
6D071DB7562414E228147876D452804B3142DCDCAB22773DE75726823F1BB198
1C1CA8D89B59FF008B054F0322A543DBCCABA518AB9945020DF8C049A6E112C5
3F67BB74E95B7EB282BEF71477392749E10B5C1C6C07AC21EBB2EE0FD69336E7
FB6E5C2EEE519C09CDCE1B441625FEB1EA001C20A6E1AF36E9E6CE683E15F6C9
8AF7A28A5B36A5275F6FD71D8DC344DA75A23E0FABF641A6F5BF97EEE8CF39FC
10EDB0F4751E9FC25283304D652488E56C8F2A7F01D3DD87F77AD57B3BC9436C
F36C2DC4A62D115F760F0E65DE1531FACAEE786C71767C6210956AE30E65EED9
34A219A75F0BD724FC918B7D65B3B3F13F88A608B2D91018BA00E961C517B1E5
0670B56056553BB50DF8884887B2233A1291D2AE55B3A50B911F5F7570004CB1
4A93BA42F37A9F1E107619EE967D4227A2280EEF8BCEDBB29F52AE13A63C283B
3213A04998E9F450FFF52F973584
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusRomNo9L-ReguItal
%!PS-AdobeFont-1.0: NimbusRomNo9L-ReguItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular Italic) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -15.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-ReguItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-169 -270 1010 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E134D4CB5ABCED39AC635
DA001E9934C198A7F9B9ED0028A85E9AE00421DFD8EAA3BB3B4B4CE45D209303
237BD51809FE4D880900B1EEB236ACA87B9FF6EBE6B994A60AF5D67CCC42BD56
77295C346EB4C62BDC1EF22EE07DAAD928DFB73455F091F32408ED6430B97417
683AF27A03718A156E3F6E7B6E4F2E8177503CD82DDBF4557A3CCFF4C858AE7A
F7EFED6CC521A28342436B953E4650B5792BE85EA2F989EB6D986905A61FA38B
96E1BBC830B74469150FB0B598A794FD80D10870084A877273A9502C3456E5EF
74350E6E3BE5863E8BA185EB59FB87B36566AF71200B6ED389D1287D4E925E33
B2383ED05D87D48586E698FBC5D562ED9D8A09EC3EAA1B1F300224AF20C23F26
A2EADC74562571DA84B3914D1D80B127C6FF4706C7046BBB372A0013E0AB94F0
C27946583871D272BF4F20FA84E89D745DE7BBA885CC09BA72E0F530ED4EF7D1
864B3C67007ED98800284235372F0A70C912E21E851AFBF812165B8DF912CD1A
013E271F0B347967876C68AE4C4107EF8AD1F170916210034C66394A9D971B68
FBFC1131E37FC178EB97C1B2A0F573ADD9D7C0BF944E6529734DF8A7EF54485B
A3375CC30E9E328943733CBD352BC15B06C85BFB4A96994291C72A0EAE84FB01
0F1B24D0125FB8C16D60561DF8BB7AA7DDFE9549AFB70C1E89424214609FDE41
9A142892E30F02754FD234CEB3C59A2A04C06BAB7AE40E8FDEC50559B8347684
391C750987802D5452C47C1E0B5F222DE9A0EEAFEE19D796FF375A1E1EF0AEED
1BCAC4F485FCAEE18AEC585D1A9D80F41871DDA45FEF1EAE82C5893118987BEB
4D9E345C27C7419FE65E4853B40537D822E34FF1E0BD2819D21EF607981259E8
9F1040A2D708D7463858AA5381759AC49DF4DDDEB209A278FE60BD2508ACA0F4
6A249A05B652E4C7BF1B676943CDC4678C105B6F7C77CFC92B0797073A293097
27F949FFCFA845B0A8A5CB6B619B63B0A1D1981046F1B4E859D84E1710DC69E1
78C52B5FB4EA76925364202D717693407287F6EFC7FCED238E4B228002B018F8
53270938270A0BA4B7A3FDDE1DA1C862C9BDC3A2DF634276519375C5F79AB502
D918EB10300B507A1972441590EB25F30B2514EEA06C4D3BE4D8D2EFBB235EFE
FC8FE8B2C4A1D071EAC263297A33CDD908F8CE2CFC49E0FC3F4093CC6E13B870
84E461E23A4D6862F0EEA28BA7D65C10357563DFE6085FAD3790BCC95E858942
606F7BF8F2C0F92CCA49C489AC56BB4FAEB441E0B5DDFCD4F291E0BB1A9D79E8
29E1B64DE91C306B850F0DF4AEC960EE3BCDED36FEC31EAABE44B4E65AC2359C
511FCB552194CDACD36DB6FC331F8FB67C9AED9E11CE71D9034EE8704CED9534
746FB31E330BE53F44304E2B504D7A6AD4EEEBAFC8BE35B06BF8B30FFF0A5957
E39DF3DDC87E92E2FE8EE20996F52867C6CE8D2421EA47B964FDCF13CC2B720D
6EF7C16E03198453C10AA563F2964C3B13B7E54BBBF08F23F8F2FBAF141B2A24
D34C45E7B9EC8730E60E02CA72E2EFD7ECA25AC51DCB571982706F101B216B4A
F3523974378E45C892E53DF3AD9691D42235572F67AC5C0B20E59EBC60863407
0BF82CE46109C332BC95B250DDD47CA3E0C377BD150F134E5BB4F8D8247CF105
21AE6964C6B3651B2647FE0CDE1A2258F05CBAC20AE0C9F80EC7A64CB9EEAEEB
B91C50FD3E2EE0E437297DB82A1C7F8A116038BEB06DC30ED8E89BBDFE4480A3
6CD4F92ED10813F722DD86A572F602F36E083DFC32E5B188AC86BED7274A1E87
749F6B1B05B6CD5047BF5B6F6AD0D17020402FF8E0B391AF827DAB714D59E44C
0E28529DBBD0B8ACA80F6E7A468EFFDDA0F44FB32709CC52DA272724858A522B
9E47D4B5ED68BDDAFC0E87886D6FC29ED8F6CA090AB1E40AD29DA80A7C096C41
5EA3DF297D63B8DC952C181A02D22FB85F961C7CCB8ED1B80C895873C19FCFAB
9ABFE3B44D21730DBAD665A14D0D4BAD47CAD5EE287FF010AF55A4B864B822E4
BC0569E0916E6B555B31670C7044FACECC830BF9FC5B0D649CC38DD4B2E92181
38D27F49FBA3C2072D49182D661F2A720B37C4B2DCB7F7A15864E73339C9C22D
957B163CCA056BA39D1151A17BE5E15126B33BF5ADD929A8BA4892734CA9E01C
68BA3E214D7651402D5B33E72FE16213BC2778963960567849E1F6FAA1EA9DB7
F0B15679BFA992CA2D8945B38A4BF8B7E599354A843A7386A25CF46386D6975B
70E30002CEB0144F2D51EAE86EB7E2DC73C347153B9B9135A79D2898CBF02A1D
CF10A584114488D4C29EFF1D33AF0E3963EFD8E46345800DD13C04021FC924C8
8B19890571C60821FD932122CC04FEC35A0023F82192384592AD70FFB677B3AF
AF00AF6D367DB450F76362FD9E1C29E1A346FB1770D3FF36D19AB569AD0865E2
6C9F0048B1100CBB9EF077EF22D373A323A5A71768EDB3C6F00EF26E6A7A7017
EA3D220AC1798A57016655ECE23DD15FE98E5E0C7519713F428B1FC2FB48077B
4425BF9C0A6D19EED9BDD676E024F7EE6BE807B0A35F60A22424F35556D8E511
32CC55FA85395C32015B9A74FD769BD4F84636731784045350D1D50BC3011EFD
FB147F180E92CC82590F8EF5F74EC3A58D591F9B586DB505482DF19ECB34B055
3EEE8FDB3F3EBD72B45174DFBE7FD0F25AEB087C6B0166544FCB3278F5E3EABA
107B786883BC214F7891F216DCA5A69EDC35A1E0397EB24A96D1C1CEBA8167CF
D9F3D47E3CAD2E351212FCB66B4CE961B5E674C570FBECF2A3C67FA67497227D
76FDF77A2CB059C9873B5D20B18494E799C252491837502E5E04C49611BBAEB0
1B511989F7F8381B8048E5EF027D419F0639B7F4A00FB7100880A8281CE99EB1
F02B9DD81F65C8C87287497E0B1690F67C582A198131CE129C1007744AF621B6
B1FDE1B7BE9A262300C69FFDE29B0DBED7874524A07771903C88229608F00BC8
9501EFA06B522AADB02329636DC8F1DA219347832DB7DE9FA705A2C6E17FAB4C
FA3CF2F545B7276291BC6865B55729AB3CB5505A090935A070380F95761C151F
2973CA182AAFD953E8E1D271CD1083CB61935F376EB29DCECEA5257820D073B4
CB9000884CA767A32F087DDBC91AC53979DFBAAFB793970ADDA777EAE36EE564
A17662B16AD803DF81417053EF37208FE44BA871624782
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 23681430 14208860 1000 600 600
(/home/jw/.cache/matplotlib/tex.cache/c8/b1/c8b12a6d80e87e31c9fc514dfc6d780bdd0fedac52f516684d162fb92b9765fa.dvi)
@start /Fa 201[37 54[{ TeXBase1Encoding ReEncodeFont }1
74.7198 /NimbusRomNo9L-Regu rf /Fc 255[58{}1 74.7198
/CMSY10 rf /Fd 253[77 2[{}1 99.6264 /CMSY10 rf /Fe 203[37
52[{ TeXBase1Encoding ReEncodeFont }1 74.7206 /NimbusRomNo9L-Regu
rf /Fg 147[26 2[26 21[51 15[61 67[{ TeXBase1Encoding ReEncodeFont }4
92.1551 /NimbusRomNo9L-Regu rf /Fi 162[41 1[41 15[90
29[41 45[{ TeXBase1Encoding ReEncodeFont }4 124.533 /NimbusRomNo9L-Regu
rf /Fj 167[76 3[69 84[{ TeXBase1Encoding ReEncodeFont }2
124.533 /NimbusRomNo9L-ReguItal rf /Fl 199[50 1[50 50
50 50 50 50 50 48[{ TeXBase1Encoding ReEncodeFont }8
99.6264 /NimbusRomNo9L-Regu rf /Fn 139[23 32 28 1[42
1[42 65 23 4[42 28 37 1[37 1[37 13[46 2[46 80[{
 TeXBase1Encoding ReEncodeFont }14 83.022 /NimbusRomNo9L-Regu
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black -600 1200 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 -600
1200 a -600 1200 a
 /PSfrag where{pop(psmarker0)[[0(bl)1 0.000000]](psmarker1)[[1(bl)1
0.000000]](psmarker2)[[2(bl)1 0.000000]](psmarker3)[[3(bl)1 0.000000]](psmarker4)[[4(bl)1
0.000000]](psmarker5)[[5(bl)1 0.000000]](psmarker6)[[6(bl)1 0.000000]](psmarker7)[[7(bl)1
0.000000]](psmarker8)[[8(bl)1 0.000000]](psmarker9)[[9(bl)1 0.000000]](psmarker10)[[10(bl)1
0.000000]](psmarker11)[[11(bl)1 0.000000]](psmarker12)[[12(bl)1 90.000000]](psmarker13)[[13(bl)1
0.000000]]14 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 -600 1200 a @beginspecial 0 @llx 0
@lly 360 @urx 216 @ury 3600 @rwi @clip @setspecial
%%BeginDocument: /tmp/tmp3hfsqtfr/tmp.ps
%!PS-Adobe-3.0 EPSF-3.0
%%LanguageLevel: 3
%%Title: T-vs-SiCl4-compare.eps
%%Creator: Matplotlib v3.10.3, https://matplotlib.org/
%%CreationDate: Mon Aug 18 11:58:56 2025
%%BoundingBox: 0 0 360 216
%%HiResBoundingBox: 0.000000 0.000000 360.000000 216.000000
%%EndComments
%%BeginProlog
/mpldict 8 dict def
mpldict begin
/_d { bind def } bind def/m { moveto } _d/l { lineto } _d/r { rlineto } _d/c { curveto } _d/cl { closepath } _d/ce { closepath eofill } _d/sc { setcachedevice } _d
end
%%EndProlog
mpldict begin
0 0 translate
0 0 360 216 rectclip
gsave
0 0 m
360 0 l
360 216 l
0 216 l
cl
1 setgray
fill
grestore
gsave
38.874305 42.360788 m
349.2 42.360788 l
349.2 193.373237 l
38.874305 193.373237 l
cl
1 setgray
fill
grestore
1 setlinewidth
1 setlinejoin
0 setlinecap
[] 0 setdash
0 setgray
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
52.98 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
52.98 193.373 o
grestore
gsave
41.025 30.672 moveto
(psmarker0)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
109.403 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
109.403 193.373 o
grestore
gsave
97.448 30.672 moveto
(psmarker1)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
165.826 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
165.826 193.373 o
grestore
gsave
153.871 30.672 moveto
(psmarker2)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
222.249 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
222.249 193.373 o
grestore
gsave
210.293 30.672 moveto
(psmarker3)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
278.671 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
278.671 193.373 o
grestore
gsave
266.716 30.672 moveto
(psmarker4)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
335.094 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
335.094 193.373 o
grestore
gsave
323.139 30.672 moveto
(psmarker5)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
41.6954 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
41.6954 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
64.2646 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
64.2646 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
75.5492 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
75.5492 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
86.8337 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
86.8337 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
98.1183 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
98.1183 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
120.687 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
120.687 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
131.972 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
131.972 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
143.257 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
143.257 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
154.541 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
154.541 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
177.11 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
177.11 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
188.395 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
188.395 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
199.679 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
199.679 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
210.964 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
210.964 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
233.533 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
233.533 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
244.818 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
244.818 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
256.102 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
256.102 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
267.387 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
267.387 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
289.956 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
289.956 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
301.241 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
301.241 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
312.525 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
312.525 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
323.81 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
323.81 193.373 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
346.379 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
346.379 193.373 o
grestore
gsave
176.695 11.599 moveto
(psmarker6)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 49.1437 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 49.1437 o
grestore
gsave
29.397 45.007 moveto
(psmarker7)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 84.7401 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 84.7401 o
grestore
gsave
29.397 80.687 moveto
(psmarker8)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 120.337 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 120.337 o
grestore
gsave
29.397 116.284 moveto
(psmarker9)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 155.933 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 155.933 o
grestore
gsave
29.397 151.797 moveto
(psmarker10)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 191.529 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 191.529 o
grestore
gsave
29.397 187.393 moveto
(psmarker11)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 56.263 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 56.263 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 63.3822 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 63.3822 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 70.5015 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 70.5015 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 77.6208 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 77.6208 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 91.8594 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 91.8594 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 98.9787 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 98.9787 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 106.098 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 106.098 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 113.217 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 113.217 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 127.456 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 127.456 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 134.575 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 134.575 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 141.694 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 141.694 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 148.814 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 148.814 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 163.052 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 163.052 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 170.172 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 170.172 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 177.291 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 177.291 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
38.8743 184.41 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 184.41 o
grestore
gsave
25.397 91.58 moveto
(psmarker12)
show
grestore
gsave
38.874 195.377 moveto
(psmarker13)
show
grestore
2.5 setlinewidth
[16 4 2.5 4] 0 setdash
0 0 1 setrgbcolor
gsave
38.874 42.361 310.326 151.012 rectclip
52.980019 49.267312 m
60.213428 49.31089 l
67.446838 49.367547 l
74.680248 49.440515 l
81.913658 49.533596 l
89.147068 49.651226 l
96.380478 49.798545 l
103.613887 49.981443 l
110.847297 50.206569 l
118.080707 50.481089 l
125.319759 50.811678 l
132.553169 51.201463 l
139.786579 51.643197 l
147.019989 52.109047 l
154.253398 52.543199 l
161.486808 52.869102 l
168.720218 53.018447 l
175.953628 52.968381 l
183.187038 52.756867 l
190.420448 52.459102 l
197.653857 52.145961 l
204.887267 51.858698 l
212.120677 51.609683 l
219.354087 51.394894 l
226.587497 51.204862 l
233.820907 51.029906 l
241.054316 50.861825 l
248.287726 50.694621 l
255.521136 50.525036 l
262.754546 50.353214 l
269.993598 50.182917 l
277.227008 50.020749 l
284.460418 49.874085 l
291.693828 49.748281 l
298.927237 49.644691 l
306.160647 49.560861 l
313.394057 49.492687 l
320.627467 49.436514 l
327.860877 49.389836 l
335.094287 49.350963 l
stroke
grestore
1 setlinewidth
2 setlinejoin
[] 0 setdash
0 setgray
gsave
38.874 42.361 310.326 151.012 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
2 setlinejoin

0 setlinecap

0 2 m
-0.449028 0.618034 l
-1.902113 0.618034 l
-0.726543 -0.236068 l
-1.175571 -1.618034 l
-0 -0.763932 l
1.175571 -1.618034 l
0.726543 -0.236068 l
1.902113 0.618034 l
0.449028 0.618034 l
cl

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
60.2134 49.2768 o
67.4468 49.3202 o
74.6802 49.3751 o
81.9137 49.4439 o
89.1471 49.5284 o
96.3805 49.6306 o
103.614 49.7514 o
110.847 49.8905 o
118.081 50.0454 o
125.32 50.21 o
132.553 50.3732 o
139.787 50.5178 o
147.02 50.6208 o
154.253 50.6595 o
161.487 50.6205 o
168.72 50.5099 o
175.954 50.3531 o
183.187 50.183 o
190.42 50.0245 o
197.654 49.8883 o
204.887 49.7755 o
212.121 49.6831 o
219.354 49.6073 o
226.587 49.545 o
233.821 49.4935 o
241.054 49.4507 o
248.288 49.4148 o
255.521 49.3845 o
262.755 49.3587 o
269.994 49.3367 o
277.227 49.3176 o
284.46 49.3009 o
291.694 49.2862 o
298.927 49.2732 o
306.161 49.2616 o
313.394 49.2511 o
320.627 49.2416 o
327.861 49.2329 o
335.094 49.225 o
grestore
2.5 setlinewidth
1 setlinejoin
[9.25 4] 0 setdash
0 0.5 0 setrgbcolor
gsave
38.874 42.361 310.326 151.012 rectclip
52.980019 50.058328 m
60.213428 50.448205 l
67.446838 50.969445 l
74.680248 51.659642 l
81.913658 52.567939 l
89.147068 53.759938 l
96.380478 55.32554 l
103.613887 57.389937 l
110.847297 60.126626 l
118.080707 63.764367 l
125.319759 68.569707 l
132.553169 74.774164 l
139.786579 82.411556 l
147.019989 91.071632 l
154.253398 99.679027 l
161.486808 106.543975 l
168.720218 109.931687 l
175.953628 109.016325 l
183.187038 104.48935 l
190.420448 98.132006 l
197.653857 91.688519 l
204.887267 86.085641 l
212.120677 81.466649 l
219.354087 77.624904 l
226.587497 74.319064 l
233.820907 71.36901 l
241.054316 68.660656 l
248.287726 66.135552 l
255.521136 63.779549 l
262.754546 61.610072 l
269.993598 59.658124 l
277.227008 57.949834 l
284.460418 56.49289 l
291.693828 55.273356 l
298.927237 54.262435 l
306.160647 53.426667 l
313.394057 52.735171 l
320.627467 52.162086 l
327.860877 51.686322 l
335.094287 51.290757 l
stroke
grestore
1 setlinewidth
[] 0 setdash
0 0.75 0.75 setrgbcolor
gsave
38.874 42.361 310.326 151.012 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 -2 m
0.530406 -2 1.03916 -1.789267 1.414214 -1.414214 c
1.789267 -1.03916 2 -0.530406 2 0 c
2 0.530406 1.789267 1.03916 1.414214 1.414214 c
1.03916 1.789267 0.530406 2 0 2 c
-0.530406 2 -1.03916 1.789267 -1.414214 1.414214 c
-1.789267 1.03916 -2 0.530406 -2 0 c
-2 -0.530406 -1.789267 -1.03916 -1.414214 -1.414214 c
-1.03916 -1.789267 -0.530406 -2 0 -2 c
cl

gsave
0 0.75 0.75 setrgbcolor
fill
grestore
stroke
grestore
} bind def
60.2134 50.2392 o
67.4468 50.6575 o
74.6802 51.2037 o
81.9137 51.911 o
89.1471 52.8206 o
96.3805 53.9837 o
103.614 55.4626 o
110.847 57.3277 o
118.081 59.6442 o
125.32 62.44 o
132.553 65.6462 o
139.787 69.0221 o
147.02 72.1053 o
154.253 74.2594 o
161.487 74.885 o
168.72 73.7412 o
175.954 71.1574 o
183.187 67.8861 o
190.42 64.6625 o
197.654 61.8822 o
204.887 59.6252 o
212.121 57.8282 o
219.354 56.3969 o
226.587 55.2484 o
233.821 54.3184 o
241.054 53.5591 o
248.288 52.9342 o
255.521 52.4163 o
262.755 51.9842 o
269.994 51.6216 o
277.227 51.3156 o
284.46 51.0559 o
291.694 50.8344 o
298.927 50.6443 o
306.161 50.4803 o
313.394 50.3377 o
320.627 50.213 o
327.861 50.1031 o
335.094 50.0055 o
grestore
2.5 setlinewidth
2 setlinecap
1 0 0 setrgbcolor
gsave
38.874 42.361 310.326 151.012 rectclip
52.980019 50.539816 m
60.213428 51.193596 l
67.446838 52.087583 l
74.680248 53.29827 l
81.913658 54.928978 l
89.147068 57.123409 l
96.380478 60.086651 l
103.613887 64.115775 l
110.847297 69.63582 l
118.080707 77.224088 l
125.319759 87.581581 l
132.553169 101.374128 l
139.786579 118.853754 l
147.019989 139.245345 l
154.253398 160.12087 l
161.486808 177.374814 l
168.720218 186.509035 l
175.953628 185.081084 l
183.187038 174.507344 l
190.420448 159.191447 l
197.653857 143.587575 l
204.887267 130.061823 l
212.120677 118.959831 l
219.354087 109.758867 l
226.587497 101.878174 l
233.820907 94.911597 l
241.054316 88.6242 l
248.287726 82.910618 l
255.521136 77.753407 l
262.754546 73.177665 l
269.993598 69.208663 l
277.227008 65.841188 l
284.460418 63.031615 l
291.693828 60.709073 l
298.927237 58.794768 l
306.160647 57.216138 l
313.394057 55.912187 l
320.627467 54.833135 l
327.860877 53.938615 l
335.094287 53.195735 l
stroke
grestore
1 setlinewidth
0 setlinecap
0.75 0 0.75 setrgbcolor
gsave
38.874 42.361 310.326 151.012 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-2 -2 m
2 2 l
-2 2 m
2 -2 l

gsave
0.75 0 0.75 setrgbcolor
fill
grestore
stroke
grestore
} bind def
52.98 50.3657 o
60.2134 50.9124 o
67.4468 51.6489 o
74.6802 52.6311 o
81.9137 53.9312 o
89.1471 55.644 o
96.3805 57.8936 o
103.614 60.8398 o
110.847 64.6746 o
118.081 69.5951 o
125.32 75.7287 o
132.553 82.9939 o
139.787 90.9127 o
147.02 98.4613 o
154.253 104.137 o
161.487 106.414 o
168.72 104.519 o
175.954 99.0374 o
183.187 91.6737 o
190.42 84.2314 o
197.654 77.7513 o
204.887 72.4907 o
212.121 68.3244 o
219.354 65.0314 o
226.587 62.4108 o
233.821 60.3071 o
241.054 58.6036 o
248.288 57.2126 o
255.521 56.0676 o
262.755 55.118 o
269.994 54.3252 o
277.227 53.6588 o
284.46 53.0953 o
291.694 52.6162 o
298.927 52.2064 o
306.161 51.8542 o
313.394 51.5496 o
320.627 51.2847 o
327.861 51.0529 o
335.094 50.8488 o
grestore
1.5 setlinewidth
0 setlinejoin
2 setlinecap
0 setgray
gsave
38.874305 42.360788 m
38.874305 193.373237 l
stroke
grestore
gsave
349.2 42.360788 m
349.2 193.373237 l
stroke
grestore
gsave
38.874305 42.360788 m
349.2 42.360788 l
stroke
grestore
gsave
38.874305 193.373237 m
349.2 193.373237 l
stroke
grestore

end
showpage

%%EndDocument
 @endspecial -600 1200 a
 /End PSfrag
 -600 1200 a -600 -328 a
 /Hide PSfrag
 -600
-328 a -1285 -271 a Fn(PSfrag)20 b(replacements)p -1285
-240 685 4 v -600 -236 a
 /Unhide PSfrag
 -600 -236 a -799 -137 a
  {
 -799
-137 a Black 0 0 0 TeXcolorrgb -2 x Fl(1100)p Black Black
-799 -137 a
  } 0/Place PSfrag
 -799 -137 a -799 -37 a
  {
 -799 -37 a Black 0 0 0
TeXcolorrgb -2 x Fl(1200)p Black Black -799 -37 a
  } 1/Place PSfrag
 -799
-37 a -799 63 a
  {
 -799 63 a Black 0 0 0 TeXcolorrgb -2
x Fl(1300)p Black Black -799 63 a
  } 2/Place PSfrag
 -799 63 a -799 162
a
  {
 -799 162 a Black 0 0 0 TeXcolorrgb -2 x Fl(1400)p Black
Black -799 162 a
  } 3/Place PSfrag
 -799 162 a -799 262 a
  {
 -799 262 a Black
0 0 0 TeXcolorrgb -2 x Fl(1500)p Black Black -799 262
a
  } 4/Place PSfrag
 -799 262 a -799 361 a
  {
 -799 361 a Black 0 0 0 TeXcolorrgb
-2 x Fl(1600)p Black Black -799 361 a
  } 5/Place PSfrag
 -799 361 a -889
472 a
  {
 -889 472 a Black 0 0 0 TeXcolorrgb -19 x Fj(T)47
b Fi([K])p Black Black -889 472 a
  } 6/Place PSfrag
 -889 472 a -650 572
a
  {
 -650 572 a Black 0 0 0 TeXcolorrgb -2 x Fl(0)p Black
Black -650 572 a
  } 7/Place PSfrag
 -650 572 a -650 672 a
  {
 -650 672 a Black
0 0 0 TeXcolorrgb Fl(2)p Black Black -650 672 a
  } 8/Place PSfrag
 -650
672 a -650 771 a
  {
 -650 771 a Black 0 0 0 TeXcolorrgb Fl(4)p
Black Black -650 771 a
  } 9/Place PSfrag
 -650 771 a -650 871 a
  {
 -650 871
a Black 0 0 0 TeXcolorrgb -2 x Fl(6)p Black Black -650
871 a
  } 10/Place PSfrag
 -650 871 a -650 970 a
  {
 -650 970 a Black 0 0 0 TeXcolorrgb
-2 x Fl(8)p Black Black -650 970 a
  } 11/Place PSfrag
 -650 970 a -1038 1100
a
  {
 -1038 1100 a Black 0 0 0 TeXcolorrgb -38 x Fj(X)-965
1082 y Fg(SiCl)-801 1100 y Fe(4)-724 1062 y Fi([-])p
Black Black -1038 1100 a
  } 12/Place PSfrag
 -1038 1100 a -877 1200 a
  {
 -877
1200 a Black 0 0 0 TeXcolorrgb -8 x Fd(\002)p Fl(10)-700
1156 y Fc(\000)p Fa(6)p Black Black -877 1200 a
  } 13/Place PSfrag
 -877
1200 a 2400 1200 a
 currentpoint grestore moveto
 2400 1200 a Black Black Black eop
end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
