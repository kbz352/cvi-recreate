%!PS-Adobe-2.0
%%Creator: dvips(k) 2025.1 (TeX Live 2025)  Copyright 2025 Radical Eye Software
%%Title: c908860ffb00ba9185b9bd86a5d80d08c59b891c557d883539e98d40b5ab8f6d.dvi
%%CreationDate: Mon Aug 18 15:58:55 2025
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 360 216
%%DocumentFonts: NimbusRomNo9L-Regu StandardSymL NimbusRomNo9L-ReguItal
%%+ CMMI10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /run/current-system/sw/bin/dvips -q -R0 -o
%+ /tmp/tmplbpvlt52/tmp.ps
%+ /home/jw/.cache/matplotlib/tex.cache/c9/08/c908860ffb00ba9185b9bd86a5d80d08c59b891c557d883539e98d40b5ab8f6d.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2025.08.18:1158
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2025 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
      pdf.dest.y pdf.tmpd mul add
      pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
            pdf.count 0 eq { exit } if
            counttomark 2 roll
            1 index /Rect eq
              {
                dup 4 array copy
                dup dup
                  1 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add sub
                  3 exch put
                dup
                  pdf.outerbox 2 get
                  pdf.linkmargin add
                  2 exch put
                dup dup
                  3 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add add
                  1 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                  {
                    pdf.currentrect
                    dup
                      pdf.outerbox 0 get
                      pdf.linkmargin sub
                      0 exch put
                    dup
                      pdf.outerbox 2 get
                      pdf.linkmargin add
                      2 exch put
                    dup dup
                      1 get
                      pdf.baselineskip add
                      1 exch put
                    dup dup
                      3 get
                      pdf.baselineskip add
                      3 exch put
                    /pdf.currentrect exch def
                    pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                  exch
                repeat
                pdf.currentrect
                dup
                  pdf.outerbox 0 get
                  pdf.linkmargin sub
                  0 exch put
                dup dup
                  1 get
                  pdf.baselineskip add
                  1 exch put
                dup dup
                  3 get
                  pdf.baselineskip add
                  3 exch put
                dup 2 index 2 get  2 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                SDict /pdf.pdfmark.good false put
                exit
              }
              { pdf.count 2 sub /pdf.count exch def }
            ifelse
          }
        loop
      }
    if
    /ANN
  }
    def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE585DE98B96A3F7E36CB37CE1EB1D
11E2CBF99F15F7C116DB632EB22A6C7A3C921FF716E9753F4068CD684517F327
58E8F5D1A42D40CCFB40C13249D90B00E1FB1F743CA143C191A39BA398B920B5
F25683596AADC66BF831DB6A5435937A0B37B5F1BC381AE33AB09D8ABD419796
3F247467259BADF061BF5F70E4BA0CD7D2227F5E20A5428CD87225C7FF28FDCD
4FB898A052A0B1A17FE1A99D03F851BF811AAE848B8F7F77D5075DEAF483E279
574CA2D0D685C7D7F56248A987EE709782646D145FCBC3309933A1310FD71115
A0B725E3EFD5C01936F03C32E26E9752568586AF8F68C03A0B150E234D3A5C32
A6EC201192FFD8BEC784F4132DEAEA3D477C0433ADAD9AA04C4B6A9E56344507
DFC06A839C74458AFE461803EDAAD78BF5F7A738766E78C1AD7686A3C54532B0
7F8856E3D629286E320BE4C2E6FCB731F6D39DA40442E648D10AADA23516331D
6E99469582FAC2901B629CE4137326A88F6E1DEC663321202D699E63A013EBB1
69289FB9333B6AEBEE1DE23F9179E939E8E50F7BE4118ECC2CC40F691AE9748D
2DD76D9D1546488B7E05ABAA458C5CE797A327685A564C11295A73FE3649A983
08BC5906C1DA356869FEA0B72860BAD93A2E414FC4E3FA2AD4257AFB55B24A45
11083729A0C108D036C458F52CDA29AA7C0FE58DFA6FC3880C639397437CEA43
184F519AAB4A64AD74C3B178FE624B1AED5AA201D467D1E213B2A0E953A7A38C
C26BC8DA4C262467AA66CAC0D20720013D66080CE87635A06B7C74B7991E9F89
08B08E82821E5CF5B956BCDEB0F3292A8AD108AA64FFEB0CC4106C98810FE4BD
687C783B27501C603CD989F14A2A0A56807471BF18E1DB518117AD2000148395
45B1078F38D728422AD2BC39DCFBB8B36B101C9796565869F375D09239378C83
4B1060E5A374553F2AFCB00F41988BC06058B75924199D0B7A5547947DC1BB9D
24782DA5E78A0DAD6ED1D2D72D9F57A11CDC27CCFF840792065DEDBF4E547F47
6AD6E7850D0E405AE6523DC0CBB36047F5E51C0C1FBF1F6C230C1C99974CEC3D
5F27E9BBB5BC790D93B0A8092E176ACFC8C5A4031DBF1B7A9F86E317AAC4CEB4
1D8964D4FCB5E4DD511B6A9D5A0C7F206A00D43CEADAC9612A2D0B045892C685
D8D66273D511805C7D225023470E66EB4BD8E9C213A951CE104195B3D5039827
79D7397BF1D887CF316E2573D9019ED4ACDAD318A82BC7FBEC9EA7853CBA4A7D
A5DF2156D2CC8C4AA2D7E81DC82DC430514579079507174F0C2328E1B32287D1
724301D3B14553CB0D9C6CAE3B445A0810307CC13A1050AFDB5FD2070031BBBF
EE5236182971A143737D515EC7EBDAB4AF1ECBA1C6E90ED2DB868A2B8F010172
B9CB2C76FEFC4576A763849DE251FB514D0FEFBBF1F53606B8481ECD5FA685C5
4F402E90D4BE04D525BAFDD52768BDF1A82F018B959EAF91FBFDBF163B51D391
67A93E61FD9B41053DB67E093A449C6652666AADBC2F5FA54F47F8B20547A2A0
7E92E526BD45A921C4D6D0F443215273F91C3DC87628D844262D01ACFE1A26E6
C7F496EF2D2E5A6DE68D6F29F308EF10EDC419BF3A54256E363F1E05B58EBB8E
1C5BE8564BF98E2ED403D2E1C4862E5F8CAEC9D5DCB642914AD1214B8BFB4315
9501BAEAB263FAF92180560921CBE040A2AEFCBE4AC82DAFEEF86EB672ADA9A5
66ECEB61CF2BF6035B98EA90F559625C437D48D1DC2C7A453320DCE8EDE7EDEB
E6E2AAB829A501D4E8DE6EDABF2AE3B0DF0C17B48D56EA0BE83D8AAB025DD30B
CA89F0A8991D1D22136371B9F4203DA7C282144D38D6C4312A158DCB9A85A656
F04731A2AF73D2FD733FD25EA38FD565E8C78B039184C25E326AD83ADD0BAAD7
724F901F2CE3C9F42E49FD2C345000B4A70DCDF34A78081F8965DCB12462EC7A
F31ACAC176AC61E860EAF0771072A03245E32C08069A95EE07DC21FC22140505
7E781E2AE4784BF552F39F23BF701D1AC25F61DDE7FB7CD440A2BB35D540E57A
A6A7D297262E94E13F633F2197AB0F26B50810834E59E5421D9E769981C687D3
B9884412CEB59F852648B067AA434956EF4EA8EA57B9729F3B67F58F5E58150E
A599FF98B494D37FB8BCD8C4270F8A9CEE4654B79C8315F129B70F3E45BC2965
B08B8F87D7B5DC24872B81D726B598DA95DF8AA168A3C9493D65E6834192E085
3AEB5B7643FC865E744108F13859FD9E1D5455234F366F8919BBA377177966F9
38B0DE80DB56E28E37B8A1E5EA3A48801CC51BE0ED3A9F830310E62BF91E5F19
5D40A268C82B4890FFBD3E96CEC15B0506D1F80554A2BA58F64A435B05827CE3
2EFA15B485447E34AA343E8E9F0BDC2E17E355468B1E2D46E5C122F696D5AC37
8AD043E18632BEB5F98F848FA774CE7A7D2D7AA39717AB530CF1174DBB67A7BF
3954BE878B4223DD8F3064AF5AA364DDE7579E59AB8F63B4E0D1C4D5047A2BD5
E19A9D1C769735FB865860424EA7F5CD9AC219DBE20AEF5359B2DAB8797AA0F0
3E2E9FAB9ACB87B1CB8AA680463BCC001CB36929605008F4EBF2D95DDB47C3FA
9956F75531F04161B2C21F34CBE80DE64146F30ACD80B40A1D1BDEB7192045D6
581689406DE2CB87E5F9DE1E3B8B9659D7809E6D1E9A08259CC885675DCE088B
3ACA4E03A3CF8C5DFF4132151E1300915D686E39A66E89087CCEF84674972C82
0FACA78A9D149701C91B92DC7295EA159C11B1EE977C88AE260A1EDEC816801A
DBE116E0E90E6199B6C6B3594E3B700005879A7BBE9242FB65D39E70058E1FFA
D961EFE30F2D0FD0A480A00C51EDF3E83824EF127694133A3248571E9F5FB7A7
49571FAFED6E71E39F2D6F0D20BEA7E4DE86045C0AFEE2D8266955E85EDE0D95
7F517D1BCB5E3039AAB1AA88BD948CB3538F73F95F07EF5FD1F4E1C2893C1E9E
E55825F8FA31AF57A2E691FCD23E331210A1F20EB370CA9D5560854EEFA6B7CC
F5B6A95B28E2FA1040FB951C2FC3B6D56700B89E3683594859C7CBE8ACD73DC4
F60FC83572E4B3C1A4EFE5F4D03ECCDA89887C15A4483F5376EC13D4824C05EE
76AEFFCD3A76DC1C32FF3B927908A052F306F0BD8DF4C43188C24E26EFA58FC4
55C2487FDFE4CC736AD8B5ECDB617EDB931969D844EDB80F69D361C31826743E
3C3121B65958D40A8CE7410464406B7A1AE86C69FEBC65E327533BC1A3EEF531
269BF1FD4C40E1FE0BE479D2432045BCBDF554A350498723CA7D2A6B00CCA23B
F8775E9612C47DFF64D47E1470DF25E936F09AD63280A67E72742D84E67B2152
7D95A243989B030DA08846E1371E79FBC095317443011E5E2BDF6BA27DF984C6
16E9247616D8D7766EB60ADE56F1CF2943F900987E3C22871F495CDE362DC095
631674785D3EC8AB892D47BC179C3712448C184B73C5E92A67701539807D9ECC
6B3CFE2A87B650B89DA3CAF9DE8741B06805D454D82DFC677513FDF46E4583D5
20CB6E974EFC2484128D87484584C2F735643787DB5308191FFB83BF0B26924A
08FC2F4C014C1CAC86815826A0132FCFD809E2BC34AED8593685917843A743A9
FE7D4393C65279014BDE76C22106CA4364217C3842551319EC75577D484B3AF7
B1F129E5AC8D52E95AEA69D149FA8978990319C453911C7F03FEDBCA9477ACBD
92D1BA24E033458D3727ED4B961BF044197923E65853DF916BFAFE3341CFA4DB
CB1CD87EFFA8DAB5FE6DED172EBBCAC68218092F4480C7CEABC4AF667ADD5A9D
E04B77BC897F50A7A62C8A3F555683149B6475EFF13E12A8EDA3E0ACC243B107
3280AACB3C6ABE01F6B601D390E2DC1104F91B54A06D57CA5BFE36D164B7BE25
F9F811A466CE04C2CE5A774EE322D431260FB1758BAC67E14234D25747F1E68E
0C36F5B4157B04DBADF56C73BB31E5B6776501D8038DCB25C675C377D3C5C726
7BEFE151C52A60427176D702F75A7AB457EA8FCE8009D30DFEB19A02D18CA446
89E5D8C1FE70F5E45C90044E36AA5900CDED03F7D42CA361094008BC0452FB99
C4190B4297DFC9B4A2CF19A4AC6ED7F1340B4DA476C09617B1CEE6A23E0F92FD
2FAAD57B06EE95B2AD84499F1679E0E7F0E510D24CCD6F6EEC6B703F13CAC6A4
26647DC00D039893471AB164ED2811AA95537B7B714C7C7C8FD76974957C026C
43D69DED0E73CED24528CDAC72B02DE2A0F8FB2078F8DA24CC323DFFBF3209A9
36EF8EC9CAC3F990308C843FF802E9DE42E2782FED4E127CEAE0F6DE8434EF08
7320F134579D9E18D1E0A10DA99F33B8F8F8D5CC79DEC61DEA41D406A92BC9B8
3858E94FC5309ECFE3DE89D2D073D5DB53EF9B564606B5A3EDAF53D1963D180E
F18D90A8CA521577DC386FFEB276E7074E7E390E1E324C159A7087FBA0F1F8CC
F619FBA602F023C12C1BCD7239AD483C23383B1BF965219C662643BB5F5C821B
F4B3A4BDD20B79E6CEF6CE455CD3D8348726DDA6D4B2ACCEDD68D0617D3569B6
D3480F00DFDC22CCDFB9958701A8FA16F9576ED1FF20EDC9B1AE0014808BD00C
E6C610D8FDE6D8214D545F62B7DA86A5469B7F3554467CF6902906B50F1D0C72
DCB502158E87F8BABA7843239BD1C5543A4E737678129B976C531C14D3DD6C42
5FE9E1A13608EFD1AC4F76C41218D0E9CAFBC8078A26AB4F29F821A015135443
665349E266ED133ECED633BA0FE6231DAC6465AEA48202CD87DB045A607D1AA0
7FDB729A13667C1EAB414993757C3A5B86E2A64996927A24DB86295D55E47D19
055BFE222A668E91DA7FCD9CB325E4D3E8351328318B1F3917077ECFC7FAD87D
E593752F0E364654AD21415C3C8733FDB4E543C9947C62305C66C25C22DD875E
FC82C6F0903A052A1FA9785CA957459ED74888DF178A8FF3F25BD01CD6AFA04E
257C060BEDB49079590E2248E7EE7A0F076F416D380D11B733E3906B44DED5CD
49719579C999E987B1E528E7537C9BE7D962BF23DE4C9BC232A8F2F1669E8EAC
406B27D613C7EC6F92432C19B344388EF0F66294FF25C3513661C40FD63B4A03
92AD57F229B95EE93E567D1367ED1F0D7649BCCC4FB363C36F98300299474F31
71E1C0E49642378FD9C4078079DC3F513AFE036D7D8378CBB6585126F5302B9F
BDE0AC56D4BF37E98AE99C6685E0AAD3A215685A828CC8BB2BC61D42A9ED984C
D33CBD714920533D18E877EB5ECD85E89E6493984C6D4FB4310932EF823E6718
B3A1618D8555BB880F0F873B35AFAF3B31EB9E7F61D27081662CD3BA826C89CF
42BBBAB359666DEA1898BDFA2802C3B8E1DFF5015980E10AA74CA6F5D5ED9F94
6D7234C575A8E4DF24EA389542AAEC2E389E1C4A8B2AE1DB5A072E5C63CA4F96
BE0B90AD438A22F57C0778172B6496176926F360586A5CBC20997B3A038A6639
22A2DA20D350C4668654E16C5E244EBDB4F99E46B2BF5132B510DF70D9F21920
75F24203021FD08402EF1EB4F3F6A9797BE2370BBD3B85FA620074099ABD8EBC
7FE6512884CB79FFEED4154F10ADCB4D8BA4BC6EA7C754CAB3A3262345A5ECDF
4ACC74B2CA07C69D37272B7BB75520F5B6993A26483422F09E14E1E1F30DECD0
3F2FC3068A7F00F2385A1A23D0E6CF8F0270E7AB53D1AD588630C1584CB17592
B198D3D333A3BCF68EAE330437CC95932F2305AD3A3399FCF74B1A5C4B2A3F02
991EF0A039577EF96611CC398A5ABB95B3C26C9F6A16AA7A47F6C995009C1D96
72FD7279F910B174AF933326ABB47935AC900487A2273B1202B43E7D9EC4B765
BD8CBDC4ADE726D6DC6EF0FAB56EE83B23E38AB2B0CF3AB3029EB17B93D3A069
49DBBB9614FCB9EFCA2D26256C5AAB1D4DD42862FBB603738B27E4CCB871ABB0
BF21BFE1D7684C281BDA8D622916AC9BC54568B5E16A9ADA241ED5FE0F4F7BF8
36586CB1B0D98430F949A269B5BC2E6F609EE0AC44D8A8EDA7FDDCC941894B7F
4CA8C97787DEC37A22990FB3E3093FE77D3773200C8836B997BA051B13789DC4
39B5D1D0322B08C6E39E32B3BA06EE31AFD884E1E47F1F4EE7941C111BB48573
9017D9C926280C366EB8974511318B6FA30E54777D1783ED3251B16E5C9371B3
614899707CA186D413D7FBDE7A9D58A149212C591C4ACCCD028198DFD7488D90
7C3F89E0A6AB1492482AE665462C3D2CDD9BB7F7F56E23F0F566C0685125E4C1
B5EF7BF71B3C541D2DA5700075588C874F55F0A351D0B103F424EDB3BD992C2C
4BD9696CE77F9107E9D2F35191AAF282991B28D8A7C03BD5032DDE8A4023864E
41C83A20959D7FE8CABD2899EE45851E75A6E86C720A2B32251CE1F11F649190
329FC07B8FED156DF272A5B937545B229D31BEC1C62F386C34A4BB23CC4AEF70
D286642274B69E90E49C49CDD4E10E2E2ED685AB860934E954705106B1EC5A38
AFB66C5B7F43008322D0F5ABC68839093B5BA188F7166228948D362EA5BEE0ED
CF91BD788D8F261962B43870D5928D160218ABD0CAA216EE8C2D9C96FF0A04F2
EBCCA2467174529C5AD821D73C67B9F516DF05CB1C0D2451E712783BF1258FE2
A495B91553790303BC2B34C61FA82F21D77803AFDF977F53FACE09B4A3F3913B
F55D92DA86DBCE70EB2905C507057CE8CC71AA4BB84DAD5C8732A428500D51ED
238B720FC0CCD8482EC70CA6A0A4A162381D825F45C11DDC9E09E51366D47683
50919E6C0DCA42AFC7E0EEFDEA684C4E8DBB6F049C331EA174787ABA8C3EBCA6
A4A7A8C699DEADFADFC8BCE85D2A7E4CF939DDC479252D94554BAE96964C61BD
933742996058691C47B09CEBE352FA587115D2DE0197C5D6AD69FA6B299BF0C5
2073450E1E37A256B3A7D086CD86CDC90F418D86E8B704D37E19D3CE0C88FC0F
98EBA85E3873810F3123A000E06E0195E9C17CBA6C37D351D4A88908E1E57D68
3F7DF75A468CE43FAE26D1C9DD766FD65D3A9CD4503AF4114D06702D21C00517
25B1560B30D6CB37427427EF4079D701BBBF34BBB075FFC7CCDE8E30FF5A0635
13A34EFC4D8EFB53693357BA9FB0B6CDAA4440058C9BAF9F0034288E97C14357
6DA0FFE0D26FADE14FF26AED99239703FE05CED9E0BD9FBDFB0AF06A0B3E3A70
4AB199C97276D0308D5C25195B331844B38AFAF00502163B4C81353D89181D89
CF74734AB7D397C900EC9E1AFC20F35A8AD87222C67F152C9A14DA07D0741C6C
E0721BB494016B55D2F7AF542A2EC4A95FEE93D8A53179E9AF5E7793F1056A41
B007AF08EDF044C22B95B344510C0A08BBE7D931D67A49673A02DC4A0F7DDD04
6414B0B1A6AE8568E3C83815C0F46C1A254FBE3945C723C8E9986BF9F82238AA
3C115281A85D25BB874D264262C8727B87C4BFA7AD31B85086547F2D97EC2B92
0A0FEABE578C2D8B28AC0B65D8D31AC99C43CC7028403BB81EEDEF8A11C0A7BF
A0254541A3FE4712B1D0739BEA5B0586EDC6E57F81F47AA03593193376AB667F
09513B075F85976F9C24B3CA03AA5F701B6F80BBCDF2C427C40A51597F0B1BFC
92D1AEA02C1033D9793F00C5BD05B748D15204936311DBEBF80C88974D717C45
39732DAD1226FE504620FE9D2CF2DE2CCEE6BADA0AB587AD0479EBD6B094B14F
BA7B7E6B2449412EC60294905A3D1540EEC68747915A3DE2A6969C40FD797CD0
26EC07C07C8D2AAAF8C726595D0FC2F037F6F37D978D7F85C94B7E8E426BA238
74369196182EB98A957D3DAE33E425EBF9D5BAA0923E22CCCD85ECB7DDB9983A
97A95C1D97479ECC18F73683CED56C3A889A5CCED84E6A9B242B04ACEBD27260
F059F014B9BB87C55B7155B85EDE07CFAC982102B9CC9B91EFE137CCAF5C1144
C7F8E92600D0BAA927ABC183A538251EE4BBB6B66198ED9793D2F90CD7D79F27
B15F50FD125C5870AF8DF495CD0162C13EE55B169EDD035E877362B820716FD2
AE5F9560C3190AC388C4D02E161B1383535A46D2FB1912DDF6CFDCB995609788
A176928BEB2B6E60053592A0E9965C33E501E54100E989CF0BB55EC84C02C98F
3DD512B317108280D8DF30D8CA287A2B040C71F73BF6F3060F086B4D3A1CAABB
2A29D93DAB8EC44A72154DC7E1AC2DB4D8A06DFD70CDDB93EF102CF1EADCB0E8
E37D16CF8B644B88C055C5D6087F1FE53A13728BA3B18E275EB0CF680A063A17
614C7EBAE44FDB585058B48D3AD0F036194F88BB05FCE270913E3561C7280015
7712E85E97349FAC7329FEEA6319848614C5B184B42EA51452F540CA75E18B34
18B6EA7555619669CDD67A962902E689649E52F055CFE15E6E580F6C696A120E
2380F15F664122CD4E69A92200FA9E14434937BA7ECE3B966FA4A35BEE2036FF
9C5C423A2B0EBB2058B6E41092F1256C0892105D3C833F5A6ECC6C5F1BB8A9E7
BB776B37107CD588225511FEBE1F16541BE680B4C93C463A4D7E48F5DAAA4F97
931494D07E5707C927F4098ED71484E84C012FD6CC57A37DD72D5A0407144568
BE386A4DC43CFEF39B65672F9CD4FDFA8388D7A49B4AAF1EF7B066D049822B40
5C667ED8305E2C64A700CAF70989799D9D24281EC83E6536996D29B4A70C2D04
4EAB05EBAC5D4AFE97D7071C95A6C055A02AC93B2584663C2F134BB4B5EEA303
9CCD3F02DB45E13804EBC09DB96840C512BF9AFB028AD7A598FB92FF2E8F4988
08519B5C47BF8D61754CAA63E5D62E82BC659AD232546A3DA7751891615BDCBF
3B5BA98E3E3279D74B5E4EF480988A5321E87FC4953C62703BDFC0B3DF6E9BF8
7D9C42FC7F602F7454B1F669A96366B5B2F5C9C7999C479BAF2E1950694B571C
AE83022ADC8E75DD413871CAAB11C9262D553D7CB136506079124698F8F7B05B
C1A2AC1CD359EDCBB53CD4F78C21E8A44E42451F694443F3C4E2FC9541C8344D
35764A77700FAB750E41B77997BB57C3923321C9D354EDF04E1B6222A84D10CF
5EE66EC13A71302C6786D05D4193939A972EC5B389955A931A37C06AD33548F4
F4AC1884CE6FAAF5A11F36EF005402F6DAA9ABE6FAD20E8C5FD81222F2095323
D07B0B85927A34AEB7CDCD670DB229D4DC238B838CFCA83A445FA0805AE960D0
6C87661AE6FD2F090650AE7BFD3C6B73BACF76E1E5D2187136E1E88A9338D6D1
ADB555EB22BD634CAD60BB6E39C1A9F1A8DCBBCC2C7D61E01C7084E3A0161D14
E6B6923D472CB3615F3B1F10079402E2BD9735E61CE48C7E5A10B6E3F9461082
03B8139B8EEC22BEE2E8A1A721E5A28DCB5D3CC5B26EFFC5E8DDD9C64292AE5E
1BDBF5FCCC58FF953990F9090547E58310BBA39C6773D21F46718E3893178EBC
AE7FDEDC156F7E53CC376F0AB8492995231F3462DC464249BA970C545DA9D38B
C9AAE64610EE30E02F2794AD4BB4755531F54D6E8D8EFC65E22D757B6256CDCC
6DDFEC71A2BD6EDA120F1EAB0907A347D307B22740B0766E230B2DB0736EBF63
1725DA031830C2A5366F878A70B3B6C83C271C7AB66E8DFF87D35671595205FB
6FC1AC44FABDDAED9A8963662D441253BBA8B9406A0FCD521CC889DE701DDA31
107D32142AB09392A435D2B96C23689F7D00FB79AD1BF317219F2877B754EB1D
F9EFDA67B95DEADED6FAF887E30DC644C8AB51021AA7A8BFD5A1CEC34FDA011B
6574A7B339A16B9CFB8642F5DC4749DC919D6C50C20A5F63B0644E27E9D2C1B6
7EFCE84F8EADAD6E776D9985B148BCF3B1F598C5A34EB8DCFACE9CBA8FD81234
D02FD1F4DECD48CDEDF8CBA78D6FFAC2423DA7CBB871952FCF6137238156BD2F
C0BF31B0F2AB145529A196192DD7F806DA8B55219CAEC04A7CDE5CF58BB2B829
EC1E557423785C470BF430241B94DB6A9FD09F9ED2691D4000CFA251AA436C75
2E17C8E6BBF0C81A4469FD37D89740749BF8CD568F02DC37E6DE47CE0E702E6C
A60CC2025BC9734E7008CB793241192FD9C1276B9B9E220189DDA8B61F57EFA7
B29CF3373C2DB30270B2C4CFBE1A6DB6FCD4E0797666361852F9E7D036187286
C116325381FDB00A1F9F47838443298690D66C478D9902CCF4F00C702B55BCF6
3944BCC6282E98DAD2C3AD48CCD79B418746A6A8838AC42611AB852BBB9AACD3
10BC26EE273808B048A9103204F509100C4CC9E7723786A86B0BE925CB180044
9650CCB1707D4EF78F36469A15279BAA997D2E494BB7841D083B3E0F8BE57D6C
F711BDC029717D7097A230886CA34C25B6C237CB02DC0FBE72137F64494A3A5B
25B0FF5B1716325E624343D0F98443E571589B998A84F9982F959AA17A177D04
F529BDB6164D9810B7F0FD58D1D89208D3CDE5601B5BF0B8A5A569EFB8C9FB49
D9C6667137A76761CBA26E6EB2E0E8A12957DCE707852A4EE07620EC954C5E05
48CA4C08EB2BD4FE169407260866101FE35651381FE36C1CC33B6C6DBDCBEC2C
3E14050E61FA06EE3778DA179B69B23E048D700A5F1F32415BB4B02748B28128
5E320B7332EBB83617D3227FA8724EC12B2E2632FF837F83A8729F8B0C146A87
EADA5640AD3E6CAE6361CBBCB9C41BE76C8591F5A44B536CBF67CD4E86AC6C0C
2F90B9493C17583CF97508452675347E99F0845FB79CFC6F7B59BE095616B14F
9DF9428A7618937955A999DB94568B44C2DAC0192D73F49F0BA9DA58AC5F7F4D
F273A9085B4F908BD35135CDD7B5D60E062BC043441F312F05F7E97F1F2982A6
21DA2DD87776E36BF950B699A70A724F823597DC4238C6FCFD62809E70501F89
4B47FA5E28C5A189675E6FAB3D64122D4EBBC0B1FF14094FEBC224CC9E92F176
B90A3F4C7261AC7CCC01D54F7B1B7EFF754D234A8FE7193428D94A4FF141BCEB
938F3979F8006168E20C0FAE095913AA66573222D293616EE9918A7B49E4A755
6E12574A371A85F1F7E95EC02BEFC830FF3499E878892F975FCB5CBD980D8EF7
4E1202C17DBAE200C537BBC9965C1FC26F364698AFBDFDC4478B841A263116BC
1DFB8F0A14D4C3E19CAFAF1C0DF5A68705FC3F43C11A4FDA5CC006565B70D672
6D3CA4D91F95195CCA8D6CAB0B5097D34722B598D1AB782C8AA31D0C5EBE7DF6
80075D6DC36DF01F22CBF59298810B9DEE5CF92742A66EF2BBB6B20E08DFC2E8
4073DB8E2A7865604B3DEB0C21A4F435AA4E38B2F0EAA9ED39DD8FCF2570D22F
87468F65970A6866254C121661BD724F9A214149E5FD690D9447D373DB9DB2C1
81B72C3B44BE4E6650E0260E1593F5ACF189FD83471071D5495ABBA60B60B686
B2DBF828994D7CA07D780E2F8D9C2D3F32FB38A731ED94BBD5950F1CBE49D870
43C4686B2213E3BF8938FBA24FAE9F2FD72FECDE68AEDC848B3BE81A66E5E153
281685A932374681B43AC1E772828A0E89B379D8E88D98A1304FFB3F33AE823A
B947B1D61D5FBA064A5F6F382AD195C7DA459A2596374A8425C1EC147B51A74D
3195AC74B76660535352D4AD213DAED87696495959976EB80A650E2FD432CB22
1AD5F5310CBF374787AB1CB5E13C3A9727AC18266B8B31D889BAC95636A94111
775B52620C23D23A941B970E629D5D6AD0862F57ADF737AF93CB69B11B0FF191
965A5C5132DB0A64EC0A3BCE8C41111C16700C392D81BE168089D188DA7F79C9
C194F3C9E2AA1BAB29D6C6E631EE3C8C9A6EE98DC0C1573EAAAC8589ED2BB9F4
0FEB357FD5B4723B1B1C257D485C1B1FF52805A2E3026D737B44C0479E5705FA
1CE19F13112332EA26015383549DEA7798A1F3C7DC8990BAECCB0E72B5746148
68D4A861AFF399B2F3728F0A12A93CF4C9DB55C9612D871CD941F21BF2BCDE20
DB97E637269CC5598DCB5B6ED5EAF6A3371BEC38AF7C1C449A29692584A9B546
37E24F96CC6DEA0F7E3AF463CF8C34CE1F10205340834FD9D97992C557BF2498
F6C071471E48E948AF60693DC4F47FFF139EA2717E0D78EC6DE935028513697B
1675AAEDE11069301145F6566758D5548F98BE93F4D6E057EB8FA6030DE08B0A
F7C53AC4F2F568424C3D13B1F505E6A92E0095A7F33DB9A4BA33F9837F4BCAFA
D560678B791DB6D1CAFC25A7FAABA9A118B6ECDA7E12379E94A9981C643D277F
8873D2E9C085BBB081204D4BC80F56EE729060F7D42DE6319ED9DEFB7D5D6086
E7A74C7C5497DF79F50D45F442C316C67BD66A0641D248F8B3170ABA556CF22B
23725FBB4BAE29DA1AC4DB32387F3D0096D1B353703656EA4D117D4B295F4BC8
48BF819671F20DC500FA5CEC6D3474D07FD167A4E32650F51B7F3952EFA4B67E
73BE2BACD97ABBBC5E00B618C8EA2C783089A1B020389DEB8841CB9CB6EC50E4
93FDC741FF67219ACEF49FE4A05C3A4350F77378B737DD6E3C2980C307AE2ABC
0674C911CECC195E5C99CFFEA54D8016BF6088A78C94EBBD8EB0194F986105F5
F3E419D70F375B6C7B23FE10F1D653A510F99F4265DB618998F63887AC32CDCE
F5FB1B137D86B7DA02A70C2D9A8F5EE5278359F1A7ED0F53219B7C5FFD482D34
E6D4A55177191490B0795A76950866CC32B5F5ACB9008AF75A0A5D1DC52EE87E
215EDFE128FBE36021B18A27E0DF689791A63797A0438BD43A6ED78BAB455897
42E90B4C8FDD2BF441D731C6CC75340DC1C8A491FCEB167A9BCF92EC01DF0D3A
FEDA35043F3CD262E8F9A8ED1DF6AF05914A0296C57A857E9A906755A069B44B
9356A1042FA515871FFE43A20BD4E60EF9B3AFD590A94A670D1BC2EE752BD28C
62614F6EEFEA779CA0E0D5CC74DD1C5761D7967278469F81519DCCBEF480043F
69AC393E26C62F20887FA495F3D0579DB3277D2D8B530E2312932AFFA22E56D5
50F52A63A9514DD6BCAABF5F7381B70CF53E73B14C9FC7C8B031340A2AC4925E
38CBE6CCA897D4BE626DB37415226292B23CD1DBC48F1528EBEC5C8532D26386
44746854E35F27124753383EAEE03E0AD003837FB0C1900B22C29DF7B5801AF0
4FEEBD528CD0D52DD944C8624541771714668E2B7DF1528BB0D6B94980475330
690336A4D262A1B139A2F7BA9B348275DC55FCCDA30649E6FF549C17870CF20B
6314F9FB633550665CC8BB71980AA5FC0720BA1A9D62A17FD5E6FF87E27A4801
7E5C2342F2586DD432E5DB6D83585A1DE1D973F09EEEE10790
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D916672480464F7E22
CA6E431FE38D3FC019BDD229E064B72C545C61C6EA55984565CCA88ACB01F744
3B4593CC8944C70F30925FB48A16342CC26D444F54CA15E5A624C4A2DAA2AEF8
404145BBA339F2A2D6FC2F3ECE54387761CA1213C8D56FF96E37C6147CA44B84
262EA87E7CC10D931E6B5B80D7F09813498497AA84ACB4AC69BC6C8481ED2953
084F560D7B1CF90555E69BD2AF7C5D944E8E3506165014652462BE1BC81CA341
E1B0725159D36DA0FFF3577D1DEBC5D91AE683FB0384
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusRomNo9L-ReguItal
%!PS-AdobeFont-1.0: NimbusRomNo9L-ReguItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular Italic) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -15.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-ReguItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-169 -270 1010 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E134D4CB5ABCED39AC635
DA001E9934C198A7F9B9ED0028A85E9AE00421DFD8EAA3BB3B4B4CE45D209303
237BD51809FE4D880900B1EEB236ACA87B9FF6EBE6B994A60AF5D67CCC42BD56
77295C346EB4C62BDC1EF22EE07DAAD928DFB73455F091F32408ED6430B97417
683AF27A03718A156E3F6E7B6E4F2E8177503CD82DDBF4557A3CCFF4C858AE7A
F7EFED6CC521A28342436B953E4650B5792BE85EA2F989EB6D986905A61FA38B
96E1BBC830B74469150FB0B598A794FD80D10870084A877273A9502C3456E5EF
74350E6E3BE5863E8BA185EB59FB87B36566AF71200B6ED389D1287D4E925E33
B2383ED05D87D48586E698FBC5D562ED9D8A09EC3EAA1B1F300224AF20C23F26
A2EADC74562571DA84B3914D1D80B127C6FF4706C7046BBB372A0013E0AB94F0
C27946583871D272BF4F20FA84E89D745DE7BBA885CC09BA72E0F530ED4EF7D1
864B3C67007ED98800284235372F0A70C912E21E851AFBF812165B8DF912CD1A
013E271F0B347967876C68AE4C4107EF8AD1F170916210034C66394A9D971B68
FBFC1131E37FC178EB97C1B2A0F573ADD9D7C0BF944E6529734DF8A7EF54485B
A3375CC30E9E328943733CBD352BC15B06C85BFB4A96994291C72A0EAE84FB01
0F1B24D0125FB8C16D60561DF8BB7AA7DDFE9549AFB70C1E89424214609FDE41
9A142892E30F02754FD234CEB3C59A2A04C06BAB7AE40E8FDEC50559B8347684
391C750987802D5452C47C1E0B5F222DE9A0EEAFEE19D796FF375A1E1EF0AEED
1BCAC4F485FCAEE18AEC585D1A9D80F41871DDA45FEF1EAE82C5893118987BEB
4D9E345C27C7419FE65E4853B40537D822E34FF1E0BD2819D21EF607981259E8
9F1040A2D708D7463858AA5381759AC49DF4DDDEB209A278FE60BD2508ACA0F4
6A249A05B652E4C7BF1B676943CDC4678C105B6F7C77CFC92B0797073A293097
27F949FFCFA845B0A8A5CB6B619B63B0A1D1981046F1B4E859D84E1710DC69E1
78C52B5FB4EA76925364202D717693407287F6EFC7FCED238E4B228002B018F8
53270938270A0BA4B7A3FDDE1DA1C862C9BDC3A2DF634276519375C5F79AB502
D918EB10300B507A1972441590EB25F30B2514EEA06C4D3BE4D8D2EFBB235EFE
FC8FE8B2C4A1D071EAC263297A33CDD908F8CE2CFC49E0FC3F4093CC6E13B870
84E461E23A4D6862F0EEA28BA7D65C10357563DFE6085FAD3790BCC95E858942
606F7BF8F2C0F92CCA49C489AC56BB4FAEB441E0B5DDFCD4F291E0BB1A9D79E8
29E1B64DE91C306B850F0DF4AEC960EE3BCDED36FEC31EAABE44B4E65AC2359C
511FCB552194CDACD36DB6FC331F8FB67C9AED9E11CE71D9034EE8704CED9534
746FB31E330BE53F44304E2B504D7A6AD4EEEBAFC8BE35B06BF8B30FFF0A5957
E39DF3DDC87E92E2FE8EE20996F52867C6CE8D2421EA47B964FDCF13CC2B720D
6EF7C16E03198453C10AA563F2964C3B13B7E54BBBF08F23F8F2FBAF141B2A24
D34C45E7B9EC8730E60E02CA72E2EFD7ECA25AC51DCB571982706F101B216B4A
F3523974378E45C892E53DF3AD9691D42235572F67AC5C0B20E59EBC60863407
0BF82CE46109C332BC95B250DDD47CA3E0C377BD150F134E5BB4F8D8247CF105
21AE6964C6B3651B2647FE0CDE1A2258F05CBAC20AE0C9F80EC7A64CB9EEAEEB
B91C50FD3E2EE0E437297DB82A1C7F8A116038BEB06DC30ED8E89BBDFE4480A3
6CD4F92ED10813F722DD86A572F602F36E083DFC32E5B188AC86BED7274A1E87
749F6B1B05B6CD5047BF5B6F6AD0D17020402FF8E0B391AF827DAB714D59E44C
0E28529DBBD0B8ACA80F6E7A468EFFDDA0F44FB32709CC52DA272724858A522B
9E47D4B5ED68BDDAFC0E87886D6FC29ED8F6CA090AB1E40AD29DA80A7C096C41
5EA3DF297D63B8DC952C181A02D22FB85F961C7CCB8ED1B80C895873C19FCFAB
9ABFE3B44D21730DBAD665A14D0D4BAD47CAD5EE287FF010AF55A4B864B822E4
BC0569E0916E6B555B31670C7044FACECC830BF9FC5B0D649CC38DD4B2E92181
38D27F49FBA3C2072D49182D661F2A720B37C4B2DCB7F7A15864E73339C9C22D
957B163CCA056BA39D1151A17BE5E15126B33BF5ADD929A8BA4892734CA9E01C
68BA3E214D7651402D5B33E72FE16213BC2778963960567849E1F6FAA1EA9DB7
F0B15679BFA992CA2D8945B38A4BF8B7E599354A843A7386A25CF46386D6975B
70E30002CEB0144F2D51EAE86EB7E2DC73C347153B9B9135A79D2898CBF02A1D
CF10A584114488D4C29EFF1D33AF0E3963EFD8E46345800DD13C04021FC924C8
8B19890571C60821FD932122CC04FEC35A0023F82192384592AD70FFB677B3AF
AF00AF6D367DB450F76362FD9E1C29E1A346FB1770D3FF36D19AB569AD0865E2
6C9F0048B1100CBB9EF077EF22D373A323A5A71768EDB3C6F00EF26E6A7A7017
EA3D220AC1798A57016655ECE23DD15FE98E5E0C7519713F428B1FC2FB48077B
4425BF9C0A6D19EED9BDD676E024F7EE6BE807B0A35F60A22424F35556D8E511
32CC55FA85395C32015B9A74FD769BD4F84636731784045350D1D50BC3011EFD
FB147F180E92CC82590F8EF5F74EC3A58D591F9B586DB505482DF19ECB34B055
3EEE8FDB3F3EBD72B45174DFBE7FD0F25AEB087C6B0166544FCB3278F5E3EABA
107B786883BC214F7891F216DCA5A69EDC35A1E0397EB24A96D1C1CEBA8167CF
D9F3D47E3CAD2E351212FCB66B4CE961B5E674C570FBECF2A3C67FA67497227D
76FDF77A2CB059C9873B5D20B18494E799C252491837502E5E04C49611BBAEB0
1B511989F7F8381B8048E5EF027D419F0639B7F4A00FB7100880A8281CE99EB1
F02B9DD81F65C8C87287497E0B1690F67C582A198131CE129C1007744AF621B6
B1FDE1B7BE9A262300C69FFDE29B0DBED7874524A07771903C88229608F00BC8
9501EFA06B522AADB02329636DC8F1DA219347832DB7DE9FA705A2C6E17FAB4C
FA3CF2F545B7276291BC6865B55729AB3CB5505A090935A070380F95761C151F
2973CA182AAFD953E8E1D271CD1083CB61935F376EB29DCECEA5257820D073B4
CB9000884CA767A32F087DDBC91AC53979DFBAAFB793970ADDA777EAE36EE564
A17662B16AD803DF81417053EF37208FE44BA871624782
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 23681430 14208860 1000 600 600
(/home/jw/.cache/matplotlib/tex.cache/c9/08/c908860ffb00ba9185b9bd86a5d80d08c59b891c557d883539e98d40b5ab8f6d.dvi)
@start /Fa 139[25 1[30 2[46 33[81 18[25 4[46 1[46 46
46 46 1[23 46[{ TeXBase1Encoding ReEncodeFont }11 91.3242
/NimbusRomNo9L-Regu rf /Fb 171[56 51 5[82 77[{
 TeXBase1Encoding ReEncodeFont }3 92.1551 /NimbusRomNo9L-Regu
rf /Fd 197[28 58[{}1 99.6264 /CMMI10 rf /Ff 162[41 1[41
15[90 29[41 45[{ TeXBase1Encoding ReEncodeFont }4 124.533
/NimbusRomNo9L-Regu rf /Fg 167[76 3[69 84[{
 TeXBase1Encoding ReEncodeFont }2 124.533 /NimbusRomNo9L-ReguItal
rf /Fi 201[50 50 50 50 50 50 50 48[{ TeXBase1Encoding ReEncodeFont }7
99.6264 /NimbusRomNo9L-Regu rf /Fk 139[23 32 28 1[42
1[42 65 23 4[42 28 37 1[37 1[37 13[46 2[46 80[{
 TeXBase1Encoding ReEncodeFont }14 83.022 /NimbusRomNo9L-Regu
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black -600 1200 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 -600
1200 a -600 1200 a
 /PSfrag where{pop(psmarker0)[[0(bl)1 0.000000]](psmarker1)[[1(bl)1
0.000000]](psmarker2)[[2(bl)1 0.000000]](psmarker3)[[3(bl)1 0.000000]](psmarker4)[[4(bl)1
0.000000]](psmarker5)[[5(bl)1 0.000000]](psmarker6)[[6(bl)1 0.000000]](psmarker7)[[7(bl)1
0.000000]](psmarker8)[[8(bl)1 0.000000]](psmarker9)[[9(bl)1 0.000000]](psmarker10)[[10(bl)1
0.000000]](psmarker11)[[11(bl)1 0.000000]](psmarker12)[[12(bl)1 90.000000]](psmarker13)[[13(bl)1
0.000000]](psmarker14)[[14(bl)1 0.000000]](psmarker15)[[15(bl)1 0.000000]](psmarker16)[[16(bl)1
0.000000]](psmarker17)[[17(bl)1 0.000000]](psmarker18)[[18(bl)1 0.000000]](psmarker19)[[19(bl)1
0.000000]](psmarker20)[[20(bl)1 0.000000]](psmarker21)[[21(bl)1 0.000000]]22
0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 -600 1200 a @beginspecial 0 @llx 0
@lly 360 @urx 216 @ury 3600 @rwi @clip @setspecial
%%BeginDocument: /tmp/tmpy_apig4u/tmp.ps
%!PS-Adobe-3.0 EPSF-3.0
%%LanguageLevel: 3
%%Title: T-vs-MTS-compare.eps
%%Creator: Matplotlib v3.10.3, https://matplotlib.org/
%%CreationDate: Mon Aug 18 11:58:55 2025
%%BoundingBox: 0 0 360 216
%%HiResBoundingBox: 0.000000 0.000000 360.000000 216.000000
%%EndComments
%%BeginProlog
/mpldict 8 dict def
mpldict begin
/_d { bind def } bind def/m { moveto } _d/l { lineto } _d/r { rlineto } _d/c { curveto } _d/cl { closepath } _d/ce { closepath eofill } _d/sc { setcachedevice } _d
end
%%EndProlog
mpldict begin
0 0 translate
0 0 360 216 rectclip
gsave
0 0 m
360 0 l
360 216 l
0 216 l
cl
1 setgray
fill
grestore
gsave
58.888896 42.360788 m
349.2 42.360788 l
349.2 205.2 l
58.888896 205.2 l
cl
1 setgray
fill
grestore
1 setlinewidth
1 setlinejoin
0 setlinecap
[] 0 setdash
0 setgray
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
72.0849 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
72.0849 205.2 o
grestore
gsave
60.13 30.672 moveto
(psmarker0)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
124.869 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
124.869 205.2 o
grestore
gsave
112.914 30.672 moveto
(psmarker1)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
177.653 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
177.653 205.2 o
grestore
gsave
165.697 30.672 moveto
(psmarker2)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
230.436 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
230.436 205.2 o
grestore
gsave
218.481 30.672 moveto
(psmarker3)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
283.22 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
283.22 205.2 o
grestore
gsave
271.265 30.672 moveto
(psmarker4)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
336.004 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -6 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
336.004 205.2 o
grestore
gsave
324.049 30.672 moveto
(psmarker5)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
61.5281 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
61.5281 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
82.6416 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
82.6416 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
93.1984 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
93.1984 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
103.755 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
103.755 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
114.312 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
114.312 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
135.425 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
135.425 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
145.982 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
145.982 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
156.539 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
156.539 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
167.096 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
167.096 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
188.209 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
188.209 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
198.766 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
198.766 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
209.323 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
209.323 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
219.88 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
219.88 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
240.993 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
240.993 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
251.55 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
251.55 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
262.107 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
262.107 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
272.663 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
272.663 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
293.777 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
293.777 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
304.334 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
304.334 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
314.891 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
314.891 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
325.447 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
325.447 205.2 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
346.561 42.3608 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
346.561 205.2 o
grestore
gsave
186.702 11.599 moveto
(psmarker6)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 49.7626 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 49.7626 o
grestore
gsave
28.167 45.626 moveto
(psmarker7)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 82.3306 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 82.3306 o
grestore
gsave
28.167 78.194 moveto
(psmarker8)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 114.899 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 114.899 o
grestore
gsave
28.167 110.762 moveto
(psmarker9)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 147.467 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 147.467 o
grestore
gsave
28.167 143.33 moveto
(psmarker10)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 180.035 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-6 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 180.035 o
grestore
gsave
28.167 175.898 moveto
(psmarker11)
show
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 43.249 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 43.249 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 56.2762 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 56.2762 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 62.7898 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 62.7898 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 69.3034 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 69.3034 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 75.817 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 75.817 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 88.8442 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 88.8442 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 95.3578 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 95.3578 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 101.871 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 101.871 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 108.385 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 108.385 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 121.412 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 121.412 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 127.926 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 127.926 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 134.439 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 134.439 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 140.953 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 140.953 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 153.98 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 153.98 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 160.494 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 160.494 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 167.007 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 167.007 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 173.521 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 173.521 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 186.548 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 186.548 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 193.062 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 193.062 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
58.8889 199.575 o
grestore
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
349.2 199.575 o
grestore
gsave
23.368 98.452 moveto
(psmarker12)
show
grestore
2.5 setlinewidth
[16 4 2.5 4] 0 setdash
0 0 1 setrgbcolor
gsave
58.889 42.361 290.311 162.839 rectclip
72.084855 196.417334 m
78.851743 195.666315 l
85.618631 194.575286 l
92.385519 193.032865 l
99.152407 190.909104 l
105.919295 188.053866 l
112.686183 184.289003 l
119.45307 179.402172 l
126.219958 173.145529 l
132.986846 165.253972 l
139.759013 155.504084 l
146.525901 143.810862 l
153.292788 130.335193 l
160.059676 115.559082 l
166.826564 100.30585 l
173.593452 85.680529 l
180.36034 72.890417 l
187.127228 62.924635 l
193.894116 56.19605 l
200.661004 52.378755 l
207.427892 50.618043 l
214.19478 49.98058 l
220.961668 49.80517 l
227.728556 49.769189 l
234.495444 49.763672 l
241.262331 49.762994 l
248.029219 49.762889 l
254.796107 49.76284 l
261.562995 49.7628 l
268.329883 49.762767 l
275.102049 49.762738 l
281.868937 49.762712 l
288.635825 49.76269 l
295.402713 49.76267 l
302.169601 49.762653 l
308.936489 49.762638 l
315.703377 49.762624 l
322.470265 49.762612 l
329.237153 49.762601 l
336.004041 49.762592 l
stroke
grestore
1 setlinewidth
2 setlinejoin
[] 0 setdash
0 setgray
gsave
58.889 42.361 290.311 162.839 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
2 setlinejoin

0 setlinecap

0 2 m
-0.449028 0.618034 l
-1.902113 0.618034 l
-0.726543 -0.236068 l
-1.175571 -1.618034 l
-0 -0.763932 l
1.175571 -1.618034 l
0.726543 -0.236068 l
1.902113 0.618034 l
0.449028 0.618034 l
cl

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
78.8517 195.646 o
85.6186 194.545 o
92.3855 192.995 o
99.1524 190.872 o
105.919 188.029 o
112.686 184.291 o
119.453 179.441 o
126.22 173.232 o
132.987 165.398 o
139.759 155.72 o
146.526 144.113 o
153.293 130.732 o
160.06 116.046 o
166.827 100.859 o
173.593 86.2567 o
180.36 73.4294 o
187.127 63.3671 o
193.894 56.5064 o
200.661 52.5597 o
207.428 50.7035 o
214.195 50.0125 o
220.962 49.8145 o
227.729 49.7713 o
234.495 49.7641 o
241.262 49.7631 o
248.029 49.7629 o
254.796 49.7629 o
261.563 49.7628 o
268.33 49.7628 o
275.102 49.7628 o
281.869 49.7627 o
288.636 49.7627 o
295.403 49.7627 o
302.17 49.7627 o
308.936 49.7627 o
315.703 49.7626 o
322.47 49.7626 o
329.237 49.7626 o
336.004 49.7626 o
grestore
1 setlinejoin
1 0 0 setrgbcolor
gsave
58.889 42.361 290.311 162.839 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-2 0 m
2 0 l
0 -2 m
0 2 l

gsave
1 0 0 setrgbcolor
fill
grestore
stroke
grestore
} bind def
78.8517 197.798 o
92.3855 197.797 o
99.1524 197.796 o
105.919 197.795 o
112.686 197.794 o
119.453 197.791 o
126.22 197.788 o
132.987 197.783 o
139.759 197.777 o
146.526 197.768 o
153.293 197.757 o
160.06 197.741 o
166.827 197.719 o
173.593 197.691 o
180.36 197.653 o
187.127 197.603 o
193.894 197.538 o
200.661 197.452 o
207.428 197.342 o
214.195 197.2 o
220.962 197.017 o
227.729 196.784 o
234.495 196.489 o
241.262 196.117 o
248.029 195.649 o
254.796 195.065 o
261.563 194.339 o
268.33 193.443 o
275.102 192.341 o
281.869 190.995 o
288.636 189.361 o
295.403 187.389 o
302.17 185.026 o
308.936 182.215 o
315.703 178.896 o
322.47 175.012 o
329.237 170.508 o
336.004 165.339 o
grestore
2.5 setlinewidth
[9.25 4] 0 setdash
0 0.5 0 setrgbcolor
gsave
58.889 42.361 290.311 162.839 rectclip
72.084855 196.487681 m
78.851743 195.849347 l
85.618631 194.947865 l
92.385519 193.682597 l
99.152407 191.925227 l
105.919295 189.516822 l
112.686183 186.261648 l
119.45307 181.930101 l
126.219958 176.266523 l
132.986846 169.010042 l
139.759013 159.932358 l
146.525901 148.890822 l
153.292788 135.910187 l
160.059676 121.280632 l
166.826564 105.653193 l
173.593452 90.080143 l
180.36034 75.914455 l
187.127228 64.490082 l
193.894116 56.631321 l
200.661004 52.251538 l
207.427892 50.407293 l
214.19478 49.872946 l
220.961668 49.777817 l
227.728556 49.768135 l
234.495444 49.767009 l
241.262331 49.766359 l
248.029219 49.765808 l
254.796107 49.765336 l
261.562995 49.76493 l
268.329883 49.76458 l
275.102049 49.764278 l
281.868937 49.764016 l
288.635825 49.763788 l
295.402713 49.76359 l
302.169601 49.763419 l
308.936489 49.76327 l
315.703377 49.763142 l
322.470265 49.763032 l
329.237153 49.762938 l
336.004041 49.762859 l
stroke
grestore
1 setlinewidth
[] 0 setdash
0 0.75 0.75 setrgbcolor
gsave
58.889 42.361 290.311 162.839 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 -2 m
0.530406 -2 1.03916 -1.789267 1.414214 -1.414214 c
1.789267 -1.03916 2 -0.530406 2 0 c
2 0.530406 1.789267 1.03916 1.414214 1.414214 c
1.03916 1.789267 0.530406 2 0 2 c
-0.530406 2 -1.03916 1.789267 -1.414214 1.414214 c
-1.789267 1.03916 -2 0.530406 -2 0 c
-2 -0.530406 -1.789267 -1.03916 -1.414214 -1.414214 c
-1.03916 -1.789267 -0.530406 -2 0 -2 c
cl

gsave
0 0.75 0.75 setrgbcolor
fill
grestore
stroke
grestore
} bind def
78.8517 195.835 o
85.6186 194.928 o
92.3855 193.661 o
99.1524 191.905 o
105.919 189.5 o
112.686 186.251 o
119.453 181.93 o
126.22 176.283 o
132.987 169.051 o
139.759 160.007 o
146.526 149.009 o
153.293 136.084 o
160.06 121.517 o
166.827 105.948 o
173.593 90.413 o
180.36 76.2437 o
187.127 64.7656 o
193.894 56.8177 o
200.661 52.3477 o
207.428 50.4425 o
214.195 49.8814 o
220.962 49.7793 o
227.729 49.7686 o
234.495 49.7674 o
241.262 49.7667 o
248.029 49.7661 o
254.796 49.7656 o
261.563 49.7652 o
268.33 49.7649 o
275.102 49.7646 o
281.869 49.7643 o
288.636 49.7641 o
295.403 49.7639 o
302.17 49.7637 o
308.936 49.7636 o
315.703 49.7635 o
322.47 49.7634 o
329.237 49.7633 o
336.004 49.7632 o
grestore
0 setlinejoin
0 setgray
gsave
58.889 42.361 290.311 162.839 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

-0 -2.828427 m
2.828427 0 l
0 2.828427 l
-2.828427 0 l
cl

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
72.0849 197.744 o
78.8517 197.715 o
85.6186 197.673 o
92.3855 197.611 o
99.1524 197.521 o
105.919 197.393 o
112.686 197.21 o
119.453 196.953 o
126.22 196.593 o
132.987 196.095 o
139.759 195.409 o
146.526 194.476 o
153.293 193.215 o
160.06 191.531 o
166.827 189.302 o
173.593 186.386 o
180.36 182.621 o
187.127 177.827 o
193.894 171.823 o
200.661 164.447 o
207.428 155.59 o
214.195 145.231 o
220.962 133.494 o
227.729 120.679 o
234.495 107.295 o
241.262 94.0323 o
248.029 81.6868 o
254.796 71.0251 o
261.563 62.6105 o
268.33 56.6544 o
275.102 52.9591 o
281.869 51.0047 o
288.636 50.1521 o
295.403 49.8569 o
302.17 49.7793 o
308.936 49.7646 o
315.703 49.7627 o
322.47 49.7626 o
grestore
2.5 setlinewidth
1 setlinejoin
2 setlinecap
1 0 0 setrgbcolor
gsave
58.889 42.361 290.311 162.839 rectclip
72.084855 196.499731 m
78.851743 195.871819 l
85.618631 194.978478 l
92.385519 193.723633 l
99.152407 191.9845 l
105.919295 189.605732 l
112.686183 186.396154 l
119.45307 182.130395 l
126.219958 176.556704 l
132.986846 169.415514 l
139.759013 160.47201 l
146.525901 149.570842 l
153.292788 136.714291 l
160.059676 122.163551 l
166.826564 106.542952 l
173.593452 90.888156 l
180.36034 76.557999 l
187.127228 64.922357 l
193.894116 56.862847 l
200.661004 52.34368 l
207.427892 50.433744 l
214.19478 49.88083 l
220.961668 49.7829 l
227.728556 49.772553 l
234.495444 49.770803 l
241.262331 49.769595 l
248.029219 49.768563 l
254.796107 49.767676 l
261.562995 49.766912 l
268.329883 49.766252 l
275.102049 49.765681 l
281.868937 49.765187 l
288.635825 49.764759 l
295.402713 49.76439 l
302.169601 49.764072 l
308.936489 49.7638 l
315.703377 49.763567 l
322.470265 49.763371 l
329.237153 49.763207 l
336.004041 49.763071 l
stroke
grestore
1 setlinewidth
0 setlinecap
0.75 0 0.75 setrgbcolor
gsave
58.889 42.361 290.311 162.839 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-2 -2 m
2 2 l
-2 2 m
2 -2 l

gsave
0.75 0 0.75 setrgbcolor
fill
grestore
stroke
grestore
} bind def
72.0849 196.491 o
78.8517 195.858 o
85.6186 194.961 o
92.3855 193.703 o
99.1524 191.962 o
105.919 189.581 o
112.686 186.371 o
119.453 182.107 o
126.22 176.538 o
132.987 169.406 o
139.759 160.479 o
146.526 149.605 o
153.293 136.79 o
160.06 122.295 o
166.827 106.739 o
173.593 91.1386 o
180.36 76.8301 o
187.127 65.166 o
193.894 57.0358 o
200.661 52.4361 o
207.428 50.4686 o
214.195 49.8898 o
220.962 49.785 o
227.729 49.7736 o
234.495 49.7717 o
241.262 49.7704 o
248.029 49.7693 o
254.796 49.7684 o
261.563 49.7676 o
268.33 49.767 o
275.102 49.7664 o
281.869 49.7659 o
288.636 49.7655 o
295.403 49.7651 o
302.17 49.7648 o
308.936 49.7646 o
315.703 49.7643 o
322.47 49.7641 o
329.237 49.7639 o
336.004 49.7638 o
grestore
0 setlinejoin
0.75 0.75 0 setrgbcolor
gsave
58.889 42.361 290.311 162.839 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

0 2 m
-2 -2 l
2 -2 l
cl

gsave
0.75 0.75 0 setrgbcolor
fill
grestore
stroke
grestore
} bind def
72.0849 197.598 o
78.8517 197.494 o
85.6186 197.341 o
92.3855 197.118 o
99.1524 196.794 o
105.919 196.332 o
112.686 195.676 o
119.453 194.755 o
126.22 193.476 o
132.987 191.717 o
139.759 189.328 o
146.526 186.125 o
153.293 181.894 o
160.06 176.4 o
166.827 169.406 o
173.593 160.716 o
180.36 150.219 o
187.127 137.97 o
193.894 124.259 o
200.661 109.662 o
207.428 95.0409 o
214.195 81.4367 o
220.962 69.8705 o
227.729 61.0669 o
234.495 55.2212 o
241.262 51.9429 o
248.029 50.4505 o
254.796 49.9248 o
261.563 49.7893 o
268.33 49.7654 o
275.102 49.7627 o
281.869 49.7626 o
grestore
1.5 setlinewidth
2 setlinecap
0 setgray
gsave
58.888896 42.360788 m
58.888896 205.2 l
stroke
grestore
gsave
349.2 42.360788 m
349.2 205.2 l
stroke
grestore
gsave
58.888896 42.360788 m
349.2 42.360788 l
stroke
grestore
gsave
58.888896 205.2 m
349.2 205.2 l
stroke
grestore
1 setlinewidth
0 setlinecap
0.8 setgray
gsave
246.89224 56.247394 m
341.5 56.247394 l
342.966667 56.247394 343.7 56.980727 343.7 58.447394 c
343.7 197.5 l
343.7 198.966667 342.966667 199.7 341.5 199.7 c
246.89224 199.7 l
245.425573 199.7 244.69224 198.966667 244.69224 197.5 c
244.69224 58.447394 l
244.69224 56.980727 245.425573 56.247394 246.89224 56.247394 c
cl
gsave
1 setgray
fill
grestore
stroke
grestore
2.5 setlinewidth
1 setlinejoin
[16 4 2.5 4] 0 setdash
0 0 1 setrgbcolor
gsave
249.09224 191.45 m
260.09224 191.45 l
271.09224 191.45 l
stroke
grestore
gsave
279.892 187.523 moveto
(psmarker13)
show
grestore
1 setlinewidth
2 setlinejoin
[] 0 setdash
0 setgray
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
2 setlinejoin

0 setlinecap

0 2 m
-0.449028 0.618034 l
-1.902113 0.618034 l
-0.726543 -0.236068 l
-1.175571 -1.618034 l
-0 -0.763932 l
1.175571 -1.618034 l
0.726543 -0.236068 l
1.902113 0.618034 l
0.449028 0.618034 l
cl

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
260.092 175.877 o
grestore
gsave
279.892 171.951 moveto
(psmarker14)
show
grestore
1 setlinejoin
1 0 0 setrgbcolor
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-2 0 m
2 0 l
0 -2 m
0 2 l

gsave
1 0 0 setrgbcolor
fill
grestore
stroke
grestore
} bind def
260.092 160.305 o
grestore
gsave
279.892 156.378 moveto
(psmarker15)
show
grestore
2.5 setlinewidth
[9.25 4] 0 setdash
0 0.5 0 setrgbcolor
gsave
249.09224 144.732465 m
260.09224 144.732465 l
271.09224 144.732465 l
stroke
grestore
gsave
279.892 140.806 moveto
(psmarker16)
show
grestore
1 setlinewidth
[] 0 setdash
0 0.75 0.75 setrgbcolor
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 -2 m
0.530406 -2 1.03916 -1.789267 1.414214 -1.414214 c
1.789267 -1.03916 2 -0.530406 2 0 c
2 0.530406 1.789267 1.03916 1.414214 1.414214 c
1.03916 1.789267 0.530406 2 0 2 c
-0.530406 2 -1.03916 1.789267 -1.414214 1.414214 c
-1.789267 1.03916 -2 0.530406 -2 0 c
-2 -0.530406 -1.789267 -1.03916 -1.414214 -1.414214 c
-1.03916 -1.789267 -0.530406 -2 0 -2 c
cl

gsave
0 0.75 0.75 setrgbcolor
fill
grestore
stroke
grestore
} bind def
260.092 129.16 o
grestore
gsave
279.892 125.233 moveto
(psmarker17)
show
grestore
0 setlinejoin
0 setgray
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

-0 -2.828427 m
2.828427 0 l
0 2.828427 l
-2.828427 0 l
cl

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
260.092 113.587 o
grestore
gsave
279.892 109.661 moveto
(psmarker18)
show
grestore
2.5 setlinewidth
1 setlinejoin
2 setlinecap
1 0 0 setrgbcolor
gsave
249.09224 98.014929 m
260.09224 98.014929 l
271.09224 98.014929 l
stroke
grestore
gsave
279.892 94.088 moveto
(psmarker19)
show
grestore
1 setlinewidth
0 setlinecap
0.75 0 0.75 setrgbcolor
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

-2 -2 m
2 2 l
-2 2 m
2 -2 l

gsave
0.75 0 0.75 setrgbcolor
fill
grestore
stroke
grestore
} bind def
260.092 82.4424 o
grestore
gsave
279.892 78.516 moveto
(psmarker20)
show
grestore
0 setlinejoin
0.75 0.75 0 setrgbcolor
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

0 2 m
-2 -2 l
2 -2 l
cl

gsave
0.75 0.75 0 setrgbcolor
fill
grestore
stroke
grestore
} bind def
260.092 66.8699 o
grestore
gsave
279.892 62.943 moveto
(psmarker21)
show
grestore

end
showpage

%%EndDocument
 @endspecial -600 1200 a
 /End PSfrag
 -600 1200 a -600 -1106 a
 /Hide PSfrag
 -600
-1106 a -1285 -1050 a Fk(PSfrag)20 b(replacements)p -1285
-1018 685 4 v -600 -1015 a
 /Unhide PSfrag
 -600 -1015 a -799 -916 a
  {
 -799
-916 a Black 0 0 0 TeXcolorrgb -2 x Fi(1100)p Black Black
-799 -916 a
  } 0/Place PSfrag
 -799 -916 a -799 -816 a
  {
 -799 -816 a Black
0 0 0 TeXcolorrgb -2 x Fi(1200)p Black Black -799 -816
a
  } 1/Place PSfrag
 -799 -816 a -799 -716 a
  {
 -799 -716 a Black 0 0 0 TeXcolorrgb
-2 x Fi(1300)p Black Black -799 -716 a
  } 2/Place PSfrag
 -799 -716 a -799
-617 a
  {
 -799 -617 a Black 0 0 0 TeXcolorrgb -2 x Fi(1400)p
Black Black -799 -617 a
  } 3/Place PSfrag
 -799 -617 a -799 -517 a
  {
 -799
-517 a Black 0 0 0 TeXcolorrgb -2 x Fi(1500)p Black Black
-799 -517 a
  } 4/Place PSfrag
 -799 -517 a -799 -417 a
  {
 -799 -417 a Black
0 0 0 TeXcolorrgb -2 x Fi(1600)p Black Black -799 -417
a
  } 5/Place PSfrag
 -799 -417 a -889 -306 a
  {
 -889 -306 a Black 0 0 0 TeXcolorrgb
-20 x Fg(T)47 b Ff([K])p Black Black -889 -306 a
  } 6/Place PSfrag
 -889
-306 a -827 -207 a
  {
 -827 -207 a Black 0 0 0 TeXcolorrgb
-2 x Fi(0)p Fd(:)p Fi(000)p Black Black -827 -207 a
  } 7/Place PSfrag
 -827
-207 a -827 -107 a
  {
 -827 -107 a Black 0 0 0 TeXcolorrgb
-2 x Fi(0)p Fd(:)p Fi(001)p Black Black -827 -107 a
  } 8/Place PSfrag
 -827
-107 a -827 -8 a
  {
 -827 -8 a Black 0 0 0 TeXcolorrgb -2
x Fi(0)p Fd(:)p Fi(002)p Black Black -827 -8 a
  } 9/Place PSfrag
 -827 -8
a -827 92 a
  {
 -827 92 a Black 0 0 0 TeXcolorrgb -2 x Fi(0)p
Fd(:)p Fi(003)p Black Black -827 92 a
  } 10/Place PSfrag
 -827 92 a -827
192 a
  {
 -827 192 a Black 0 0 0 TeXcolorrgb -2 x Fi(0)p
Fd(:)p Fi(004)p Black Black -827 192 a
  } 11/Place PSfrag
 -827 192 a -1022
303 a
  {
 -1022 303 a Black 0 0 0 TeXcolorrgb -20 x Fg(X)-949
302 y Fb(MTS)-724 283 y Ff([-])p Black Black -1022 303
a
  } 12/Place PSfrag
 -1022 303 a -981 403 a
  {
 -981 403 a Black 0 0 0 TeXcolorrgb
-1 x Fa(M1:)29 b(5)22 b(torr)p Black Black -981 403 a
  } 13/Place PSfrag

-981 403 a -981 503 a
  {
 -981 503 a Black 0 0 0 TeXcolorrgb
-1 x Fa(M2:)29 b(5)22 b(torr)p Black Black -981 503 a
  } 14/Place PSfrag

-981 503 a -981 602 a
  {
 -981 602 a Black 0 0 0 TeXcolorrgb
-1 x Fa(M3:)29 b(5)22 b(torr)p Black Black -981 602 a
  } 15/Place PSfrag

-981 602 a -1095 702 a
  {
 -1095 702 a Black 0 0 0 TeXcolorrgb
-1 x Fa(M1:)28 b(52.5)22 b(torr)p Black Black -1095 702
a
  } 16/Place PSfrag
 -1095 702 a -1095 801 a
  {
 -1095 801 a Black 0 0 0 TeXcolorrgb
-1 x Fa(M2:)28 b(52.5)22 b(torr)p Black Black -1095 801
a
  } 17/Place PSfrag
 -1095 801 a -1095 901 a
  {
 -1095 901 a Black 0 0 0 TeXcolorrgb
-1 x Fa(M3:)28 b(52.5)22 b(torr)p Black Black -1095 901
a
  } 18/Place PSfrag
 -1095 901 a -1072 1001 a
  {
 -1072 1001 a Black 0 0 0 TeXcolorrgb
-1 x Fa(M1:)28 b(100)22 b(torr)p Black Black -1072 1001
a
  } 19/Place PSfrag
 -1072 1001 a -1072 1100 a
  {
 -1072 1100 a Black 0 0 0
TeXcolorrgb -1 x Fa(M2:)28 b(100)22 b(torr)p Black Black
-1072 1100 a
  } 20/Place PSfrag
 -1072 1100 a -1072 1200 a
  {
 -1072 1200 a Black
0 0 0 TeXcolorrgb -1 x Fa(M3:)28 b(100)22 b(torr)p Black
Black -1072 1200 a
  } 21/Place PSfrag
 -1072 1200 a 2400 1200 a
 currentpoint grestore moveto
 2400 1200
a Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
